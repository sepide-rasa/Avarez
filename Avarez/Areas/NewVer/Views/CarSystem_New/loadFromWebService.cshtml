@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
    .Resizable(false)
    .Listeners(li => li.AfterRender.Handler = "ValidationsSystem();")
    .Width(570)
    //.Height(147)
    .Title("بارگذاری از سرور")
    .Layout(LayoutType.Fit)
    .ID("LoadingCarSystem")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("بارگذاری")
            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
            .Listeners(l => l.Click.Handler = "LoadingCarSystem();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
            .OnClientClick("App.LoadingCarSystem.destroy();"))
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .Border(false)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .PaddingSpec("15px 0 0 0")
                           .Layout(LayoutType.VBox)
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    //.Defaults(new { Margin = 3 })
                    //.Layout(LayoutType.Table)
                    //.LayoutConfig(new TableLayoutConfig { Columns = 4 })
                     .Items(
                        X.FieldSet().Height(80)
                            .Border(true)
                                .Title("اطلاعات سیستم خودرو")
                            .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 4 })
                    .Items(
                        X.Label("نوع ساخت:"),
                        X.ComboBox()
                            .ItemID("cboCarMakeS")
                            .EmptyText("نوع ساخت خودرو...")
                            .TypeAhead(true)
                            .AllowBlank(false)
                            .BlankText("لطفا نوع ساخت را انتخاب نمایید.")
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .Editable(true)
                            .Width(190)
                            .TriggerAction(TriggerAction.All)
                            .DisplayField("fldName")
                            .ValueField("fldID")
                            .Listeners(l => l.Select.Handler = "App.LoadingCarSystem.queryById('cboCarAccountTypesS').getStore().load();")
                            .Store(X.Store()
                                .Model(X.Model()
                                    .IDProperty("fldID")
                                    .Fields(
                                        new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                        )
                                .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetCascadeMake"))
                                    .Reader(X.JsonReader().Root("data")))
                                ),
                            X.Label("نوع کاربری:"),
                            X.ComboBox()
                                .ItemID("cboCarAccountTypesS")
                                .EmptyText("نوع کاربری خودرو...")
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .BlankText("لطفا نوع کاربری را انتخاب نمایید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .Editable(true)
                                .Width(190)
                                .TriggerAction(TriggerAction.All)
                                .Listeners(l => l.Select.Handler = "App.LoadingCarSystem.queryById('cboCarCabinS').getStore().load();")
                                .DisplayField("fldName")
                                .ValueField("fldID")
                                .Store(X.Store()
                                    .AutoLoad(false)
                                    .Model(X.Model()
                                            .IDProperty("fldID")
                                        .Fields(
                                            new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                            )
                                    .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetCascadeAccount"))
                                        .Reader(X.JsonReader().Root("data")))
                                    .Parameters(ps => ps.Add(new StoreParameter("cboCarMake", "App.LoadingCarSystem.queryById('cboCarMakeS').getValue()", ParameterMode.Raw)))
                                    ),
                            X.Label("نوع کابین:"),
                            X.ComboBox()
                                .ItemID("cboCarCabinS")
                                .EmptyText("نوع کابین خودرو...")
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .BlankText("لطفا نوع کابین را انتخاب نمایید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .Editable(true)
                                .Width(190)
                                .TriggerAction(TriggerAction.All)
                                .DisplayField("fldName")
                                    .ValueField("fldID")
                                .Store(X.Store()
                                    .AutoLoad(false)
                                    .Model(X.Model()
                                            .IDProperty("fldID")
                                        .Fields(
                                            new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                            )
                                    .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetCascadeCabin"))
                                        .Reader(X.JsonReader().Root("data")))
                                    .Parameters(ps => ps.Add(new StoreParameter("cboCarAccountTypes", "App.LoadingCarSystem.queryById('cboCarAccountTypesS').getValue()", ParameterMode.Raw)))
                                    )
                                 )
                )
            )
        )
)

<script type="text/javascript">
    function ValidationsSystem() {
        App.LoadingCarSystem.queryById('cboCarMakeS').validate();
        App.LoadingCarSystem.queryById('cboCarAccountTypesS').validate();
        App.LoadingCarSystem.queryById('cboCarCabinS').validate();
    }

    function LoadingCarSystem() {
        var er = false;
        if (App.LoadingCarSystem.queryById('cboCarMakeS').validate() == false) {
            er = true;
        }

        if (App.LoadingCarSystem.queryById('cboCarAccountTypesS').validate() == false) {
            er = true;
        }

        if (App.LoadingCarSystem.queryById('cboCarCabinS').validate() == false) {
            er = true;
        }
        if (er == true)
            return;

        App.LoadingCarSystem.body.mask("در حال بارگذاری...");
        $.getJSON("/NewVer/CarSystem_New/loadFromWebServiceSystem",
        {
            CarMakeType: App.LoadingCarSystem.queryById('cboCarMakeS').getDisplayValue(),
            CarAccountType: App.LoadingCarSystem.queryById('cboCarAccountTypesS').getDisplayValue(),
            CarCabin: App.LoadingCarSystem.queryById('cboCarCabinS').getDisplayValue(),
            CarSystem: "",
            CarTip: "",
            CarClass: ""
        },
        function (data) {
            /*if (!data) {*/
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.CarSystem.queryById('GridCarSystem').store.load();
                App.LoadingCarSystem.body.mask().hide();
            /*}
            else {
                alert(data);
            }*/
        });
        /*Ext.net.DirectMethod.request({
            url: '/NewVer/CarSystem_New/loadFromWebServiceSystem',
            params: {
                CarMakeType: App.LoadingCarSystem.queryById('cboCarMakeS').getDisplayValue(),
                CarAccountType: App.LoadingCarSystem.queryById('cboCarAccountTypesS').getDisplayValue(),
                CarCabin: App.LoadingCarSystem.queryById('cboCarCabinS').getDisplayValue(),
                CarSystem: "",
                CarTip: "",
                CarClass: ""
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.CarSystem.queryById('GridCarSystem').store.load();
                App.LoadingCarSystem.body.mask().hide();
            }
        });*/
    }

</script>