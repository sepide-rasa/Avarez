@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}


@(Html.X().Window()
    .Modal(true)
            //.Listeners(li => li.AfterRender.Handler = "LoadArea();")
    .Resizable(false)
    .Width(560)
   // .Height(235)
    .Title("تعریف ناحیه")
    .Layout(LayoutType.Fit)
        .ID("NewArea")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                .Listeners(l => l.Click.Handler = "SaveArea();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
                        .OnClientClick("App.NewArea.destroy();"))
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .Border(false)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .PaddingSpec("15px 0 0 0")
                        .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.FieldSet()
                            .Border(true)
                            .Title("ناحیه").Height(168)
                            .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 4 })
                            .Items(
                                X.Hidden().ItemID("fldId"),
                                X.Label("استان:"),
                                X.ComboBox()
                                .ItemID("cboState")
                                .LabelAlign(Ext.Net.LabelAlign.Left)
                                .Editable(false)
                                .TypeAhead(true)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .TriggerAction(TriggerAction.All)
                                .DisplayField("fldName")
                                .ValueField("fldID")
                                .EmptyText("نام استان...")
                                .Width(190)
        //.Listeners(ls =>
        //ls.Select.Handler = "App.NewCity.queryById('CboState').clearValue(); App.NewCity.queryById('CboState').getStore().load()"
        //    )
                                    .Listeners(ls => ls.Select.Handler = " App.NewArea.queryById('cboCounty').getStore().load();")
        //.ValueNotFoundText("استان...")
                                    .Store(X.Store()//.AutoLoad(false)
                                    .Model(X.Model()
                                    .IDProperty("fldID")
                                        .Fields(
                                            new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                        )
                                    )
                                        .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetCascadeState"))
                                        .Reader(X.JsonReader().Root("data"))
                                        )
                                                    .Listeners(li => li.Load.Handler = "LoadArea();")
                            )
                                .AllowBlank(false)
                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                .BlankText("لطفا استان مورد نظر را انتخاب کنید."),
                                X.Label("شهرستان:"),
                                    X.ComboBox()
                                    .ItemID("cboCounty")
                                    .EmptyText("نام شهرستان...")
                                    .LabelAlign(Ext.Net.LabelAlign.Left)
                                    .TypeAhead(true)
                                    .Editable(false)
                                    .AllowBlank(false)
                                    .BlankText("لطفا شهرستان مورد نظر را انتخاب نمایید.")
                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .Width(190)
                                    .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldName")
                                        .ValueField("fldID")
                                            .Listeners(ls => ls.Select.Handler = " App.NewArea.queryById('cboZone').getStore().load();")
                                        .Store(X.Store().AutoLoad(false)
                                        .Model(X.Model()
                                        .IDProperty("fldID")
                                            .Fields(
                                                    new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                                )
                                        .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetCascadeCounty"))
                                            .Reader(X.JsonReader().Root("data")))
                                                .Parameters(ps => ps.Add(new StoreParameter("cboState", "App.NewArea.queryById('cboState').getValue()", ParameterMode.Raw)))
                                                        ),
                                       
                                        X.Label("بخش:"),
                                            X.ComboBox()
                                            .ItemID("cboZone")
                                            .EmptyText("نام بخش...")
                                            .LabelAlign(Ext.Net.LabelAlign.Left)
                                            .TypeAhead(true)
                                            .Editable(false)
                                            .AllowBlank(false)
                                            .BlankText("لطفا بخش مورد نظر را انتخاب نمایید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .Width(190)
                                            .TriggerAction(TriggerAction.All)
                                                .DisplayField("fldName")
                                                .ValueField("fldID")
                                                .Listeners(ls => ls.Select.Handler = " App.NewArea.queryById('cboCity').getStore().load();")
                                                .Store(X.Store().AutoLoad(false)
                                                .Model(X.Model()
                                                .IDProperty("fldID")
                                                    .Fields(
                                                            new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                                        )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetCascadeZone"))
                                                    .Reader(X.JsonReader().Root("data")))
                                                    .Parameters(ps => ps.Add(new StoreParameter("cboCounty", "App.NewArea.queryById('cboCounty').getValue()", ParameterMode.Raw)))
                                                                ),
                                        X.Label("شهر:"),
                                            X.ComboBox()
                                                .ItemID("cboCity")
                                            .EmptyText("نام شهر...")
                                            .LabelAlign(Ext.Net.LabelAlign.Left)
                                            .TypeAhead(true)
                                            .Editable(false)
                                            .AllowBlank(false)
                                            .BlankText("لطفا شهر مورد نظر را انتخاب نمایید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .Width(190)
                                            .TriggerAction(TriggerAction.All)
                                                .DisplayField("fldName")
                                                .ValueField("fldID")
                                                                .Listeners(ls => ls.Select.Handler = " App.NewArea.queryById('cboMnu').getStore().load();")
                                                .Store(X.Store().AutoLoad(false)
                                                .Model(X.Model()
                                                .IDProperty("fldID")
                                                    .Fields(
                                                            new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                                        )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetCascadeCity"))
                                                    .Reader(X.JsonReader().Root("data")))
                                                    .Parameters(ps => ps.Add(new StoreParameter("cboZone", "App.NewArea.queryById('cboZone').getValue()", ParameterMode.Raw)))
                                                                ),
                                        X.Label("شهرداری:"),
                                            X.ComboBox()
                                            .ItemID("cboMnu")
                                            .EmptyText("نام شهرداری...")
                                            .LabelAlign(Ext.Net.LabelAlign.Left)
                                            .TypeAhead(true)
                                            .Editable(false)
                                            .AllowBlank(false)
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .BlankText("لطفا شهرداری مورد نظر را انتخاب نمایید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .Width(190)
                                            .TriggerAction(TriggerAction.All)
                                                .DisplayField("fldName")
                                                .ValueField("fldID")
                                                                .Listeners(ls => ls.Select.Handler = " App.NewArea.queryById('cboLocal').getStore().load();")
                                                .Store(X.Store().AutoLoad(false)
                                                .Model(X.Model()
                                                .IDProperty("fldID")
                                                    .Fields(
                                                            new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                                        )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetCascadeMunicipality"))
                                                    .Reader(X.JsonReader().Root("data")))
                                                    .Parameters(ps => ps.Add(new StoreParameter("cboCity", "App.NewArea.queryById('cboCity').getValue()", ParameterMode.Raw)))
                                                                ),                                                                                                   
                                    X.Label("نام منطقه:"),
                                    X.ComboBox()
                                        .ItemID("cboLocal")
                                        .EmptyText("نام منطقه...")
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .TypeAhead(true)
                                        //.AllowBlank(false)
                                        //.BlankText("لطفا منطقه مورد نظر را انتخاب نمایید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                        .ForceSelection(true)
                                        .Width(190)
                                        .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldName")
                                            .ValueField("fldID")
                                        .Store(X.Store()
                                            .AutoLoad(false)
                                            .Model(X.Model()
                                            .IDProperty("fldID")
                                                .Fields(
                                                    new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                                    )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetCascadeLocal"))
                                                .Reader(X.JsonReader().Root("data")))
                                                            .Parameters(ps => ps.Add(new StoreParameter("cboMnu", "App.NewArea.queryById('cboMnu').getValue()", ParameterMode.Raw)))
                                                    ),
                                X.Label("نام ناحیه:"),
                                X.TextField()
                                    .ItemID("txtName")
                                    .EnforceMaxLength(true)
                                    .MaxLength(50)
                                .Width(190)
                                .AllowBlank(false)
                                .BlankText("لطفا نام ناحیه را وارد نمایید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("توضیحات:"),
                                X.TextArea()
                                    .ItemID("txtDesc")
                                    .Width(190)
                            )
                )
            )
        )
)

<script type="text/javascript">
    function LoadArea() {
        if ('@ViewBag.Id' != '0') {
            App.NewArea.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/Area_New/Details',
                params: {
                    Id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 0) {
                        var cboState = App.NewArea.queryById('cboState');
                        cboState.setValue(data.fldStateID);
                        App.NewArea.queryById('cboCounty').clearValue(); App.NewArea.queryById('cboCounty').getStore().load();
                        var cboCounty = App.NewArea.queryById('cboCounty');
                        cboCounty.setValue(data.fldCountyID);
                        App.NewArea.queryById('cboZone').clearValue(); App.NewArea.queryById('cboZone').getStore().load();
                        var cboZone = App.NewArea.queryById('cboZone');
                        cboZone.setValue(data.fldZoneID);
                        App.NewArea.queryById('cboCity').clearValue(); App.NewArea.queryById('cboCity').getStore().load();
                        var cboCity = App.NewArea.queryById('cboCity');
                        cboCity.setValue(data.fldCityID);
                        App.NewArea.queryById('cboMnu').clearValue(); App.NewArea.queryById('cboMnu').getStore().load();
                        var cboMnu = App.NewArea.queryById('cboMnu');
                        cboMnu.setValue(data.fldMunicipalityID);
                        App.NewArea.queryById('cboLocal').clearValue(); App.NewArea.queryById('cboLocal').getStore().load();
                        var cboLocal = App.NewArea.queryById('cboLocal');
                        cboLocal.setValue(data.fldLocalID);
                        var txtName = App.NewArea.queryById('txtName');
                        txtName.setValue(data.fldName);
                        var txtDesc = App.NewArea.queryById('txtDesc');
                        txtDesc.setValue(data.fldDesc);
                        var Id = App.NewArea.queryById('fldId');
                        Id.setValue(data.fldId);
                    }
                    else if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    App.NewArea.body.mask().hide();
                }
            });
        }
        else {
            App.NewArea.queryById('cboState').validate();
            App.NewArea.queryById('cboCounty').validate();
            App.NewArea.queryById('cboZone').validate();
            App.NewArea.queryById('cboCity').validate();
            App.NewArea.queryById('cboMnu').validate();
            App.NewArea.queryById('txtName').validate();
        }
    }

    function SaveArea() {
        var cboState= App.NewArea.queryById('cboState');
        var cboCounty= App.NewArea.queryById('cboCounty');
        var cboZone= App.NewArea.queryById('cboZone');
        var cboCity= App.NewArea.queryById('cboCity');
        var cboMnu= App.NewArea.queryById('cboMnu');
        var cboLocal = App.NewArea.queryById('cboLocal');
        var txtName = App.NewArea.queryById('txtName');
        var Id = App.NewArea.queryById('fldId');
        var txtDesc = App.NewArea.queryById('txtDesc');

        var er = false;

        if (cboState.validate() == false) {
            er = true;
        }
        if (cboCounty.validate() == false) {
            er = true;
        }
        if (cboZone.validate() == false) {
            er = true;
        }
        if (cboCity.validate() == false) {
            er = true;
        }
        if (cboMnu.validate() == false) {
            er = true;
        }
        if (txtName.validate() == false) {
            er = true;
        }
        if (er == true)
            return;
        App.NewArea.body.mask("در حال ذخیره سازی...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/Area_New/Save',
            params: {
                fldID: Id.getValue(),
                fldName: txtName.getValue(),
                fldLocalID: cboLocal.getValue(),
                fldMunicipalityID: cboMnu.getValue(),
                fldDesc: txtDesc.getValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.Area.queryById('GridArea').store.load();
                if (data.Er != 1) {
                    ClearArea();
                }
                App.NewArea.body.mask().hide();
            }
        });
    }

    function ClearArea() {
        App.NewArea.queryById('cboState').setValue("");
        App.NewArea.queryById('cboCounty').setValue("");
        App.NewArea.queryById('cboZone').setValue("");
        App.NewArea.queryById('cboCity').setValue("");
        App.NewArea.queryById('cboMnu').setValue("");
        App.NewArea.queryById('cboLocal').setValue("");
        App.NewArea.queryById('txtName').setValue("");
        App.NewArea.queryById('fldId').setValue(0);
    }

   /* function EnterNext() {
        var keyfield = App.NewArea.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }*/

</script>