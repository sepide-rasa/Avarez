@model IEnumerable<Avarez.Models.sp_CitySelect>
@using Ext.Net;
@using Ext.Net.MVC;
@{

    var X = Html.X();
}

@(X.Panel()
        //.Listeners(li => li.AfterRender.Handler = "CityMap();")
    .ID("City_New")
    .Title("شهر")
    .Closable(true)
    .Border(false)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(Ext.Net.LayoutType.Fit)
    .Items(
        X.Panel()
            .ItemID("PnlGridCity_New")
            .Border(false)
            .Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .TopBar(
                        Html.X().Toolbar()
                            .Items(
                                X.Button()
                                    .Text("جدید")
                                    .Icon(Ext.Net.Icon.Add)
        //.ToolTip("کلید میانبر F8")
                                    .Listeners(li => li.Click.Handler = "NewCity_New();"),
                                X.Button()
                                    .Text("ویرایش")
                                    .Icon(Ext.Net.Icon.Pencil)
        //.ToolTip("کلید میانبر F2")
                                    .Listeners(Li => Li.Click.Handler = "EditCity_New();"),
                                X.Button()
                                    .Text("حذف")
                                    .Icon(Ext.Net.Icon.Delete)
        //.ToolTip("کلید میانبر F9")
                                    .Listeners(de => de.Click.Handler = "DeleteCity_New();")
                                   , 
                                    X.Button()
                                .Text("راهنما")
                                .Icon(Ext.Net.Icon.Help)
                                    .Listeners(de => de.Click.Handler = "HelpCity_New();")
                                    )
                                    )
                    .ItemID("GridCity_New")
                    .BottomBar(X.PagingToolbar())
                    .Store(
                        Html.X().StoreForModel()
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
        )
                    .PageSize(20)
                    .RemoteFilter(true)
                    .RemotePaging(true)
                    .Listeners(l => l.DataChanged.Handler = "App.City_New.queryById('GridCity_New').selModel.refresh();")
    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                            Html.X().RowNumbererColumn(),
                            Html.X().Column().DataIndex(Model, m => m.fldID).Text("کد").Hidden(true).Flex(1),
                            Html.X().Column().DataIndex(Model, m => m.fldZoneID).Text("کد بخش").Hidden(true).Flex(1),                            
                            Html.X().Column().DataIndex(Model, m => m.fldStateName).Text("استان").Wrap(true).Flex(3),
                            Html.X().Column().DataIndex(Model, m => m.fldCountyName).Text("شهرستان").Wrap(true).Flex(3),
                            Html.X().Column().DataIndex(Model, m => m.fldZoneName).Text("بخش").Wrap(true).Flex(3),
                            Html.X().Column().DataIndex(Model, m => m.fldName).Text("شهر").Wrap(true).Flex(3),
                            Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(7)
    )
                .SelectionModel(
                    Html.X().RowSelectionModel()
                        .Mode(Ext.Net.SelectionMode.Single)
    )

))
)

<script type="text/javascript">

    function CityMap() {
        var k = new Ext.KeyMap(
            document,
            [{
                target: Ext.get('City_New'),
                scope: this,
                key: [119],
                fn: function (key, event) {
                    if (App.City_New && App.NewCity_New) {
                        if (App.NewCity_New.active == false)
                            NewCity_New();
                    }
                    else if (App.City_New && !App.NewCity_New)
                        NewCity_New();
                }
            },
            {
                target: App.City_New.getTargetEl(),
                scope: this,
                key: [113],
                fn: function (key, event) {
                    if (App.City_New && App.NewCity_New) {
                        if (App.NewCity_New.active == false)
                            EditCity_New();
                    }
                    else if (App.City_New && !App.NewCity_New)
                        EditCity_New();
                }
            },
            {
                target: App.City_New.getTargetEl(),
                scope: this,
                key: [120],
                fn: function (key, event) {
                    if (App.City_New && App.NewCity_New) {
                        if (App.NewCity_New.active == false)
                            DeleteCity_New();
                    }
                    else if (App.City_New && !App.NewCity_New)
                        DeleteCity_New();
                }
            }]
            )
    }

    function NewCity_New() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NewVer/City_New/New',
            params: {
               Id: 0
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function EditCity_New() {
        var SelectedRow = App.City_New.queryById('GridCity_New').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/NewVer/City_New/New',
                params: {
                    Id: SelectedRow.data.fldID,
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteCity_New() {
        var SelectedRow = App.City_New.queryById('GridCity_New').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                        Ext.net.DirectMethod.request({
                            url: '/NewVer/City_New/Delete',
                            params: {
                                Id: SelectedRow.data.fldID
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                Ext.net.Mask.hide();
                                App.City_New.queryById('GridCity_New').store.load();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }


    function HelpCity_New() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NewVer/City_New/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
</script>