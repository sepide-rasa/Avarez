@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}


@(Html.X().Panel().Border(false)
        .Title("تاریخچه ویرایش پرونده")
                     .ID("RptLogCarFile")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
                    X.TabPanel().Border(false).ID("RptLogCarFileTab")
                .Items(

                    X.Panel().Border(false).Title("تاریخچه ویرایش پرونده")
                    .ButtonAlign(Ext.Net.Alignment.Center)
                .DefaultButton("btn")
            .TitleAlign(Ext.Net.TitleAlign.Center)
                   .Buttons(X.Button().Text("چاپ").Icon(Ext.Net.Icon.Printer).Margin(10)
                               .Listeners(l =>
                               {
                                   l.Click.Handler = "PrintLogCarFile()";

                               })
                               .ItemID("btnSave")
                                ,
                                X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                                .OnClientClick("App.RptLogCarFile.destroy()"))
                .Items(

                X.FieldSet().Border(false)
                .Center()
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                .Defaults(new { Margin = 2 })
                .Items(
                        X.Label().Text("از تاریخ:")

                    , X.PDateField()
                        .ItemID("txtAzTarikh")
                        .Width(160)

                        .Editable(false)
                        .MsgTarget(Ext.Net.MessageTarget.Side)
                        .AllowBlank(false)
                        .MaskRe("/[0-9,/]/")
                        .BlankText("لطفا تاریخ را انتخاب نمایید.")
                        .Listeners(l => l.Change.Handler = "AzTarikh()")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                    , X.Label().Text("تا تاریخ:")
                    , X.PDateField()
                                .ItemID("txtTaTarikh")//.PaddingSpec("0 0 9px 0")
                        .Width(160)
                        .MsgTarget(Ext.Net.MessageTarget.Side)
                        .AllowBlank(false)
                        .Editable(false)
                        .MaskRe("/[0-9,/]/")
                        .BlankText("لطفا تاریخ را انتخاب نمایید.")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .Listeners(l => l.Change.Handler = "TaTarikh()")

                            , X.Label("کاربر:"),
                        X.ComboBox()
                        .ItemID("cboUser")
                        .Editable(false)
                        .TypeAhead(true)
                        .QueryMode(DataLoadMode.Local)
                        .ForceSelection(true)
                        .MsgTarget(Ext.Net.MessageTarget.Side)
                            .BlankText("لطفا کاربر مورد نظر را انتخاب نمایید.")
                        .AllowBlank(false)
                        .TriggerAction(TriggerAction.All)
                        .DisplayField("fldName")
                        .ValueField("fldID")
                        .EmptyText(" کاربر...")
                        .Width(160)
                            .Store(X.Store()//.AutoLoad(false)
                                .Listeners(l => l.Load.Handler = "FormLoad()")
                            .Model(X.Model()
                            .IDProperty("fldID")
                                .Fields(
                                    new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                )
                            )
                                .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetUsers"))
                                .Reader(X.JsonReader().Root("data"))
                                ))
                ).ColSpan(3)

                       )
                            .Layout(Ext.Net.LayoutType.VBox)
                            .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                    )

                )
)


<script type="text/javascript">
    var state = '@ViewBag.state';
    function FormLoad() {
        App.RptLogCarFile.queryById('cboUser').setValue('@ViewBag.User');
    }
    function showBargozary() {
        Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال بارگذاری...',
            width: 300,
            wait: true,
            waitConfig:
            {
                /*duration: 10000,*/
                interval: 200,
                /*increment: 15,*/
                text: 'در حال بارگذاری...',
                scope: this
                /*fn: function () {
                    Ext.MessageBox.hide();
                    Ext.Msg.alert('Status', 'Saved successfully!');
                }*/
            }
        });
    }
    function AzTarikh() {
        var txtAzTarikh = App.RptLogCarFile.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptLogCarFile.queryById('txtTaTarikh');
        txtTaTarikh.setMinValue(txtAzTarikh.getValue());
        txtTaTarikh.minText = "تاریخ شروع نباید از تاریخ پایان بزرگتر باشد.";
    }
    function TaTarikh() {
        var txtAzTarikh = App.RptLogCarFile.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptLogCarFile.queryById('txtTaTarikh');
        txtAzTarikh.setMaxValue(txtTaTarikh.getValue());
        txtAzTarikh.maxText = "تاریخ شروع نباید از تاریخ پایان بزرگتر باشد.";
    }
    function PrintLogCarFile() {
        var cboUser = App.RptLogCarFile.queryById('cboUser');
        var txtAzTarikh = App.RptLogCarFile.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptLogCarFile.queryById('txtTaTarikh');
        var er = false;
        if (txtAzTarikh.validate() == false) {
            er = true;
        }
        if (txtTaTarikh.validate() == false) {
            er = true;
        }
        if (cboUser.validate() == false) {
            er = true;
        }
        if (er == true)
            return;

            showBargozary();
            Ext.net.DirectMethod.request({
                url: '/NewVer/AppReport_New/PrintLogCarFile',
                params: {
                    containerId: "RptLogCarFileTab",
                    AzTarikh: txtAzTarikh.rawValue,
                    TaTarikh: txtTaTarikh.rawValue,
                    User: cboUser.getValue()
                },
                success: function () {
                    Ext.MessageBox.hide();
                }
            });
        }
</script>