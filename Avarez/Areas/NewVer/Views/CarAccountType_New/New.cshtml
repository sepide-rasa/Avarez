@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}


@(Html.X().Window()
    .Modal(true)
        .Listeners(li => li.AfterRender.Handler = "LoadCarAccountType();")
    .Resizable(false)
    .Width(310)
    //.Height(210)
    .Title("تعریف نوع کاربری")
    .Layout(LayoutType.Fit)
            .ID("NewCarAccountType")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
            .Listeners(l => l.Click.Handler = "SaveCarAccountType();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
            .OnClientClick("App.NewCarAccountType.destroy();"))
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .Border(false)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .PaddingSpec("15px 0 0 0")
                           .Layout(LayoutType.VBox)
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.FieldSet().Height(143)
                            .Border(true)
                            .Title("نوع کاربری")
                            .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                            .Items(
                                X.Hidden().ItemID("fldId"),
                                X.Label("نوع ساخت:"),
                                X.ComboBox()
                                .ItemID("cboCarMake")
                                    .LabelAlign(Ext.Net.LabelAlign.Left)
                                .Editable(false)
                                .TypeAhead(true)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .TriggerAction(TriggerAction.All)
                                    .AllowBlank(false)
                                        .BlankText("لطفا نوع ساخت را انتخاب نمایید.")
                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                .DisplayField("fldName")
                                .ValueField("fldID")
                                .EmptyText("نوع ساخت خودرو...")
                                .Width(190)
                                        .Store(X.Store()//.AutoLoad(false)
                                    .Model(X.Model()
                                                .IDProperty("fldID")
                                        .Fields(
                                            new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                        )
                                    )
                                        .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetCascadeMake"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                            .Listeners(li => li.Load.Handler = "LoadCarAccountType();")
                            )
                                ,X.Label("نوع کاربری:"),
                                X.TextField()
                                    .ItemID("txtCarAccountType")
                                    .EnforceMaxLength(true)
                                    .MaxLength(50)
                                    .Width(190)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نوع کاربری را وارد نمایید.")
                                    .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("توضیحات:"),
                                X.TextArea()
                                    .ItemID("txtDesc")
                                    .Width(190)
                            )
                )
            )
        )
)

<script type="text/javascript">
    function LoadCarAccountType() {
        if ('@ViewBag.Id' != '0') {
            App.NewCarAccountType.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/CarAccountType_New/Details',
                params: {
                    Id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 0) {
                        var txtCarAccountType = App.NewCarAccountType.queryById('txtCarAccountType');
                        txtCarAccountType.setValue(data.fldName);
                        var txtDesc = App.NewCarAccountType.queryById('txtDesc');
                        txtDesc.setValue(data.fldDesc); 
                        var cboCarMake = App.NewCarAccountType.queryById('cboCarMake');
                        cboCarMake.setValue(data.fldCarMakeID);
                        var Id = App.NewCarAccountType.queryById('fldId');
                        Id.setValue(data.fldId);
                    }
                    else if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    App.NewCarAccountType.body.mask().hide();
                }
            });
        }
        else {
            App.NewCarAccountType.queryById('txtCarAccountType').validate();
            App.NewCarAccountType.queryById('cboCarMake').validate();
        }
    }

    function SaveCarAccountType() {
        var cboCarMake = App.NewCarAccountType.queryById('cboCarMake');
        var txtCarAccountType = App.NewCarAccountType.queryById('txtCarAccountType');
        var Id = App.NewCarAccountType.queryById('fldId');
        var txtDesc = App.NewCarAccountType.queryById('txtDesc');

        var er = false;

        if (txtCarAccountType.validate() == false) {
            er = true;
        }
        if (cboCarMake.validate() == false) {
            er = true;
        }
        if (er == true)
            return;

        App.NewCarAccountType.body.mask("در حال ذخیره سازی...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/CarAccountType_New/Save',
            params: {
                fldID: Id.getValue(),
                fldName: txtCarAccountType.getValue(),
                fldCarMakeID: cboCarMake.getValue(),
                fldDesc: txtDesc.getValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.CarAccountType.queryById('GridCarAccountType').store.load();
                if (data.Er != 1) {
                    ClearCarAccountType();
                }
                App.NewCarAccountType.body.mask().hide();
            }
        });
    }

    function ClearCarAccountType() {
        App.NewCarAccountType.queryById('txtDesc').setValue("");
        App.NewCarAccountType.queryById('txtCarAccountType').setValue("");
        App.NewCarAccountType.queryById('cboCarMake').setValue("");
        App.NewCarAccountType.queryById('fldId').setValue(0);
    }

  /*  function EnterNext() {
        var keyfield = App.NewCarAccountType.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }*/

</script>