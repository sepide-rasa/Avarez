@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

<style>
    .LblStyle {
        height: auto;
    }

    .LblRed {
        color: red;
    }
</style>

@(Html.X().Window()
    .Modal(true)
    .Width(712)
    .Resizable(false)
    .Title("ثبت سرویس پیشخوان")
    .ID("PishkhanService_New")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(LayoutType.Fit)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)//.ToolTip("کلید میانبر F8")
            .Listeners(l =>
            {
                l.Click.Handler = "SavePishkhanService_New();";
            })
            .ItemID("btnSave"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)//.ToolTip("کلید میانبر Esc")
            .OnClientClick("App.PishkhanService_New.destroy()"))
    .Items(
        X.FormPanel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align=VBoxAlign.Center})
            .Items(
                X.FieldSet()
                    .Border(false)
                    .PaddingSpec("5px 0 10px 0")
                    .Layout(Ext.Net.LayoutType.Table)
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                    .Items(
                        X.Hidden().ItemID("fldId"),
                        X.Hidden().ItemID("countryId"),
                        X.Hidden().ItemID("countrySID"),
                        X.Hidden().ItemID("countryNType"),
                        X.Label("کد سرویس:"),
                        X.TextField()
                            .ItemID("txtServiceCode")
                            .MaskRe("[0-9]")
                            .Width(170)
                            .AllowBlank(false)
                            .BlankText("لطفا کد سرویس را وارد نمایید.")
                            .MsgTarget(MessageTarget.Side),
                        X.Label("توضیحات:"),
                        X.TextArea()
                            .ItemID("txtDesc")
                            .Width(170)
                    ),
                X.Panel()
                    .Layout(LayoutType.HBox)
                    .Border(false)
                    .Defaults(new { Margin = 5 })
                    .Items(
                        X.FieldSet()
                            .Border(true)
                            .Title("موقعیت در تقسیمات کشوری")
                            .Width(330)
                            .Height(400)
                            .Layout(LayoutType.Column)
                            .Defaults(new { Margin = 2 })
                            .Items(
                                X.TreePanel()
                                    .ID("TreeCountryps")
                                    .AutoScroll(true)
                                    .Width(305)
                                    .ColSpan(2)
                                    .Expand(true)
                                    .Height(300)
                                    .Expand(true)
                                    .UseArrows(true)
                                    .Border(false)
                                    .Listeners(a =>
                                        {
                                            a.Select.Handler = "GetTreeCountryIdps(record);";
                                            a.AfterRender.Handler = "this.getRootNode().expand();";
                                        })
                                    .Root(Html.X().Node().NodeID("0").Cls("0").DataPath("0").Text("تقسیمات کشوری"))
                                    .Listeners(l =>
                                    {
                                        l.BeforeLoad.Fn = "nodeLoadTreeCountryps";
                                    })
                                , X.Label()
                                .Cls("LblRed")
                                .Text("مورد انتخاب شده: ")
                                , X.Label()

                                .Cls("LblStyle")
                                .ItemID("lblTitleCountry")
                                )
                                    )
                                    )

            )
        )

<script type="text/javascript">

    setTimeout("LoadPishkhanService_New()", 700);

    var nodeLoadTreeCountryps = function (store, operation, options) {
        var node = operation.node;
        Ext.net.DirectMethod.request({
            url: '/NewVer/PishkhanService/NodeLoadTreeCountry',
            params: {
                nod: node.getId()
            },
            success: function (result) {
                node.set('loading', false);
                node.set('loaded', true);
                node.appendChild(result);
                node.expand();
            },

            failure: function (errorMsg) {
                Ext.Msg.alert('Failure', errorMsg);
            }
        });

        return false;
    };

    function GetTreeCountryIdps(record) {
        var path = record.getPath("text");
        var Text = path.split('/').splice(1).join("-->");
        App.PishkhanService_New.queryById('countryId').setValue(record.getId());
        App.PishkhanService_New.queryById('countrySID').setValue(record.data.cls);
        App.PishkhanService_New.queryById('countryNType').setValue(record.data.dataPath);
        if (record.getId() != 0) {
            App.PishkhanService_New.queryById('lblTitleCountry').setText(Text);
        }
        else {
            App.PishkhanService_New.queryById('lblTitleCountry').setText("");
        }
    };

    function LoadPishkhanService_New() {
        if ('@ViewBag.Id' != '0') {
            App.PishkhanService_New.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/PishkhanService/Details',
                params: {
                    id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 0) {
                        var countrySID = App.PishkhanService_New.queryById('countrySID');
                        countrySID.setValue(data.fldCountryCode);
                        var countryNType = App.PishkhanService_New.queryById('countryNType');
                        countryNType.setValue(data.fldCountryType);
                        var txtDesc = App.PishkhanService_New.queryById('txtDesc');
                        txtDesc.setValue(data.fldDesc);
                        var txtServiceCode = App.PishkhanService_New.queryById('txtServiceCode');
                        txtServiceCode.setValue(data.fldServiceId);
                        var Id = App.PishkhanService_New.queryById('fldId');
                        Id.setValue(data.fldId);
                    }
                    else if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    App.PishkhanService_New.body.mask().hide();
                }
            });
        }
        else {
            App.PishkhanService_New.queryById('txtServiceCode').validate();
            App.TreeCountryps.getSelectionModel().select(1);
        }

    }

    function SavePishkhanService_New() {
        var countryId = App.PishkhanService_New.queryById('countryId');
        var countrySID = App.PishkhanService_New.queryById('countrySID');
        var countryNType = App.PishkhanService_New.queryById('countryNType');
        var txtServiceCode = App.PishkhanService_New.queryById('txtServiceCode');
        var txtDesc = App.PishkhanService_New.queryById('txtDesc');
        var Id = App.PishkhanService_New.queryById('fldId');
        var er = false;

        if (txtServiceCode.validate() == false) {
            er = true;
        }
        if (countrySID.getValue() == 0 || countrySID.getValue() == null) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا موقعیت را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            er = true;
        }

        if (er == true)
            return;
        App.PishkhanService_New.body.mask("در حال ذخیره سازی...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/PishkhanService/Save',
            params: {
                fldId: Id.getValue(),
                fldServiceId: txtServiceCode.getValue(),
                fldDesc: txtDesc.getValue(),
                CountryCode: countrySID.getValue(),
                CountryType: countryNType.getValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    Name: data.MsgName,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.PishkhanService_New.body.mask().hide();
                App.PishkhanService.queryById('GridPishkhanService').store.load();
                if (data.Er != 1)
                    ClearPishkhanService_New();
            }

        });
    }

    function ClearPishkhanService_New() {
        App.PishkhanService_New.queryById('countryId').setValue(0);
        App.PishkhanService_New.queryById('fldId').setValue(0);
        App.PishkhanService_New.queryById('txtDesc').setValue("");
        App.PishkhanService_New.queryById('txtServiceCode').setValue("");
        App.TreeCountryps.getSelectionModel().select(1);
    }
   /* function EnterNext() {
        var keyfield = App.NewAmountCost_New.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();

    }*/
</script>