@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using Ext.Net.Utilities;
@{
    var X = Html.X();
}
<script src="~/Scripts/accounting.js"></script>

@(Html.X().Window()
    .Modal(true)
        .Listeners(li => li.AfterRender.Handler = "LoadUserName();")
    .Resizable(true)
    .Width(313)
    .Height(320)
    .Title("ثبت نام")
       .Icon(Icon.UserAdd)
    .Layout(LayoutType.Fit)
    .ID("Register_Guest")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("دریافت کد فعالسازی")
            .Icon(Ext.Net.Icon.BulletGet)
        //.ToolTip("کلید میانبر F8")
                .Listeners(l => l.Click.Handler = "SaveRegister_Guest();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
                    .OnClientClick("destroy();"))
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .Border(false)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .PaddingSpec("15px 0 0 0")
                    .Items(
                        X.FieldSet()
                            .Border(false)
                            .Defaults(new { Margin = 2 })
                            //.Layout(LayoutType.VBox)
                            //    .LayoutConfig(new VBoxLayoutConfig { Align=VBoxAlign.Right })
                            .Layout(LayoutType.Table)
                                .LayoutConfig(new TableLayoutConfig { Columns=2})
                            .Items(
                                X.Hidden().ItemID("fldId"),
                                //X.Label("استان:"),
                                X.ComboBox().ColSpan(2)
                                    .FieldLabel("استان")
                                    .ItemID("cboStateG")
                                    .Width(270)
                                    .LabelAlign(Ext.Net.LabelAlign.Left)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldName")
                                        .ValueField("fldID")
                                    .EmptyText("استان...")
                                    //.Width(190)
                                    .Listeners(ls => ls.Select.Handler = " App.Register_Guest.queryById('CboMnuG').getStore().load();")
                                    .Store(X.Store()
                                        .Model(X.Model()
                                            .IDProperty("fldID")
                                            .Fields(
                                                new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                        )
                                    .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetCascadeState"))
                                        .Reader(X.JsonReader().Root("data"))
                                    )
                                )
                                    .AllowBlank(false)
                                    .BlankText("لطفا استان مورد نظر را انتخاب نمایید."),
                                //X.Label("شهرداری:"),
                                    X.ComboBox().ColSpan(2)
                                    .FieldLabel("نام شهرداری")
                                    .ItemID("CboMnuG")
                                    .Width(270)
                                    .EmptyText("نام شهرداری...")
                                    .LabelAlign(Ext.Net.LabelAlign.Left)
                                    .TypeAhead(true)
                                    .Editable(false)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نام شهرداری مورد نظر را انتخاب نمایید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                   // .Width(190)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldName")
                                    .ValueField("fldID")
                                    .Store(X.Store().AutoLoad(false)
                                        .Model(X.Model()
                                            .IDProperty("fldID")
                                            .Fields(
                                                new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                                )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetCascadeCounty"))
                                            .Reader(X.JsonReader().Root("data")))
                                        .Parameters(ps => ps.Add(new StoreParameter("ID", "App.Register_Guest.queryById('cboStateG').getValue()", ParameterMode.Raw)))
                                                        ),
                                //X.Label("نوع مالکیت:"),
                                    X.ComboBox().ColSpan(2)
                                    .ItemID("cboTypeG")
                                    .FieldLabel("نوع مالکیت")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .Width(270)
                                    //.Width(190)
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .SelectedItems(new { Value = "1" })
                                    .Items(
                                            new ListItem("حقیقی", "1"),
                                            new ListItem("حقوقی", "0")
                                        )
                                    .Listeners(l => { l.Select.Handler = "ChangeCboTypeG()"; }),
                                //X.Label("کد ملی:").ItemID("lblCodeMeli"),
                                    X.TextField().ColSpan(2)
                                .ItemID("txtCodeMeli")
                                .FieldLabel("کد ملی")
                                .Width(270)
                                //.Width(190)
                                .Plugins(X.InputMask()
                                        .Mask("AAAAAAAAAA")
                                        .UnmaskOnBlur(true)
                                        .ClearWhenInvalid(true)
                                        .MaskSymbols(ls =>
                                        {
                                            ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                        })
                                    )
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .AllowBlank(false)
                                .BlankText("لطفا کد ملی را وارد کنید.")
                                .Focus(true),
                                //X.Label("کد اقتصادی:").ItemID("lblCodeEghtesadi"),
                                    X.TextField().ColSpan(2)
                                .ItemID("txtCodeEghtesadi")
                                .FieldLabel("شناسه ملی")
                                    .Width(270)
                                //.Width(190)
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .AllowBlank(false)
                                //.MaskRe("/[0-9]/")
                                //.EnforceMaxLength(true)
                                //.Hidden(true)
                                //.MaxLength(12)
                                .Plugins(X.InputMask()
                                        .Mask("AAAAAAAAAAA")
                                        .UnmaskOnBlur(true)
                                        .ClearWhenInvalid(true)
                                        .MaskSymbols(ls =>
                                        {
                                            ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                        })
                                    )
                                .BlankText("لطفا شناسه ملی را وارد نمایید.")
                                //, X.Label("شماره موبایل:"),
                                        , X.PDateField().ColSpan(2)
                                    .FieldLabel("تاریخ تولد")
                                    .ItemID("txtTarikh")
                                    .Width(270)
                                    //.MsgTarget(Ext.Net.MessageTarget.Side)
                                    .AllowBlank(false)
                                    .BlankText("لطفا تاریخ تولد را وارد نمایید.")
                                    , X.TextField().ColSpan(2)
                                .ItemID("txtMobile")
                                .FieldLabel("شماره موبایل")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .AllowBlank(false)
                                .Width(270)
                                .MaskRe("/[0-9]/")
                                //.Width(190)
                                .BlankText("لطفا شماره موبایل را وارد کنید.")
                                .EmptyText("09111111111")
                                    .Plugins(X.InputMask()
                                        .Mask("09AAAAAAAAA")
                                        .ClearWhenInvalid(true)
                                        .MaskSymbols(ls =>
                                        {
                                            ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                        })
                                    )
                                        , X.FieldSet().Width(74)
                                .Border(false)
        //.Defaults(new { Margin = 2 })
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Left })
                                    .Items(
                                                X.Label("کد امنیتی:").ID("CapthaD2")).MarginSpec("0 0 0 30px")

                                        , X.Container().ID("CapthaD3").Content(@<div style="width: 166px;"><input id='txtCapthaloginR' class='text' style='direction:ltr;font-family:sans-serif;width: 166px;height: 22px;' /></div>)

                                     , X.Button().ID("CapthaD4").Icon(Ext.Net.Icon.ArrowRefresh)
                                                .Handler("LoadCapthaR")
                                 ,X.Container().ID("CapthaR").Content(@<div><img id="CaptchaloginR" style="width:166px;height:50px" /></div>)
                                    ).ColSpan(1)  
                            @*, X.FieldSet().Width(180)
                            .Border(false)
                            //.Defaults(new { Margin = 2 })
                                .Layout(LayoutType.VBox)
                                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Right })
                            //.Layout(LayoutType.HBox)
                            //.LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle })
                            .Items(
                               X.FieldSet()
                            .Border(false)
                            //.Defaults(new { Margin = 2 })
            .Layout(LayoutType.HBox)
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle })
                                .Items(
                                     X.Label("کد امنیتی:").ID("CapthaD2")
                                    , X.Container().ID("CapthaD3").Content(@<div><input id='txtCapthaloginR' class='text' style='direction:ltr;font-family:sans-serif;width: 90px;height: 22px;' /></div>)
                                    )
                                    , X.Button().ID("CapthaD4").Icon(Ext.Net.Icon.ArrowRefresh)
                                            .Handler("LoadCapthaR")
                            ).ColSpan(1)*@      
                             @*,X.FieldSet().MarginSpec("-20px 0 0 0")
                            .Border(true).Width(110)
                            //.Defaults(new { Margin = 2 })
                            .Layout(LayoutType.VBox)
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Left })
                            .Items(
                                    X.Container().ID("CapthaR").Content(@<div><img id="CaptchaloginR" style="width:100px;height:30px" /></div>)
                                    ).ColSpan(1)*@    
                          )
                                //    , X.Button().Border(true).Text("ورود").Icon(Icon.DoorIn)
                                //.Listeners(l => l.Click.Handler = "LoginDafaterPishkhan2()")
                           
                )
            )
        )
)


<script type="text/javascript">

    var LoadCapthaR = function () {
        var originalSrc = '@Url.Content("/NewVer/Account_New/generateCaptcha")';
        var antiCachePart = (new Date()).getTime();
        var newSrc = originalSrc + '?dc=' + antiCachePart;
        $("#CaptchaloginR").attr('src', newSrc);

    }

    function LoadUserName() {
        LoadCapthaR();
        var txtCodeMeli = App.Register_Guest.queryById('txtCodeMeli');
        var txtMobile = App.Register_Guest.queryById('txtMobile');
        var cboStateG = App.Register_Guest.queryById('cboStateG');
        var CboMnuG = App.Register_Guest.queryById('CboMnuG');
        var cboTypeG = App.Register_Guest.queryById('cboTypeG');
        var txtCodeEghtesadi = App.Register_Guest.queryById('txtCodeEghtesadi');
        var txtTarikh = App.Register_Guest.queryById('txtTarikh');

        txtMobile.validate();
        cboStateG.validate();
        CboMnuG.validate();
        if (cboTypeG.getValue() == 1) {
            txtCodeMeli.show();
            txtCodeEghtesadi.hide();
            txtCodeMeli.validate();
            txtTarikh.show();
            txtTarikh.validate();
        }
        else {
            txtCodeMeli.hide();
            txtCodeEghtesadi.show();
            txtCodeEghtesadi.validate();
            txtTarikh.hide();
        }


        @*if ('@ViewBag.fldFirstLogin' == 'True')
            App.Register_Guest.queryById('btnExit').hide();
        else
            App.Register_Guest.queryById('btnExit').show();

        Ext.net.DirectMethod.request({
            url: '/Register_Guest/Details',
            success: function (data) {
                App.Register_Guest.queryById('txtCodeMeli').setValue(data.fldUserName);
            }
        });*@
    }

    function ChangeCboTypeG() {
        var cboTypeG = App.Register_Guest.queryById('cboTypeG');
        var txtCodeEghtesadi = App.Register_Guest.queryById('txtCodeEghtesadi');
        var txtCodeMeli = App.Register_Guest.queryById('txtCodeMeli');
        var txtTarikh = App.Register_Guest.queryById('txtTarikh');

        /*var lblCodeMeli = App.Register_Guest.queryById('lblCodeMeli');
        var lblCodeEghtesadi = App.Register_Guest.queryById('lblCodeEghtesadi');*/

        if (cboTypeG.getValue() == 1) {
            /*lblCodeEghtesadi.hide();*/
            txtCodeEghtesadi.hide();
            /*lblCodeMeli.show();*/
            txtCodeMeli.show();
            txtTarikh.show();
            App.Register_Guest.setHeight(320);
        }
        else {
            /*lblCodeMeli.hide();*/
            txtCodeMeli.hide();
            /*lblCodeEghtesadi.show();*/
            txtCodeEghtesadi.show();
            txtTarikh.hide();
            App.Register_Guest.setHeight(300);
        }
    }

    function SaveRegister_Guest() {
        var txtCodeMeli = App.Register_Guest.queryById('txtCodeMeli');
        var txtCodeEghtesadi = App.Register_Guest.queryById('txtCodeEghtesadi');
        var txtMobile = App.Register_Guest.queryById('txtMobile');
        var cboStateG = App.Register_Guest.queryById('cboStateG');
        var CboMnuG = App.Register_Guest.queryById('CboMnuG');
        var fldId = App.Register_Guest.queryById('fldId');
        var cboTypeG = App.Register_Guest.queryById('cboTypeG');
        var txtTarikh = App.Register_Guest.queryById('txtTarikh');
        var txtCapthaloginR = $('#txtCapthaloginR').val();
        var Name = "";
        var gender = "";
        var FatherName = "";
        var officeName = "";
        var ShenasnameNo ="";
        var ShenasnameSeri ="";
         
        if (fldId.getValue() == "")
            fldId.setValue("0");
        var er = false;

        if (cboStateG.validate() == false) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا استان مورد نظر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            return;
        }
        if (CboMnuG.validate() == false) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا شهرداری مورد نظر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            return;
        }
        if (cboTypeG.getValue() == "1") {
            if (txtCodeMeli.validate() == false) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا کد ملی را وارد نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                return;
            }
            if (txtTarikh.validate() == false) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا تاریخ تولد را وارد نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                return;
            }
        }
        else {
            if (txtCodeEghtesadi.validate() == false) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا کد اقتصادی را وارد نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                return;
            }
        }
        /*if (txtCodeMeli.validate() == false) {
            var msg = "";
            if (cboTypeG.getValue() == "1")
            {
                msg = "لطفا کد ملی را وارد نمایید.";
            }
            else {
                msg = "لطفا کد اقتصادی را وارد نمایید.";
            }
            Ext.MessageBox.show({
                title: "خطا",
                msg: msg,
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            return;
        }*/
        if (txtMobile.validate() == false) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا شماره موبایل را وارد نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            return;
        }

        /* if (colour != "green") {
             alert("رمز عبور جدید پیچیدگی لازم را ندارد. ");
             er = true;
         }
        if (er == true)
            return;*/
        m = txtMobile.getValue();
        if (m.substring(0, 2) != "09") {
            Ext.net.Mask.hide();
            Ext.MessageBox.show({
                title: 'خطا',
                msg: 'موبایل وارد شده نامعتبر است.',
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            er = true;
            return;
        }
        else {
            var code;
            var Type;
            if (cboTypeG.getValue() == "1") {
                code = txtCodeMeli.getValue();
                Type = true;
            }
            else {
                code = txtCodeEghtesadi.getValue();
                Type = false;
            }
            Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
            /*App.Register_Guest.body.mask({ msg: 'در حال انجام عملیات...' });*/
            if (cboTypeG.getValue() == "1") {
                Ext.net.DirectMethod.request({
                    url: '/NewVer/SelectParvande/checks',
                    params: {
                        codec: code
                    },
                    success: function (data) {
                        if (data.data == 1) {

                       
                /*Ext.net.DirectMethod.request({
                    url: '/NewVer/Parvande/EstelamSabt',
                    params: {
                        CodeMeli: code,
                        Tarikhtavalod: txtTarikh.getRawValue()
                    },
                    success: function (data) {
                        if (data.Error == "") {
                            Name = data.Name;
                            gender = data.gender;
                            FatherName=data.fatherName;
                            officeName = data.officeName;
                            ShenasnameNo = data.shenasnameNo;
                            ShenasnameSeri=data.shenasnameSerial;
                        }*/

                        Ext.net.DirectMethod.request({
                            url: '/NewVer/Login_Guest/Save',
                            params: {
                                fldId: fldId.getValue(),
                                fldNationalCode: code,
                                fldMobile: txtMobile.getValue(),
                                fldMunId: CboMnuG.getValue(),
                                fldStateId: cboStateG.getValue(),
                                fldTarikhTavalod: txtTarikh.getRawValue(),
                                fldType: Type,
                                Name: Name,
                                gender: gender,
                                Captcha: txtCapthaloginR,
                                FatherName: FatherName,
                                officeName: officeName,
                                ShenasnameNo: ShenasnameNo,
                                ShenasnameSeri: ShenasnameSeri
                            },
                            success: function (data) {
                                if (data.Err == 1) {
                                    ic = Ext.MessageBox.ERROR;
                                    Ext.MessageBox.show({
                                        title: data.MsgTitle,
                                        msg: data.Msg,
                                        icon: Ext.MessageBox.ERROR,
                                        buttons: Ext.MessageBox.OK
                                    });
                                    LoadCapthaR();
                                    Ext.net.Mask.hide();
                                    /*App.Register_Guest.body.mask().hide();*/
                                }
                                else {
                                    
                                    Ext.net.DirectMethod.request({
                                        url: '/NewVer/Login_Guest/VerificationCode',
                                        params: {
                                            Mobile: txtMobile.getValue(),
                                            Name: Name
                                        },
                                        success: function (data) {
                                            ClearRegister_Guest();
                                            Ext.net.Mask.hide();
                                            /*App.Register_Guest.body.mask().hide();*/
                                        }
                                    });
                                }
                                @*if ('@ViewBag.fldFirstLogin' == 'True')
                    App.Register_Guest.destroy();*@
                                

                            }

                        });
                    /*}
                });*/
                        }
                        else {
                            Ext.net.Mask.hide();
                            Ext.MessageBox.show({
                                title: "خطا",
                                msg: "کد ملی وارد شده اشتباه است.",
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                    }
                });
            }
            else
            {
                
                Ext.net.DirectMethod.request({
                    url: '/NewVer/Login_Guest/Save',
                    params: {
                        fldId: fldId.getValue(),
                        fldNationalCode: code,
                        fldMobile: txtMobile.getValue(),
                        fldMunId: CboMnuG.getValue(),
                        fldStateId: cboStateG.getValue(),
                        fldTarikhTavalod: txtTarikh.getRawValue(),
                        fldType: Type,
                        Name: Name,
                        gender: gender,
                        Captcha: txtCapthaloginR,
                        FatherName: FatherName,
                        officeName: officeName,
                        ShenasnameNo: ShenasnameNo,
                        ShenasnameSeri: ShenasnameSeri
                    },
                    success: function (data) {
                        if (data.Err == 1) {
                            ic = Ext.MessageBox.ERROR;
                            Ext.MessageBox.show({
                                title: data.MsgTitle,
                                msg: data.Msg,
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.MessageBox.OK
                            });
                            LoadCapthaR();
                            Ext.net.Mask.hide();
                            /*App.Register_Guest.body.mask().hide();*/
                        }
                        else {
                                    
                            Ext.net.DirectMethod.request({
                                url: '/NewVer/Login_Guest/VerificationCode',
                                params: {
                                    Mobile: txtMobile.getValue(),
                                    Name: Name
                                },
                                success: function (data) {
                                    ClearRegister_Guest();
                                    Ext.net.Mask.hide();
                                    /*App.Register_Guest.body.mask().hide();*/
                                }
                            });
                        }
                        @*if ('@ViewBag.fldFirstLogin' == 'True')
                        App.Register_Guest.destroy();*@
                                

                        }

                });
            }
        }
    }

    function ClearRegister_Guest() {
        App.Register_Guest.queryById('txtCodeMeli').setValue("");
        App.Register_Guest.queryById('txtMobile').setValue("");
    }
    function EnterNext() {
        var keyfield = App.Register_Guest.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();

    }
    function destroy() {
        Ext.net.DirectMethod.request({
            url: '/NewVer/Login_Guest/Destroy'
        });
    }

    function HelpRegister_Guest() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Login_Guest/Help',
            params: {

            },
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
</script>