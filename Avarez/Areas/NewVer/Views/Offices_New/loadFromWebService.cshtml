@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}


@(Html.X().Window().Modal(true).Listeners(li => li.AfterRender.Handler = "ValidationsOffices();")
.Width(555)//.Height(300)
        .Title("بارگذاری از سرور")
         .ID("LoadingOffices")
        .Resizable(false)
        .Closable(true).ButtonAlign(Ext.Net.Alignment.Center)
    .CloseAction(Ext.Net.CloseAction.Destroy)
                   .Buttons(
                    X.Button()
            .Text("بارگذاری")
            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
            .Listeners(l => l.Click.Handler = "LoadingOffices();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
            .OnClientClick("App.LoadingOffices.destroy();"))
    .Items(
        X.FormPanel().Border(false)
        .Border(false)
            .Margin(5)
            .DefaultButton("btn")
        .TitleAlign(Ext.Net.TitleAlign.Center)


                .Items(
                X.Panel().Border(false)
                .PaddingSpec("10px 0 0 0")
                
            .Items(
                X.FieldSet().Border(true).Height(105).Title("اطلاعات دفتر")
                .Center()
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                .Defaults(new { Margin = 2 })
                .Items(
                X.Hidden().ItemID("fldId"),
            X.Label("استان:"),
         X.ComboBox()
            .ItemID("CboState")
        .LabelAlign(Ext.Net.LabelAlign.Top)
        .Editable(false)
        .TypeAhead(true)
        .QueryMode(DataLoadMode.Local)
        .ForceSelection(true)
        .TriggerAction(TriggerAction.All)
            .DisplayField("Name")
            .ValueField("ID")
        .EmptyText("استان...")
        .Width(190)
        //.Listeners(ls =>
        //ls.Select.Handler = "App.LoadingOffices.queryById('CboState').clearValue(); App.LoadingOffices.queryById('CboState').getStore().load()"
        //    )
        .Listeners(ls =>
                    ls.Select.Handler = " App.LoadingOffices.queryById('CboCounty').getStore().load();"
                                )

                .Store(X.Store()//.AutoLoad(false)
            .Model(X.Model()
                        .IDProperty("fldStateId")
                .Fields(
                            new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                            new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" }
                )
            )
            .Proxy(X.AjaxProxy()
                    .Url(Url.Action("GetCascadeState"))
                .Reader(X.JsonReader().Root("data"))
            )
    )
            .AllowBlank(false).MsgTarget(Ext.Net.MessageTarget.Side)
        .BlankText("لطفا استان را انتخاب نمایید."),
        X.Label("شهرستان:"),
                    X.ComboBox()
                        .ItemID("CboCounty")
                    .EmptyText("شهرستان...")
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                    .TypeAhead(true)
                    .Editable(false)
                        .AllowBlank(false).MsgTarget(Ext.Net.MessageTarget.Side)
                    .BlankText("لطفا شهرستان مورد نظر را انتخاب نمایید.")
                    .QueryMode(DataLoadMode.Local)
                    .ForceSelection(true)
                    .Width(190)
                    .Listeners(ls =>
                                ls.Select.Handler = " App.LoadingOffices.queryById('CboZone').getStore().load();"
                                    )
                    .TriggerAction(TriggerAction.All)
                        .DisplayField("Name")
                        .ValueField("ID")
                                .Store(X.Store().AutoLoad(false)
                        .Model(X.Model()
                                    .IDProperty("fldCityId")
                            .Fields(
                                                 new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                )
                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetCascadeCounty"))
                            .Reader(X.JsonReader().Root("data")))
                                        .Parameters(ps => ps.Add(new StoreParameter("ID", "App.LoadingOffices.queryById('CboState').getValue()", ParameterMode.Raw)))
                                        ),
                        X.Label("بخش:"),
                         X.ComboBox()
                                .ItemID("CboZone")
                        .EmptyText("بخش...")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .TypeAhead(true)
                        .Editable(false)
                            .AllowBlank(false).MsgTarget(Ext.Net.MessageTarget.Side)
                        .BlankText("لطفا بخش مورد نظر را انتخاب نمایید.")
                        .QueryMode(DataLoadMode.Local)
                        .ForceSelection(true)
                        .Width(190)
                        .Listeners(ls =>
                                ls.Select.Handler = " App.LoadingOffices.queryById('CboCity').getStore().load();"
                                    )
                        .TriggerAction(TriggerAction.All)
                            .DisplayField("Name")
                            .ValueField("ID")
                                    .Store(X.Store().AutoLoad(false)
                            .Model(X.Model()
                                .IDProperty("fldZoneId")
                                .Fields(
                                    new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                    new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                    )
                            .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetCascadeZone"))
                                .Reader(X.JsonReader().Root("data")))
                                            .Parameters(ps => ps.Add(new StoreParameter("ID", "App.LoadingOffices.queryById('CboCounty').getValue()", ParameterMode.Raw)))
                                            ),
                         X.Label("شهر:"),
                             X.ComboBox()
                                        .ItemID("CboCity")
                            .EmptyText("شهر...")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .TypeAhead(true)
                            .Editable(false)
                                .AllowBlank(false).MsgTarget(Ext.Net.MessageTarget.Side)
                            .BlankText("لطفا شهر مورد نظر را انتخاب نمایید.")
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .Width(190)
                            .Listeners(ls =>
                                    ls.Select.Handler = " App.LoadingOffices.queryById('CboMuni').getStore().load();"
                                        )
                            .TriggerAction(TriggerAction.All)
                                .DisplayField("Name")
                                .ValueField("ID")
                                        .Store(X.Store().AutoLoad(false)
                                .Model(X.Model()
                                    .IDProperty("fldCityId")
                                    .Fields(
                                        new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                        new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                        )
                                .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetCascadeCity"))
                                    .Reader(X.JsonReader().Root("data")))
                                                .Parameters(ps => ps.Add(new StoreParameter("ID", "App.LoadingOffices.queryById('CboZone').getValue()", ParameterMode.Raw)))
                                                ),
                        X.Label("شهرداری:"),
                                 X.ComboBox()
                                            .ItemID("CboMuni")
                                .EmptyText("شهرداری...")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                .TypeAhead(true)
                                .Editable(false)
                                        .AllowBlank(false).MsgTarget(Ext.Net.MessageTarget.Side)
                                        .BlankText("لطفا شهرداری مورد نظر را انتخاب نمایید.")
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .Width(190)
                                     .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                            .Store(X.Store().AutoLoad(false)
                                    .Model(X.Model()
                                    .IDProperty("fldMuniId")
                                        .Fields(
                                            new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                            new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                            )
                                    .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetCascadeMunicipality"))
                                        .Reader(X.JsonReader().Root("data")))
                                                    .Parameters(ps => ps.Add(new StoreParameter("ID", "App.LoadingOffices.queryById('CboCity').getValue()", ParameterMode.Raw)))
                                                    )
                         
                        )

                )
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
            )
        )
)
@(Html.X().KeyMap()
                 .ID("LoadingOfficesMap")
                 .Target("={App.LoadingOffices.getTargetEl()}")
            .Binding(b =>
            {
                b.Add(Html.X().KeyBinding()
                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                .Handler("SaveOffices_New(); ")
                );

            }))
<script type="text/javascript">
    function ValidationsOffices() {
        App.LoadingOffices.queryById('CboState').validate();
        App.LoadingOffices.queryById('CboCounty').validate();
        App.LoadingOffices.queryById('CboZone').validate();
        App.LoadingOffices.queryById('CboCity').validate();
        App.LoadingOffices.queryById('CboMuni').validate();
    }

    function LoadingOffices() {
        var er = false;
        if (App.LoadingOffices.queryById('CboState').validate() == false) {
            er = true;
        }

        if (App.LoadingOffices.queryById('CboCounty').validate() == false) {
            er = true;
        }

        if (App.LoadingOffices.queryById('CboZone').validate() == false) {
            er = true;
        }

        if (App.LoadingOffices.queryById('CboCity').validate() == false) {
            er = true;
        }
        if (App.LoadingOffices.queryById('CboMuni').validate() == false) {
            er = true;
        }
        if (er == true)
            return;

        App.LoadingOffices.body.mask("در حال بارگذاری...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/Municipality_New/loadFromWebService',
            params: {
                StateName: App.LoadingOffices.queryById('CboState').getDisplayValue(),
                CountyName: App.LoadingOffices.queryById('CboCounty').getDisplayValue(),
                ZoneName: App.LoadingOffices.queryById('CboZone').getDisplayValue(),
                CityName: App.LoadingOffices.queryById('CboCity').getDisplayValue(),
                MunName: App.LoadingOffices.queryById('CboMuni').getDisplayValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.LoadingOffices.body.mask().hide();
                App.Offices_New.queryById('GridOffices_New').store.load();
            }
        });
    }
</script>