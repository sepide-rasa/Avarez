@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

<style>
    .LblStyle {
        height: auto;
    }

    .LblRed {
        color: red;
    }

    .trheight {
        height: 48px;
    }
</style>

@(Html.X().Window().Modal(true)
.Width(412)
.Resizable(false)
            .Title("تعیین بانک")//.Listeners(l => l.AfterRender.Handler = "LoadPcPosInfo()")
                 .ID("NewPcPosInfo")
        .Closable(true).ButtonAlign(Ext.Net.Alignment.Center)
    .CloseAction(Ext.Net.CloseAction.Destroy)
        .Layout(LayoutType.Fit)
                   .Buttons(X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk)//.ToolTip("کلید میانبر F8")
                               .Listeners(l =>
                               {
                                   l.Click.Handler = "SavePcPosInfo();";

                               })
                               .ItemID("btnSave")
                                ,
                                X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)//.ToolTip("کلید میانبر Esc")
                                               .OnClientClick("App.NewPcPosInfo.destroy()"))
    .Items(
        X.FormPanel()
        .Border(false)
        //.Margin(5)
            .DefaultButton("btn")
        .TitleAlign(Ext.Net.TitleAlign.Center)
           .Layout(LayoutType.Fit)
                .Items(

                X.Panel().Border(false).PaddingSpec("5px 0 10px 0")
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
            X.Panel().Layout(LayoutType.HBox).Border(false)
                .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = HBoxAlign.Middle })
                  .Defaults(new { Margin = 5 })
            .Items(
                X.Hidden().ItemID("fldId"),
                    X.Hidden().ItemID("countryId"),
                    X.Hidden().ItemID("countrySID"),
                    X.Hidden().ItemID("countryNType"),
                        X.Label("نام بانک:"),
                        X.ComboBox()
                            .ItemID("cboBankName")
                        .Editable(false)
                        .TypeAhead(true)
                        .QueryMode(DataLoadMode.Local)
                        .ForceSelection(true)
                        .TriggerAction(TriggerAction.All)
                        .DisplayField("fldName")
                        .ValueField("fldID")
                        .EmptyText("نام بانک...")
                        .Width(190)
                        .AllowBlank(false)
                        .BlankText("لطفا بانک مورد نظر را انتخاب نمایید.")
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                            .Store(X.Store()//.AutoLoad(false)
                            .Model(X.Model()
                            .IDProperty("fldID")
                                .Fields(
                                    new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                )
                            )
                                .Proxy(X.AjaxProxy()
                                .Url(Url.Action("GetBank"))
                                .Reader(X.JsonReader().Root("data"))
                                )
                                    .Listeners(li => li.Load.Handler = "LoadPcPosInfo();")
                            )
                        ),
                         X.Panel().Layout(LayoutType.HBox).Border(false).Defaults(new { Margin = 5 })
                        .Items(
                        X.FieldSet()
                    .Border(true)
                    .Title("موقعیت در تقسیمات کشوری")
                    .Width(330)
                    .Height(400)
                    .Layout(LayoutType.Column)
                    .Defaults(new { Margin = 2 })
                    .Items(
                              X.TreePanel()
                                .ID("TreeCountryPc")
                                .AutoScroll(true)
                                .Width(305)
                                .ColSpan(2)
                                .Expand(true)
                                .Height(300)
                                .Expand(true)
                                .UseArrows(true)
                                .Border(false)
                                .Listeners(a =>
                                    {
                                        a.Select.Handler = "GetTreeCountryIdPc(record);";
                                        a.AfterRender.Handler = "this.getRootNode().expand();";
                                    })
                                                .Root(Html.X().Node().NodeID("1").DataPath("0").Cls("0").Text("جمهوری اسلامی ایران").IconFile("/Content/images/0.png"))
                                                .Listeners(l =>
                                                {
                                                    l.BeforeLoad.Fn = "nodeLoadTreeCountryPc";
                                                })
                                , X.Label()
                                .Cls("LblRed")
                                .Text("مورد انتخاب شده: ")
                                , X.Label()

                                .Cls("LblStyle")
                                .ItemID("lblTitleCountry")
                                )
                                    )
                                    )

            )
        )
)
@(Html.X().KeyMap()
            .ID("NewPcPosInfoMap")
            .Target("={App.NewPcPosInfo.getTargetEl()}")
            .Binding(b =>
            {
                b.Add(Html.X().KeyBinding()
                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                .Handler("SavePcPosInfo(); ")
                );

            }))
<script type="text/javascript">

    var nodeLoadTreeCountryPc = function (store, operation, options) {
        var node = operation.node;
        Ext.net.DirectMethod.request({
            url: '/NewVer/PcPosInfo_New/NodeLoadTreeCountry',
            params: {
                nod: node.getId()
            },
            success: function (result) {
                node.set('loading', false);
                node.set('loaded', true);
                node.appendChild(result);
                node.expand();
            },

            failure: function (errorMsg) {
                Ext.Msg.alert('Failure', errorMsg);
            }
        });

        return false;
    };

    function GetTreeCountryIdPc(record) {
        var path = record.getPath("text");
        var Text = path.split('/').splice(1).join("-->");
        App.NewPcPosInfo.queryById("countryId").setValue(record.getId());
        App.NewPcPosInfo.queryById("countrySID").setValue(record.data.cls);
        App.NewPcPosInfo.queryById("countryNType").setValue(record.data.dataPath);
        App.NewPcPosInfo.queryById('lblTitleCountry').setText(Text);
    };

    

    function SetDefault1() {
        App.TreeCountryPc.getSelectionModel().select(0);
    }

    function LoadPcPosInfo() {
        if ('@ViewBag.Id' != '0') {
            App.NewPcPosInfo.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/PcPosInfo_New/Details',
                params: {
                    id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 0) {
                        var cboBankName = App.NewPcPosInfo.queryById('cboBankName');
                        cboBankName.setValue(data.fldBankId);
                        var Id = App.NewPcPosInfo.queryById('fldId');
                        Id.setValue(data.fldId);
                        App.NewPcPosInfo.queryById("countryId").setValue(data.CoutryDivisionId);
                        App.NewPcPosInfo.queryById("countrySID").setValue(data.CoutryDivisionCode);
                        App.NewPcPosInfo.queryById("countryNType").setValue(data.CoutryDivisionType);

                        if (data.Path == "/1") {
                            App.TreeCountryPc.getSelectionModel().select(0);
                        }
                        else {
                            Ext.net.DirectMethod.request({
                                url: '/NewVer/PcPosInfo_New/LoadPath',
                                params: {
                                    Path: data.Path
                                },
                                success: function (result) {
                                    if (result.length != 0) {
                                        App.TreeCountryPc.store.getNodeById(data.Path.split('/')[2]).appendChild(result);
                                        var nodee = App.TreeCountryPc.store.getNodeById(data.Path.split('/')[data.Path.split('/').length - 1]);
                                        App.TreeCountryPc.expandPath(data.Path);
                                        App.TreeCountryPc.selectPath(data.Path);
                                    }
                                    else {
                                        App.TreeCountryPc.selectPath(data.Path);
                                    }
                                },
                                failure: function (errorMsg) {
                                    Ext.Msg.alert('Failure', errorMsg);
                                }
                            });
                        }
                    }
                    else if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    App.NewPcPosInfo.body.mask().hide();
                }
            });
        }
        else {
            SetDefault1();
        }

    }

    function SavePcPosInfo() {
        var cboBankName = App.NewPcPosInfo.queryById('cboBankName');
        var Id = App.NewPcPosInfo.queryById('fldId');
        var er = false;
        if (cboBankName.validate() == false) {
            er = true;
        }
        if (er == true)
            return;
        App.NewPcPosInfo.body.mask("در حال ذخیره سازی...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/PcPosInfo_New/Save',
            params: {
                fldBankId: cboBankName.getValue(),
                CountryDivisionsType: App.NewPcPosInfo.queryById("countryNType").getValue(),
                CountryDivisionscode: App.NewPcPosInfo.queryById("countrySID").getValue(),
                fldId:Id.getValue()

            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    Name: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.NewPcPosInfo.body.mask().hide();
                App.PcPosInfo.queryById('GridPcPosInfo').store.load();
                if (data.Er != 1)
                    ClearPcPosInfo();
            }

        });
    }
    function ClearPcPosInfo() {
        App.NewPcPosInfo.queryById('cboBankName').setValue("");
        App.NewPcPosInfo.queryById('lblTitleCountry').setText("");
        App.NewPcPosInfo.queryById("countryId").setValue(0);
        App.NewPcPosInfo.queryById("countrySID").setValue(0);
        App.NewPcPosInfo.queryById("countryNType").setValue(0);
        App.NewPcPosInfo.queryById('fldId').setValue(0);
        App.TreeCountryPc.getSelectionModel().select(0);
    }
  /*  function EnterNext() {
        var keyfield = App.NewPcPosInfo.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();

    }*/
</script>