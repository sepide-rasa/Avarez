@model IEnumerable<Avarez.Models.sp_CarPlaqueSelect>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using Ext.Net.Utilities;
@{
    var X = Html.X();
}


@(Html.X().Window()
    .Border(false)
    .ID("NewMalek_Pelak")
    .Resizable(false)
    .Listeners(l => l.AfterRender.Handler = "loadNewMalek_Pelalk()")
    .Title("ثبت مالک و پلاک جدید")
    .AutoScroll(true)
    .Width(790)
    .BodyStyle("background-color:#dfe8f6;")
    .Height(500)
    .Modal(true)
    .Closable(true)
    .CloseAction(CloseAction.Destroy)
    .Layout(LayoutType.Fit)
    .ButtonAlign(Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
            //.ToolTip("کلید میانبر F8")
            .Listeners(l =>l.Click.Handler = "SaveMalek_Pelak();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .ToolTip("کلید میانبر Esc")
            .OnClientClick("App.NewMalek_Pelak.destroy();"))
    .Items(
        X.Hidden()
            .ItemID("fldIdMalek")
            .Value(0),
        X.Hidden()
            .ItemID("fldIdPelak")
            .Value(0),
        X.Hidden()
            .ItemID("fldTypeEs")
            .Value(false),
        Html.X().Panel()
            .Border(false)
            .BodyStyle("background-color:#dfe8f6;")
            .ID("PnlNewMalek_Pelak")
            .Listeners(l => l.Render.Fn = "addKeyMapMalek")
            .PaddingSpec("7px 10px 0 10px")
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.FieldSet()
                    .Title("مشخصات مالک")
                    .AutoScroll(true)
                    .ItemID("FieldsetMalekNew")
                    .Height(105)
                    //.Listeners(l => l.AfterLayout.Handler = "setColspann()")
                    .Defaults(new { Margin = 2 })
                    .Layout(LayoutType.Table)
                    .LayoutConfig(new TableLayoutConfig { Columns = 9 })
                    .Items(
                        X.Label("تاریخ تولد:")
                            .ItemID("lblTarikhNew"),
                        X.PDateField()
                            .ItemID("txtTarikhNew")
                            .Width(170)
                            .AllowBlank(false)
                            .AutoFocus(true)
                            .BlankText("لطفا تاریخ تولد را وارد نمایید.")
                            .ColSpan(2), 
                        X.Label("شناسه ملی:")
                            .ItemID("lblCodeEghtesadiNew"),
                        X.TextField()
                            .ItemID("txtCodeEghtesadiNew")
                            .Width(170)
                            .MaxLength(12)
                            .MinLength(11)
                            .ColSpan(2)
                            .MaskRe("/[0-9]/")
                            .FieldStyle("direction:ltr;")
                            .EnforceMaxLength(true)
                            .ReadOnly(true)
                            .AllowBlank(false)
                            .BlankText("لطفا شناسه ملی یا کد اقتصادی را وارد نمایید."),                        
                        X.Label("کد ملی:")
                            .ItemID("lblCodeMelliNew"),
                        X.FieldSet()
                            .Border(false)
                            .Layout(LayoutType.HBox)
                            .ItemID("fieldsettxtCodeMelliNew")
                            .PaddingSpec("0 0 0 0")
                            .ColSpan(2)
                            .Items(
                                X.TextField()
                                    .ItemID("txtCodeMelliAtbaNew")
                                    .ReadOnly(true)
                                    .PaddingSpec("0 0 0 4px") 
                                    //.Width(140)                           
                                    .Width(170)
                                    .AllowBlank(false)
                                    .BlankText("لطفا کدملی را وارد کنید.")
                                    .FieldStyle("direction:ltr;"),
                                X.TextField()
                                    .ItemID("txtCodeMelliNew")
                                    .MinLength(10)
                                    .MaxLength(10)
                                    .EnforceMaxLength(true)
                                    .ReadOnly(true)
                                    .PaddingSpec("0 0 0 4px") 
                                    //.Width(140)                           
                                    .Width(170)
                                    .AllowBlank(false)
                                    .BlankText("لطفا کدملی را وارد کنید.")
                                    .MaskRe("/[0-9]/")
                                    .FieldStyle("direction:ltr;")
                                /*X.Button()
                                    .Text("...")
                                    .ItemID("btnSabtAhval")
                                    .ToolTip("بارگذاری از سرور")
                                    .Listeners(li =>li.Click.Handler = "EstelamNew()")*/),
                        X.Label("نام و نام خانوادگی:")
                            .ItemID("lblNameNew"),
                        X.TextField()
                            .ItemID("txtNameNew")
                            .Width(170)
                            //.ReadOnly(true)
                            .ColSpan(2)
                            .AllowBlank(false)
                            .BlankText("لطفا نام را وارد نمایید."),
                        X.Label("نام پدر:")
                            .ItemID("lblFatherNameNew"),
                        X.TextField()
                            .ReadOnly(true)
                            .ItemID("FatherNameNew")
                            .Width(170)
                            .ColSpan(2),
                        X.Label("محل تولد:")
                            .ItemID("lblTavalodNew"),
                        X.TextField()
                            .ReadOnly(true)
                            .ItemID("TavalodNew")
                            .Width(170)
                            .ColSpan(2),
                        X.Label("شماره شناسنامه:")
                            .ItemID("lblShenasnameNoNew"),
                        X.TextField()
                            .ReadOnly(true)
                            .ItemID("ShenasnameNoNew")
                            .FieldStyle("direction:ltr;")
                            .Width(170)
                            .ColSpan(2),
                        X.Label("سریال شناسنامه:")
                            .ItemID("lblShenasnameSeriNew"),
                        X.TextField()
                            .ReadOnly(true)
                            .ItemID("ShenasnameSeriNew")
                            .FieldStyle("direction:ltr;")
                            .Width(170)
                            .ColSpan(2),
                        X.Label("ایمیل:")
                            .ItemID("lblEmailNew"),
                        X.TextField()
                            .ItemID("txtEmailNew")
                            .FieldStyle("directrion:ltr")
                            .Listeners(l => l.KeyUp.Fn = "onInitializeToEnMNew")
                            .EnableKeyEvents(true)
                            .FieldStyle("direction:ltr;")
                            .Width(170)
                            .ColSpan(2),
                        X.Label("موبایل:")
                            .ItemID("lblMobileNew"),
                        X.TextField()
                            .ItemID("txtMobileNew")
                            .ColSpan(2)
                            .MaskRe("/[0-9]/")
                            .MaxLength(11)
                            .EnforceMaxLength(true)
                            .MinLength(11)
                            .Regex("^09")
                            .FieldStyle("direction:ltr;")
                            .Width(170)
                            .AllowBlank(false)
                            .BlankText("لطفا موبایل را وارد نمایید."),
                        X.Label("آدرس:")
                            .ItemID("lblAddressNew"),
                        X.TextField()
                            .ItemID("txtAddressNew")
                            .Width(170)
                            .ColSpan(2),
                        X.Label("کد پستی:")
                            .ItemID("lblPostalNew"),
                        X.TextField()
                            .ColSpan(2)
                            .MaxLength(10)
                            .FieldStyle("direction:ltr")
                            .MaskRe("[0-9]")
                            .MinLength(10)
                            .EnforceMaxLength(true)
                            .ItemID("txtPostalNew")
                            .Width(170),
                        X.Label("توضیحات:")
                            .ItemID("lblDescNew"),
                        X.TextField()
                            .Width(170)
                            .ColSpan(2)
                            .ItemID("txtDescMNew")
                ),
                X.FieldSet()
                    .Border(true)
                    .Height(80)
                    .ItemID("FieldsetPelakNew")
                    .Defaults(new { Margin = 1 })
                    .Title("مشخصات پلاک")
                    .Width(752)
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align=VBoxAlign.Center})
                    //.Listeners(l => l.BoxReady.Handler = "App.NewMalek_Pelak.queryById('FieldsetPelakNew').setWidth(App.NewMalek_Pelak.queryById('FieldsetMalekNew').getWidth())")
                    .Items(
                        X.FieldSet()
                            .Border(false)
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 6 })
                            .Items(
                                X.Label("نوع پلاک:"),
                                X.ComboBox()
                                    .Width(170)
                                    .ItemID("cboTypepelakNew")
                                    .TypeAhead(true)
                                    .ForceSelection(true)
                                    .Editable(false)
                                    .AllowBlank(false)
                                    .QueryMode(DataLoadMode.Local)
                                    .BlankText("لطفا نوع پلاک را انتخاب نمایید.")
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                    .EmptyText("...")
                                    .Listeners(ls => ls.Select.Handler = "loadcboCityPelakNew()")
                                    .Store(X.Store()
                                        .Listeners(l => l.Load.Handler = "App.NewMalek_Pelak.queryById('cboTypepelakNew').setValue('2');loadcboCityPelakNew();")
                                        .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                    )
                                                )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetTypeP"))
                                            .Reader(X.JsonReader().Root("data"))
                                                )
                                        ),
                                X.Label("شهر پلاک:"),
                                X.ComboBox()
                                    .Width(170)
                                    .ItemID("cboCityPelakNew")
                                    .TypeAhead(true)
                                    .Editable(true)
                                    .ForceSelection(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .AllowBlank(false)
                                    .BlankText("لطفا شهر پلاک را انتخاب نمایید.")
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                    .EmptyText("...")
                                    .Store(X.Store()
                                        .AutoLoad(false)
                                        .Listeners(l=>l.Load.Handler="setDefaultCity()")
                                        .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                )
                                            )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetCityP"))
                                            .Reader(X.JsonReader().Root("data")))),
                                X.Label("سریال پلاک:"),
                                X.ComboBox()
                                    .Width(170)
                                    .ItemID("cboSerialPelakNew")
                                    .TypeAhead(true)
                                    .Editable(true)
                                    .ForceSelection(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .AllowBlank(false)                            
                                    .BlankText("لطفا سریال پلاک را انتخاب نمایید.")
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                    .EmptyText("...")
                                    .Store(X.Store().Listeners(l => l.Load.Handler = "setcboSerialPelakNew()")
                                        .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                    )
                                                )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetSerialP"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                    ),
                                X.Label("وضعیت پلاک:"),
                                X.ComboBox()
                                    .Width(170)
                                    .ItemID("cboStatusPelakNew")
                                    .TypeAhead(true)
                                    .Editable(true)
                                    .ForceSelection(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .AllowBlank(false)
                                    .BlankText("لطفا وضعیت پلاک را انتخاب کنید.")
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                    .EmptyText("...")
                                    .Store(X.Store()
                                        .Listeners(l => l.Load.Handler = "App.NewMalek_Pelak.queryById('cboStatusPelakNew').setValue('1')")
                                        .Model(X.Model()
                                        .IDProperty("fldId")
                                        .Fields(
                                            new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                            new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                )
                                            )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetStatusP"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                    ),
                                X.Label("شماره پلاک:"),
                                X.FieldSet()
                                    .PaddingSpec("0 0 0 0")
                                    .Border(false)
                                    .Layout(LayoutType.HBox)
                                    .Width(180)
                                    .Defaults(new { Margin = 1 })
                                    .ItemID("f")
                                    .Items(
                                        X.TextField()
                                            .ItemID("_3charPelakNew")
                                            .EmptyText("3رقم")
                                            .Listeners(l => l.Change.Handler = "N_3charChange();")
                                            .Width(50)
                                            .EnforceMaxLength(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا شماره پلاک را وارد نمایید."),
                                        X.ComboBox()
                                            .Width(50)
                                            .ItemID("cboCharPelakNew")
                                            .TypeAhead(true)
                                            .Editable(true)
                                            .ForceSelection(true)
                                            .QueryMode(DataLoadMode.Local)
                                            .BlankText("لطفا کاراکتر پلاک را انتخاب نمایید.")
                                            .AllowBlank(false)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("Name")
                                            .ValueField("ID")
                                            .EmptyText("...")
                                            .Store(X.Store().Listeners(l => l.Load.Handler = "setcboCharPelakNew()")
                                                .Model(X.Model()
                                                    .IDProperty("fldId")
                                                    .Fields(
                                                        new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                        new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                            )
                                                        )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetCharP"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    )
                                                    ),
                                        X.TextField()
                                            .ItemID("_2charPelakNew")
                                            .EmptyText("2رقم")
                                            .Width(30)
                                            .MaskRe("[0-9]")
                                            .Listeners(l => l.Change.Handler = "N_2charChange();")
                                            .MaxLength(2)
                                            .MinLength(2)
                                            .EnforceMaxLength(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا شماره پلاک را وارد نمایید.")
                                        ),
                                        X.Label("توضیحات:"),
                                        X.TextField()
                                            .Width(170)
                                            .ItemID("txtDescPelakNew")
                                            )),
                        X.GridPanel()
                            .ItemID("GridPelakNew")
                            //.Listeners(l => l.ViewReady.Handler = "App.NewMalek_Pelak.queryById('GridPelakNew').setWidth(App.NewMalek_Pelak.queryById('FieldsetMalekNew').getWidth()-100)")
                            .Frame(true)
                            .Width(752)
                            .Height(220)
                            .AutoScroll(true)
                            .Title("لیست پلاک های مالک")
                            .Store(
                                X.StoreForModel()
                                    .AutoLoad(false)
                                    .Proxy(
                                        Html.X().AjaxProxy()
                                            .Url(Url.Action("ReadPelak"))
                                            .Reader(Html.X().JsonReader().Root("data"))
                                            )
                                    .PageSize(100)
                                    .RemoteFilter(true)
                                    .RemotePaging(true)
                            )
                            .View(
                                Html.X().GridView().LoadingText("در حال بارگذاری...")
                            )
                            .SelectionModel(
                                Html.X().RowSelectionModel()
                                    .Mode(SelectionMode.Single))
                            .ColumnModel(
                                Html.X().RowNumbererColumn().Flex(1),
                                Html.X().Column().DataIndex(Model, m => m.fldID).Text("کد").Flex(1).Hidden(true),
                                Html.X().Column().DataIndex(Model, m => m.fldOwnerName).Text("نام مالک").Flex(5).Wrap(true),
                                Html.X().Column().DataIndex(Model, m => m.fldPlaqueNumber).Text("شماره پلاک").Wrap(true).Flex(5),
                                Html.X().Column().DataIndex(Model, m => m.fldPlaqueCityName).Text("شهر").Wrap(true).Flex(4),
                                Html.X().Column().DataIndex(Model, m => m.fldPlaqueSerial).Text("شماره سریال").Wrap(true).Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Wrap(true).Flex(5),
                                Html.X().ImageCommandColumn()
                                    .Listeners(l => l.Command.Fn = "ActiononPlaque")/*.Text("نمایش اطلاعات")*/
                                    .Flex(2).Commands(Html.X().ImageCommand().CommandName("EditPelaque").Icon(Ext.Net.Icon.PageEdit).ToolTip(tt => tt.Text = "ویرایش")
                                    , Html.X().ImageCommand().CommandName("DeletePelaque").Icon(Ext.Net.Icon.Delete).ToolTip(tt => tt.Text = "حذف"))

                                    )
            )
            )
)

<script type="text/javascript">

    function N_3charChange() {
        var _3charPelakNew = App.NewMalek_Pelak.queryById("_3charPelakNew").getValue();
        if ((_3charPelakNew.length) == 3) {
            App.NewMalek_Pelak.queryById("txtDescPelakNew").focus();
        }

    }
    function N_2charChange() {
        var _2charPelakNew = App.NewMalek_Pelak.queryById("_2charPelakNew").getValue();
        if (_2charPelakNew.length == 2) {
            App.NewMalek_Pelak.queryById("cboCharPelakNew").focus();
        }
    }

    function setDefaultCity() {
        if (App.NewMalek_Pelak.queryById("fldIdPelak").getValue() == 0) {
            App.NewMalek_Pelak.queryById('cboCityPelakNew').setValue('2');
        }
    }

    function setcboCharPelakNew() {
        if ('@ViewBag.fldDefaultPelakChar' != '') {
            App.NewMalek_Pelak.queryById('cboCharPelakNew').setValue('@ViewBag.fldDefaultPelakChar');
        }
    }

    function setcboSerialPelakNew() {
        if ('@ViewBag.fldDefaultPelakSerial' != '') {
            App.NewMalek_Pelak.queryById('cboSerialPelakNew').setValue('@ViewBag.fldDefaultPelakSerial');
        }
    }

    function loadNewMalek_Pelalk() {
        App.NewMalek_Pelak.queryById('FatherNameNew').hide();
        App.NewMalek_Pelak.queryById('lblFatherNameNew').hide();
        App.NewMalek_Pelak.queryById('TavalodNew').hide();
        App.NewMalek_Pelak.queryById('lblTavalodNew').hide();
        App.NewMalek_Pelak.queryById('ShenasnameNoNew').hide();
        App.NewMalek_Pelak.queryById('lblShenasnameNoNew').hide();
        App.NewMalek_Pelak.queryById('ShenasnameSeriNew').hide();
        App.NewMalek_Pelak.queryById('lblShenasnameSeriNew').hide();

        if ('@ViewBag.State' == "0") {/*مالک جدید*/
            if ('@ViewBag.TypeMalek' == "1") {/*حقیقی*/
                App.NewMalek_Pelak.queryById("txtCodeMelliAtbaNew").hide();                
                App.NewMalek_Pelak.queryById("txtCodeEghtesadiNew").hide();
                App.NewMalek_Pelak.queryById("lblCodeEghtesadiNew").hide();
                App.NewMalek_Pelak.queryById("fieldsettxtCodeMelliNew").show();
                /*App.NewMalek_Pelak.queryById("btnSabtAhval").show();
                App.NewMalek_Pelak.queryById("txtCodeMelliNew").show();*/
                App.NewMalek_Pelak.queryById("lblCodeMelliNew").show();
                App.NewMalek_Pelak.queryById("txtCodeMelliNew").setValue('@ViewBag.NationalCode');
                App.NewMalek_Pelak.queryById("lblTarikhNew").setText("تاریخ تولد:");
                App.NewMalek_Pelak.queryById("txtTarikhNew").allowBlank = false;
                App.NewMalek_Pelak.queryById("txtTarikhNew").validate();
                App.NewMalek_Pelak.queryById("lblNameNew").setText("نام و نام خانوادگی:");
                /*App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(true);*/
            }
            else if ('@ViewBag.TypeMalek' == "0") {/*حقوقی*/
                App.NewMalek_Pelak.queryById("fieldsettxtCodeMelliNew").hide();
                /*App.NewMalek_Pelak.queryById("btnSabtAhval").hide();
                App.NewMalek_Pelak.queryById("txtCodeMelliNew").hide();*/
                App.NewMalek_Pelak.queryById("lblCodeMelliNew").hide();
                App.NewMalek_Pelak.queryById("txtCodeEghtesadiNew").show();
                App.NewMalek_Pelak.queryById("txtCodeEghtesadiNew").setValue('@ViewBag.NationalCode');
                App.NewMalek_Pelak.queryById("lblCodeEghtesadiNew").show();
                App.NewMalek_Pelak.queryById("lblTarikhNew").setText("تاریخ ثبت:");
                App.NewMalek_Pelak.queryById("txtTarikhNew").allowBlank = true;
                App.NewMalek_Pelak.queryById("txtTarikhNew").validate();
                App.NewMalek_Pelak.queryById("lblNameNew").setText("نــام شــرکـت:");
                /*App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(false);*/
                App.NewMalek_Pelak.queryById('FieldsetMalekNew').setWidth(752);
            }
            else {
                App.NewMalek_Pelak.queryById("txtCodeEghtesadiNew").hide();
                App.NewMalek_Pelak.queryById("lblCodeEghtesadiNew").hide();
                App.NewMalek_Pelak.queryById("txtCodeMelliNew").hide();
                App.NewMalek_Pelak.queryById("txtCodeMelliAtbaNew").setValue('@ViewBag.NationalCode');
                App.NewMalek_Pelak.queryById("fieldsettxtCodeMelliNew").show();
                /*App.NewMalek_Pelak.queryById("btnSabtAhval").show();
                App.NewMalek_Pelak.queryById("txtCodeMelliNew").show();*/
                App.NewMalek_Pelak.queryById("lblCodeMelliNew").show();
                App.NewMalek_Pelak.queryById("lblTarikhNew").setText("تاریخ تولد:");
                App.NewMalek_Pelak.queryById("txtTarikhNew").allowBlank = false;
                App.NewMalek_Pelak.queryById("txtTarikhNew").validate();
                App.NewMalek_Pelak.queryById("lblNameNew").setText("نام و نام خانوادگی:");
                /*App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(true);*/
            }
            /*App.NewMalek_Pelak.queryById('FieldsetPelakNew').setWidth(App.NewMalek_Pelak.queryById('FieldsetMalekNew').getWidth());*/
        }
        else {
            if ('@ViewBag.TypeMalek' == "1") {/*حقیقی*/
                /*App.NewMalek_Pelak.queryById("btnSabtAhval").show();
                App.NewMalek_Pelak.queryById("txtCodeMelliNew").show();*/
                App.NewMalek_Pelak.queryById("txtCodeMelliAtbaNew").hide();
                App.NewMalek_Pelak.queryById("fieldsettxtCodeMelliNew").show();
                App.NewMalek_Pelak.queryById("lblCodeMelliNew").show();
                App.NewMalek_Pelak.queryById("txtCodeEghtesadiNew").hide();
                App.NewMalek_Pelak.queryById("lblCodeEghtesadiNew").hide();
                App.NewMalek_Pelak.queryById("lblTarikhNew").setText("تاریخ تولد:");
                App.NewMalek_Pelak.queryById("txtTarikhNew").allowBlank = false;
                App.NewMalek_Pelak.queryById("txtTarikhNew").validate();
                App.NewMalek_Pelak.queryById("lblNameNew").setText("نام و نام خانوادگی:");
                /*App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(true);*/
            }
            else if ('@ViewBag.TypeMalek' == "0") {
                App.NewMalek_Pelak.queryById("fieldsettxtCodeMelliNew").hide();
                /*App.NewMalek_Pelak.queryById("btnSabtAhval").hide();
                App.NewMalek_Pelak.queryById("txtCodeMelliNew").hide();*/
                App.NewMalek_Pelak.queryById("lblCodeMelliNew").hide();
                App.NewMalek_Pelak.queryById("txtCodeEghtesadiNew").show();
                App.NewMalek_Pelak.queryById("lblCodeEghtesadiNew").show();
                App.NewMalek_Pelak.queryById("lblTarikhNew").setText("تاریخ ثبت:");
                App.NewMalek_Pelak.queryById("txtTarikhNew").allowBlank = true;
                App.NewMalek_Pelak.queryById("txtTarikhNew").validate();
                App.NewMalek_Pelak.queryById("lblNameNew").setText("نــام شــرکـت:");
                /*App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(false);*/
                App.NewMalek_Pelak.queryById('GridPelakNew').setWidth(752);
            }
            else {
                /*App.NewMalek_Pelak.queryById("btnSabtAhval").show();
                App.NewMalek_Pelak.queryById("txtCodeMelliNew").show();*/
                App.NewMalek_Pelak.queryById("txtCodeMelliNew").hide();
                App.NewMalek_Pelak.queryById("fieldsettxtCodeMelliNew").show();
                App.NewMalek_Pelak.queryById("txtCodeMelliAtbaNew").show();
                App.NewMalek_Pelak.queryById("lblCodeMelliNew").show();
                App.NewMalek_Pelak.queryById("txtCodeEghtesadiNew").hide();
                App.NewMalek_Pelak.queryById("lblCodeEghtesadiNew").hide();
                App.NewMalek_Pelak.queryById("lblTarikhNew").setText("تاریخ تولد:");
                App.NewMalek_Pelak.queryById("txtTarikhNew").allowBlank = false;
                App.NewMalek_Pelak.queryById("txtTarikhNew").validate();
                App.NewMalek_Pelak.queryById("lblNameNew").setText("نام و نام خانوادگی:");
                /*App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(true);*/
            }
            /*App.NewMalek_Pelak.queryById('FieldsetPelakNew').setWidth(App.NewMalek_Pelak.queryById('FieldsetMalekNew').getWidth());*/
            App.NewMalek_Pelak.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/NewMalek_Pelak/DetailsMalek',
                params: {
                    NationalCode: '@ViewBag.NationalCode'
                },
                success: function (data) {
                    if (data.Err != 1) {
                        if ('@ViewBag.TypeMalek' == "1") {/*حقیقی*/
                            App.NewMalek_Pelak.queryById("txtTarikhNew").setValue(data.fldDateShamsi);
                            App.NewMalek_Pelak.queryById("txtCodeMelliNew").setValue(data.fldMelli_EconomicCode);
                            App.NewMalek_Pelak.queryById("txtNameNew").setValue(data.fldName);
                            App.NewMalek_Pelak.queryById("txtEmailNew").setValue(data.fldEmail);
                            App.NewMalek_Pelak.queryById("txtMobileNew").setValue(data.fldMobile);
                            App.NewMalek_Pelak.queryById("txtAddressNew").setValue(data.fldAddress);
                            App.NewMalek_Pelak.queryById("txtPostalNew").setValue(data.fldPostalCode);
                            App.NewMalek_Pelak.queryById("txtDescMNew").setValue(data.fldDesc);
                            App.NewMalek_Pelak.queryById("fldIdMalek").setValue(data.fldId);
                            App.NewMalek_Pelak.queryById("fldTypeEs").setValue(data.fldType);

                            if (data.fldAccept == 1) {/*پرونده تایید شده*/
                                /*App.NewMalek_Pelak.queryById("btnSabtAhval").hide();
                                App.NewMalek_Pelak.queryById("txtCodeMelliNew").setWidth(170);*/
                                App.NewMalek_Pelak.queryById("txtTarikhNew").setReadOnly(true);
                                App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(true);
                            }
                            else {
                                if (data.fldType == true) {
                                    /*App.NewMalek_Pelak.queryById("btnSabtAhval").hide();
                                    App.NewMalek_Pelak.queryById("txtCodeMelliNew").setWidth(170);*/
                                    App.NewMalek_Pelak.queryById("txtTarikhNew").setReadOnly(true);
                                    App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(true);
                                }
                                else {
                                    /*App.NewMalek_Pelak.queryById("btnSabtAhval").show();
                                    App.NewMalek_Pelak.queryById("txtCodeMelliNew").setWidth(140);*/
                                    App.NewMalek_Pelak.queryById("txtTarikhNew").setReadOnly(false);
                                    App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(false);
                                }
                            }
                        }
                        else if ('@ViewBag.TypeMalek' == "0") {/*حقوقی*/
                            App.NewMalek_Pelak.queryById("txtTarikhNew").setValue(data.fldDateShamsi);
                            App.NewMalek_Pelak.queryById("txtCodeEghtesadiNew").setValue(data.fldMelli_EconomicCode);
                            App.NewMalek_Pelak.queryById("txtNameNew").setValue(data.fldName);
                            App.NewMalek_Pelak.queryById("txtEmailNew").setValue(data.fldEmail);
                            App.NewMalek_Pelak.queryById("txtMobileNew").setValue(data.fldMobile);
                            App.NewMalek_Pelak.queryById("txtAddressNew").setValue(data.fldAddress);
                            App.NewMalek_Pelak.queryById("txtPostalNew").setValue(data.fldPostalCode);
                            App.NewMalek_Pelak.queryById("txtDescMNew").setValue(data.fldDesc);
                            App.NewMalek_Pelak.queryById("fldIdMalek").setValue(data.fldId);
                            App.NewMalek_Pelak.queryById("fldTypeEs").setValue(data.fldType);

                            if (data.fldAccept == 1) {
                                App.NewMalek_Pelak.queryById("txtTarikhNew").setReadOnly(true);
                                App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(true);

                            }
                            else {
                                App.NewMalek_Pelak.queryById("txtTarikhNew").setReadOnly(false);
                                App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(false);
                            }
                        }
                        else {
                            App.NewMalek_Pelak.queryById("txtTarikhNew").setValue(data.fldDateShamsi);
                            App.NewMalek_Pelak.queryById("txtCodeMelliAtbaNew").setValue(data.fldMelli_EconomicCode);
                            App.NewMalek_Pelak.queryById("txtNameNew").setValue(data.fldName);
                            App.NewMalek_Pelak.queryById("txtEmailNew").setValue(data.fldEmail);
                            App.NewMalek_Pelak.queryById("txtMobileNew").setValue(data.fldMobile);
                            App.NewMalek_Pelak.queryById("txtAddressNew").setValue(data.fldAddress);
                            App.NewMalek_Pelak.queryById("txtPostalNew").setValue(data.fldPostalCode);
                            App.NewMalek_Pelak.queryById("txtDescMNew").setValue(data.fldDesc);
                            App.NewMalek_Pelak.queryById("fldIdMalek").setValue(data.fldId);
                            App.NewMalek_Pelak.queryById("fldTypeEs").setValue(data.fldType);

                            if (data.fldAccept == 1) {/*پرونده تایید شده*/
                                /*App.NewMalek_Pelak.queryById("btnSabtAhval").hide();
                                App.NewMalek_Pelak.queryById("txtCodeMelliNew").setWidth(170);*/
                                App.NewMalek_Pelak.queryById("txtTarikhNew").setReadOnly(true);
                                App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(true);
                            }
                            else {
                                if (data.fldType == true) {
                                    /*App.NewMalek_Pelak.queryById("btnSabtAhval").hide();
                                    App.NewMalek_Pelak.queryById("txtCodeMelliNew").setWidth(170);*/
                                    App.NewMalek_Pelak.queryById("txtTarikhNew").setReadOnly(true);
                                    App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(true);
                                }
                                else {
                                    /*App.NewMalek_Pelak.queryById("btnSabtAhval").show();
                                    App.NewMalek_Pelak.queryById("txtCodeMelliNew").setWidth(140);*/
                                    App.NewMalek_Pelak.queryById("txtTarikhNew").setReadOnly(false);
                                    App.NewMalek_Pelak.queryById("txtNameNew").setReadOnly(false);
                                }
                            }
                        }
                        if ('@ViewBag.Malek' == 'False') {
                            /*App.NewMalek_Pelak.queryById("btnSabtAhval").hide();*/
                            App.NewMalek_Pelak.queryById("txtTarikhNew").disable();
                            App.NewMalek_Pelak.queryById("txtCodeEghtesadiNew").disable();
                            App.NewMalek_Pelak.queryById("txtCodeMelliAtbaNew").disable();
                            App.NewMalek_Pelak.queryById("txtCodeMelliNew").disable();
                            App.NewMalek_Pelak.queryById("txtCodeMelliNew").setWidth(170);
                            App.NewMalek_Pelak.queryById("txtNameNew").disable();
                            App.NewMalek_Pelak.queryById("txtEmailNew").disable();
                            App.NewMalek_Pelak.queryById("txtMobileNew").disable();
                            App.NewMalek_Pelak.queryById("txtAddressNew").disable();
                            App.NewMalek_Pelak.queryById("txtPostalNew").disable();
                            App.NewMalek_Pelak.queryById("txtDescMNew").disable();
                            App.NewMalek_Pelak.queryById("FieldsetPelakNew").show();
                        }
                    }
                    else {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    App.NewMalek_Pelak.body.mask().hide();
                }
            });
        }
        App.NewMalek_Pelak.queryById('GridPelakNew').getStore().getProxy().setExtraParam("NationalCode", '@ViewBag.NationalCode');
        App.NewMalek_Pelak.queryById('GridPelakNew').getStore().load();
    }

    /*function setColspann() {
        App.NewMalek_Pelak.queryById("txtCodeMelliNew").container.dom.colSpan = 2;
    }*/

    @*function EstelamNew() {
        var txtCodeMelliNew = App.NewMalek_Pelak.queryById('txtCodeMelliNew');
        var txtNameNew = App.NewMalek_Pelak.queryById('txtNameNew');
        var txtTarikhNew = App.NewMalek_Pelak.queryById('txtTarikhNew');
        var FatherNameNew = App.NewMalek_Pelak.queryById('FatherNameNew');
        var lblFatherNameNew = App.NewMalek_Pelak.queryById('lblFatherNameNew');
        var TavalodNew = App.NewMalek_Pelak.queryById('TavalodNew');
        var lblTavalodNew = App.NewMalek_Pelak.queryById('lblTavalodNew');
        var fldTypeEs = App.NewMalek_Pelak.queryById('fldTypeEs');
        var ShenasnameNoNew = App.NewMalek_Pelak.queryById('ShenasnameNoNew');
        var lblShenasnameNoNew = App.NewMalek_Pelak.queryById('lblShenasnameNoNew');
        var ShenasnameSeriNew = App.NewMalek_Pelak.queryById('ShenasnameSeriNew');
        var lblShenasnameSeriNew = App.NewMalek_Pelak.queryById('lblShenasnameSeriNew');

        var er = false;
        if (txtCodeMelliNew.validate() == false) {
            er = true;
        }
        if (txtTarikhNew.validate() == false) {
            er = true;
        }
        if (er == true) {
            Ext.MessageBox.show({
                title: 'خطا',
                msg: 'جهت استعلام وارد نمودن کد ملی و تاریخ تولد الزامی است.',
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            return;
        }
        App.NewMalek_Pelak.body.mask("در حال انجام عملیات...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/Parvande/EstelamSabt',
            params: {
                CodeMeli: txtCodeMelliNew.getValue(),
                Tarikhtavalod: txtTarikhNew.getRawValue()
            },
            success: function (data) {
                if (data.Error == "") {
                    txtNameNew.setReadOnly(true);
                    txtTarikhNew.setReadOnly(true);
                    txtNameNew.setValue(data.Name);
                    fldTypeEs.setValue(true);
                    FatherNameNew.show();
                    lblFatherNameNew.show();
                    TavalodNew.show();
                    lblTavalodNew.show();
                    ShenasnameNoNew.show();
                    lblShenasnameNoNew.show();
                    ShenasnameSeriNew.show();
                    lblShenasnameSeriNew.show();
                    FatherNameNew.setValue(data.fatherName);
                    TavalodNew.setValue(data.officeName);
                    ShenasnameNoNew.setValue(data.shenasnameNo);
                    ShenasnameSeriNew.setValue(data.shenasnameSerial);
                    App.NewMalek_Pelak.queryById('FieldsetMalekNew').setHeight(130);
                    App.NewMalek_Pelak.queryById('GridPelakNew').setHeight(195);
                    App.NewMalek_Pelak.queryById('FieldsetPelakNew').setWidth(App.NewMalek_Pelak.queryById('FieldsetMalekNew').getWidth());
                    App.NewMalek_Pelak.queryById('GridPelakNew').setWidth(App.NewMalek_Pelak.queryById('FieldsetMalekNew').getWidth());
                    App.NewMalek_Pelak.setWidth(830);
                    App.NewMalek_Pelak.queryById("txtEmailNew").focus();
                }
                else {
                    FatherNameNew.hide();
                    lblFatherNameNew.hide();
                    TavalodNew.hide();
                    lblTavalodNew.hide();
                    ShenasnameNoNew.hide();
                    lblShenasnameNoNew.hide();
                    ShenasnameNoNew.hide();
                    lblShenasnameNoNew.hide();
                    txtNameNew.setReadOnly(false);
                    txtTarikhNew.setReadOnly(false);
                    txtNameNew.setValue('');
                    Ext.MessageBox.show({
                        title: 'خطا',
                        /* msg: 'امکان دریافت مشخصات وجود ندارد. لطفا نام مودی را به صورت دستی وارد نمایید.',*/
                        msg: "ارتباط با سرور برقرار نیست. لطفا نام مودی را به صورت دستی وارد نمایید.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    App.NewMalek_Pelak.queryById("txtNameNew").focus();
                }
                App.NewMalek_Pelak.body.mask().hide();
            },
            failure: function () {
                FatherNameNew.hide();
                lblFatherNameNew.hide();
                TavalodNew.hide();
                lblTavalodNew.hide();
                ShenasnameNoNew.hide();
                lblShenasnameNoNew.hide();
                ShenasnameNoNew.hide();
                lblShenasnameNoNew.hide();
                txtNameNew.setReadOnly(false);
                txtTarikhNew.setReadOnly(false);
                txtNameNew.setValue('');
                Ext.MessageBox.show({
                    title: 'خطا',
                    msg: 'امکان دریافت مشخصات وجود ندارد. لطفا نام مودی را به صورت دستی وارد نمایید.',
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                App.NewMalek_Pelak.queryById("txtNameNew").focus();
                App.NewMalek_Pelak.body.mask().hide();
            }
        });
    }*@

    var onInitializeToEnMNew = function () {
        var tt = App.NewMalek_Pelak.queryById('txtEmailNew');
        changeLagToEn(tt);
    };

    function loadcboCityPelakNew() {
        App.NewMalek_Pelak.queryById('cboCityPelakNew').clearValue();
        App.NewMalek_Pelak.queryById('cboCityPelakNew').getStore().load({
            params: {
                cboTypeP: App.NewMalek_Pelak.queryById('cboTypepelakNew').getDisplayValue()
            }
        });
        ChangeCboTypeNew();
    }

    function ChangeCboTypeNew() {
        var cboTypepelakNew = App.NewMalek_Pelak.queryById('cboTypepelakNew');
        var cboCharPelakNew = App.NewMalek_Pelak.queryById('cboCharPelakNew');
        var cboCityPelakNew = App.NewMalek_Pelak.queryById('cboCityPelakNew');
        var _2charPelakNew = App.NewMalek_Pelak.queryById('_2charPelakNew');
        var _3charPelakNew = App.NewMalek_Pelak.queryById('_3charPelakNew');

        if (cboTypepelakNew.getDisplayValue() == 'ملی') {
            _2charPelakNew.show();
            cboCharPelakNew.show();
            _3charPelakNew.emptyText = ['3رقم'];
            _3charPelakNew.applyEmptyText();
            _3charPelakNew.minLength = "3";
            _3charPelakNew.inputEl.set({ maxLength: 3 });
            _3charPelakNew.setWidth(30);
            cboCharPelakNew.enable();
            App.NewMalek_Pelak.queryById('cboCityPelakNew').setValue('2');
        }
        else {
            _2charPelakNew.hide(true);
            cboCharPelakNew.hide(true);
            _3charPelakNew.inputEl.set({ maxLength: 10 });
            _3charPelakNew.minLength = "";
            _3charPelakNew.setWidth(170);
            _3charPelakNew.emptyText = [''];
            _3charPelakNew.applyEmptyText();
            cboCharPelakNew.disable(true);
        }
        _2charPelakNew.setValue("");
        _3charPelakNew.setValue("");
        /*cboCharPelakNew.setValue("");*/
    }

    function ActiononPlaque(grid, command, record, row) {
        var cboTypepelakNew = App.NewMalek_Pelak.queryById('cboTypepelakNew');
        var cboCharPelakNew = App.NewMalek_Pelak.queryById('cboCharPelakNew');
        var cboCityPelakNew = App.NewMalek_Pelak.queryById('cboCityPelakNew');
        var _2charPelakNew = App.NewMalek_Pelak.queryById('_2charPelakNew');
        var _3charPelakNew = App.NewMalek_Pelak.queryById('_3charPelakNew');
        var cboSerialPelakNew = App.NewMalek_Pelak.queryById('cboSerialPelakNew');
        var cboStatusPelakNew = App.NewMalek_Pelak.queryById('cboStatusPelakNew');
        var txtDescPelakNew = App.NewMalek_Pelak.queryById('txtDescPelakNew');
        var fldIdPelak = App.NewMalek_Pelak.queryById('fldIdPelak');

        if (command == 'EditPelaque') {
            var tabId = App.SearchParvande.activeTab.id;
            var currentcode = document.getElementById('"KCode"' + tabId.substring(14)).innerText;
            for (var i = 1; i < App.SearchParvande.tabBar.tabPanel.items.length; i++) {
                var tabsId = App.SearchParvande.tabBar.tabPanel.items.items[i].id;
                if (Ext.getCmp(tabsId).queryById("fldCarPlaqueID").getValue() == record.data.fldID
                && tabId != tabsId) {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "لطفا ابتدا پرونده(های) دیگر مربوط به پلاک مورد نظر را بسته و سپس اقدام به ویرایش پلاک نمایید.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }
            }

            App.NewMalek_Pelak.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/NewMalek_Pelak/DetailsPelak',
                params: {
                    Id: record.data.fldID,
                },
                success: function (data) {
                    if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    else {
                        if (data.fldPlaqueTypeID == "2") {
                            _2charPelakNew.show();
                            cboCharPelakNew.show();
                            _3charPelakNew.minLength = "3";
                            _3charPelakNew.inputEl.set({ maxLength: 3 });
                            _3charPelakNew.setWidth(30);
                            cboCharPelakNew.enable();

                            _2charPelakNew.setValue(data.Two);
                            _3charPelakNew.setValue(data.Three);
                            cboCharPelakNew.setValue(data.fldCharacterPersianPlaqueID);
                        }
                        else {
                            _2charPelakNew.hide();
                            cboCharPelakNew.hide();
                            _3charPelakNew.inputEl.set({ maxLength: 10 });
                            _3charPelakNew.minLength = "";
                            _3charPelakNew.setWidth(170);
                            cboCharPelakNew.disable();

                            _3charPelakNew.setValue(data.fldPlaqueNumber);
                        }
                        cboTypepelakNew.setValue(data.fldPlaqueTypeID);
                        App.NewMalek_Pelak.queryById('cboCityPelakNew').getStore().load({
                            params: {
                                cboTypeP: App.NewMalek_Pelak.queryById('cboTypepelakNew').getDisplayValue()
                            }
                        });
                        cboCityPelakNew.setValue(data.fldPlaqueCityID);
                        cboSerialPelakNew.setValue(data.fldPlaqueSerialID);
                        cboStatusPelakNew.setValue(data.fldStatusPlaqeID);
                        txtDescPelakNew.setValue(data.fldDesc);
                        fldIdPelak.setValue(data.fldId);
                    }
                    App.NewMalek_Pelak.body.mask().hide();
                }
            });
        }
        else if (command == 'DeletePelaque') {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        App.NewMalek_Pelak.body.mask('در حال انجام عملیات...');
                        Ext.net.DirectMethod.request({
                            url: '/NewVer/NewMalek_Pelak/DeletePelak',
                            params: {
                                Id: record.data.fldID
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Err == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                if (data.Err != 1) {
                                    App.NewMalek_Pelak.queryById('GridPelakNew').getStore().getProxy().setExtraParam("NationalCode", '@ViewBag.NationalCode');
                                    App.NewMalek_Pelak.queryById('GridPelakNew').getStore().load();
                                    var tabId = App.SearchParvande.activeTab.id;
                                    var code = "";
                                    if (Ext.getCmp(tabId).queryById('cboTypeOwner').getValue() == "1") {
                                        code = App.NewMalek_Pelak.queryById('txtCodeMelliNew').getValue();
                                    }
                                    else if (Ext.getCmp(tabId).queryById('cboTypeOwner').getValue() == "0") {
                                        code = App.NewMalek_Pelak.queryById('txtCodeEghtesadiNew').getValue();
                                    }
                                    else {
                                        code = App.NewMalek_Pelak.queryById('txtCodeMelliAtbaNew').getValue();
                                    }
                                    Ext.getCmp(tabId).queryById('CboSh_Pelak').clearValue();
                                    Ext.getCmp(tabId).queryById('CboSh_Pelak').store.load({
                                        params: {
                                            NationalCode: code
                                        }
                                    });
                                    if (record.data.fldID == App.NewMalek_Pelak.queryById('fldIdPelak').getValue()) {
                                        ClearPelakNew();
                                    }
                                }
                                App.NewMalek_Pelak.body.mask().hide();
                            }
                        });
                    }
                }
            });
        }
    }

    function SaveMalek_Pelak() {
        var cboCharPelakNew = App.NewMalek_Pelak.queryById('cboCharPelakNew');
        var _3charPelakNew = App.NewMalek_Pelak.queryById('_3charPelakNew');
        var _2charPelakNew = App.NewMalek_Pelak.queryById('_2charPelakNew');
        var cboCityPelakNew = App.NewMalek_Pelak.queryById('cboCityPelakNew');
        var cboSerialPelakNew = App.NewMalek_Pelak.queryById('cboSerialPelakNew');
        var cboTypepelakNew = App.NewMalek_Pelak.queryById('cboTypepelakNew');
        var cboStatusPelakNew = App.NewMalek_Pelak.queryById('cboStatusPelakNew');
        var txtDescPelakNew = App.NewMalek_Pelak.queryById('txtDescPelakNew');
        var fldIdMalek = App.NewMalek_Pelak.queryById('fldIdMalek');
        var fldIdPelak = App.NewMalek_Pelak.queryById('fldIdPelak');

        if ('@ViewBag.Malek' == 'False') {/*فقط ذخیره پلاک*/
            var er = false;

            if (_3charPelakNew.validate() == false) {
                er = true;
            }
            if (cboCityPelakNew.validate() == false) {
                er = true;
            }
            if (cboSerialPelakNew.validate() == false) {
                er = true;
            }
            if (cboTypepelakNew.validate() == false) {
                er = true;
            }
            if (cboStatusPelakNew.validate() == false) {
                er = true;
            }
            var charr = '';
            if (cboTypepelakNew.getDisplayValue() == 'ملی') {
                if (cboCharPelakNew.validate() == false) {
                    er = true;
                }
                if (_2charPelakNew.validate() == false) {
                    er = true;
                }
                charr = cboCharPelakNew.getDisplayValue();
            }
            if (er == true)
                return;

            var plaquenum;
            plaquenum = _3charPelakNew.getValue().toString() + charr + _2charPelakNew.getValue().toString();

            App.NewMalek_Pelak.body.mask("در حال ذخیره سازی...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/NewMalek_Pelak/SavePelak',
                params: {
                    fldId: fldIdPelak.getValue(),
                    fldPlaqueNumber: plaquenum,
                    fldPlaqueCityID: cboCityPelakNew.getValue(),
                    fldPlaqueSerialID: cboSerialPelakNew.getValue(),
                    fldPlaqueTypeID: cboTypepelakNew.getValue(),
                    fldOwnerID: fldIdMalek.getValue(),
                    fldCharacterPersianPlaqueID: cboCharPelakNew.getValue(),
                    fldStatusPlaqeID: cboStatusPelakNew.getValue(),
                    fldDesc: txtDescPelakNew.getValue()
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Er == 1) {
                        ic = Ext.MessageBox.ERROR;
                    }
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK,
                        fn: function (btn) {
                            if (data.Er != 1) {
                                if (btn == "ok") {
                                    App.NewMalek_Pelak.destroy();
                                }
                            }
                        }
                    });
                    if (data.Err != 1) {
                        App.NewMalek_Pelak.queryById('GridPelakNew').getStore().getProxy().setExtraParam("NationalCode", '@ViewBag.NationalCode');
                        App.NewMalek_Pelak.queryById('GridPelakNew').getStore().load();

                        var tabId = App.SearchParvande.activeTab.id;
                        var city = cboCityPelakNew.getDisplayValue();
                        var Serial = cboSerialPelakNew.getDisplayValue();
                        var fldIdPelak = App.NewMalek_Pelak.queryById('fldIdPelak').getValue();
                        var currentcode = document.getElementById('"KCode"' + tabId.substring(14)).innerText;

                        if (App.NewMalek_Pelak.queryById('fldIdPelak').getValue() != 0 && App.NewMalek_Pelak.queryById('fldIdPelak').getValue() == Ext.getCmp(tabId).queryById('fldCarPlaqueID').getValue()) {
                            document.getElementById('"KPelak1"' + tabId.substring(14)).innerText = city;
                            document.getElementById('"KPelak2"' + tabId.substring(14)).innerText = Serial;
                            document.getElementById('"KPelak3"' + tabId.substring(14)).innerText = plaquenum;
                            Ext.net.DirectMethod.request({
                                url: '/NewVer/SelectParvande/Fill',
                                params: {
                                    CarFileId: tabId.substring(14)
                                },
                                success: function (data1) {
                                    var html = "کد ملی:" + data1.CodeMeli + "</br>VIN:" + data1.vin + "</br>شماره پلاک:" + data1.plaq + "</br>شماره موتور:" + data1.motor +
                                    "</br>شماره شاسی:" + data1.shasi + "</br>نوع ساخت:" + data1.make + "</br>نوع کاربری:" + data1.account + "</br>نوع کابین:" + data1.cabin + "</br>سیستم خودرو:" + data1.syst + "</br>تیپ خودرو:" +
                                    data1.modell + "</br>کلاس خودرو" + data1.classs + "</brرنگ خودرو:>" + data1.color + "</br>سال تولید:" + data1.year +
                                    "</br>تاریخ پلاک گذاری:" + data1.datep + "</br>تاریخ اولین بیمه:" + data1.date;

                                    Ext.create('Ext.tip.ToolTip', {
                                        target: Ext.getCmp(tabId).tab,
                                        anchorToTarget: true,
                                        anchorOffset: 25,
                                        anchorSize: {
                                            width: 58,
                                            height: 20
                                        },
                                        anchor: 'top',
                                        closable: false,
                                        dismissDelay: 0,
                                        baseCls: 'ifs-tooltip',
                                        shadow: false,
                                        autoHide: true,
                                        showDelay: 0,
                                        html: html
                                    });
                                    App.GridSearch.store.load();
                                }
                            });
                        }
                        var code = "";
                        if (Ext.getCmp(tabId).queryById('cboTypeOwner').getValue() == "1") {
                            code = App.NewMalek_Pelak.queryById('txtCodeMelliNew').getValue();
                        }
                        else if (Ext.getCmp(tabId).queryById('cboTypeOwner').getValue() == "0") {
                            code = App.NewMalek_Pelak.queryById('txtCodeEghtesadiNew').getValue();
                        }
                        else {
                            code = App.NewMalek_Pelak.queryById('txtCodeMelliAtbaNew').getValue();
                        }
                        Ext.getCmp(tabId).queryById('CboSh_Pelak').clearValue();
                        Ext.getCmp(tabId).queryById('CboSh_Pelak').store.load({
                            params: {
                                NationalCode: code
                            }
                        });
                    }
                    App.NewMalek_Pelak.body.mask().hide();
                }
            });
        }
        else if ('@ViewBag.Malek' == 'True' && '@ViewBag.State' == '0') {/*ثبت مالک*/
            var CodeNew = "";
            var pluqee = "";
            var txtNameNew = App.NewMalek_Pelak.queryById('txtNameNew');
            var txtEmailNew = App.NewMalek_Pelak.queryById('txtEmailNew');
            var txtCodeMelliNew = App.NewMalek_Pelak.queryById('txtCodeMelliNew');
            var txtCodeEghtesadiNew = App.NewMalek_Pelak.queryById('txtCodeEghtesadiNew');
            var txtCodeMelliAtbaNew = App.NewMalek_Pelak.queryById('txtCodeMelliAtbaNew');
            var txtMobileNew = App.NewMalek_Pelak.queryById('txtMobileNew');
            var txtAddressNew = App.NewMalek_Pelak.queryById('txtAddressNew');
            var txtPostalNew = App.NewMalek_Pelak.queryById('txtPostalNew');
            var txtDescMNew = App.NewMalek_Pelak.queryById('txtDescMNew');
            var txtTarikhNew = App.NewMalek_Pelak.queryById('txtTarikhNew');
            var fldIdMalek = App.NewMalek_Pelak.queryById('fldIdMalek');
            var fldTypeEs = App.NewMalek_Pelak.queryById('fldTypeEs');
            var er = false;

            if ('@ViewBag.TypeMalek' == "1") {/*حقیقی*/
                CodeNew = txtCodeMelliNew.getValue();
                if (txtCodeMelliNew.validate() == false) {
                    er = true;
                }
            }
            else if ('@ViewBag.TypeMalek' == "0") {
                CodeNew = txtCodeEghtesadiNew.getValue();
                if (txtCodeEghtesadiNew.validate() == false) {
                    er = true;
                }
            }
            else {
                CodeNew = txtCodeMelliAtbaNew.getValue();
                if (txtCodeMelliAtbaNew.validate() == false) {
                    er = true;
                }
            }

            if (cboTypepelakNew.getValue() == "2") {/*ملی*/
                if (_3charPelakNew.getValue() != "" && _2charPelakNew.getValue() == ""
                    || _3charPelakNew.getValue() == "" && _2charPelakNew.getValue() != ""
                    || _3charPelakNew.getValue() != "" && _2charPelakNew.getValue() != "") {
                    _3charPelakNew.allowBlank = false;
                    _2charPelakNew.allowBlank = false;
                    cboSerialPelakNew.allowBlank = false;
                    cboCharPelakNew.allowBlank = false;
                    pluqee = _3charPelakNew.getValue().toString() + cboCharPelakNew.getDisplayValue() + _2charPelakNew.getValue().toString();
                }
                else {
                    _3charPelakNew.allowBlank = true;
                    _2charPelakNew.allowBlank = true;
                    cboSerialPelakNew.allowBlank = true;
                    cboCharPelakNew.allowBlank = true;
                }
                _3charPelakNew.validate();
                _2charPelakNew.validate();
                cboSerialPelakNew.validate();
                cboCharPelakNew.validate();

                if (_3charPelakNew.validate() == false) {
                    er = true;
                }
                if (_2charPelakNew.validate() == false) {
                    er = true;
                }
                if (cboSerialPelakNew.validate() == false) {
                    er = true;
                }
                if (cboCharPelakNew.validate() == false) {
                    er = true;
                }
            }
            else {
                if (_3charPelakNew.getValue() != "") {
                    _3charPelakNew.allowBlank = false;
                    cboSerialPelakNew.allowBlank = false;
                    pluqee = _3charPelakNew.getValue().toString();
                    if (cboCityPelakNew.validate() == false) {
                        er = true;
                    }
                }
                else {
                    _3charPelakNew.allowBlank = true;
                    cboSerialPelakNew.allowBlank = true;
                }
                _3charPelakNew.validate();
                cboSerialPelakNew.validate();

                if (_3charPelakNew.validate() == false) {
                    er = true;
                }
                if (cboSerialPelakNew.validate() == false) {
                    er = true;
                }
            }

            if (txtNameNew.validate() == false) {
                er = true;
            }
            if (txtTarikhNew.validate() == false) {
                er = true;
            }
            if (txtMobileNew.validate() == false) {
                er = true;
            }

            if (er == true)
                return;
            App.NewMalek_Pelak.body.mask("در حال ذخیره سازی...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/NewMalek_Pelak/SaveMalek_Pelak',
                params: {
                    fldID: fldIdMalek.getValue(),
                    fldName: txtNameNew.getValue(),
                    fldOwnerType: '@ViewBag.TypeMalek',
                    fldMelli_EconomicCode: CodeNew,
                    fldEmail: txtEmailNew.getValue(),
                    fldMobile: txtMobileNew.getValue(),
                    fldAddress: txtAddressNew.getValue(),
                    fldPostalCode: txtPostalNew.getValue(),
                    fldDesc: txtDescMNew.getValue(),
                    fldDateShamsi: txtTarikhNew.getRawValue(),
                    fldType: fldTypeEs.getValue(),/*az webServis*/
                    /*اطلاعات پلاک*/
                    fldIdPelak: fldIdPelak.getValue(),
                    fldPlaqueNumber: pluqee,
                    fldPlaqueCityID: cboCityPelakNew.getValue(),
                    fldPlaqueSerialID: cboSerialPelakNew.getValue(),
                    fldPlaqueTypeID: cboTypepelakNew.getValue(),
                    fldCharacterPersianPlaqueID: cboCharPelakNew.getValue(),
                    fldStatusPlaqeID: cboStatusPelakNew.getValue(),
                    fldDescPelak: txtDescPelakNew.getValue()
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Err == 1) {
                        ic = Ext.MessageBox.ERROR;
                    }
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK,
                        fn: function (btn) {
                            if (btn == 'ok') {
                                if (data.Err != 1) {
                                    App.NewMalek_Pelak.destroy();
                                }
                            }
                        }
                    });
                    if (data.Err != 1) {
                        var tabId = App.SearchParvande.activeTab.id;
                        var code = "";
                        if (Ext.getCmp(tabId).queryById('cboTypeOwner').getValue() == "1") {
                            code = App.NewMalek_Pelak.queryById('txtCodeMelliNew').getValue();
                        }
                        else if (Ext.getCmp(tabId).queryById('cboTypeOwner').getValue() == "0") {
                            code = App.NewMalek_Pelak.queryById('txtCodeEghtesadiNew').getValue();
                        }
                        else {
                            code = App.NewMalek_Pelak.queryById('txtCodeMelliAtbaNew').getValue();
                        }
                        Ext.getCmp(tabId).queryById('CboSh_Pelak').enable();
                        Ext.getCmp(tabId).queryById('CboSh_Pelak').clearValue();
                        Ext.getCmp(tabId).queryById('CboSh_Pelak').store.load({
                            params: {
                                NationalCode: code
                            }
                        });
                        /*Ext.getCmp(tabId).queryById('GridChangeOwner').getStore().getProxy().setExtraParam("PlaquId", Ext.getCmp(tabId).queryById('CboSh_Pelak').getValue());
                        Ext.getCmp(tabId).queryById('GridChangeOwner').getStore().load();*/
                        Ext.getCmp(tabId).queryById('txtNameFamilyMalek').setText(txtNameNew.getValue());
                        Ext.getCmp(tabId).queryById('btnNewOwner').disable();
                        Ext.getCmp(tabId).queryById('btnEditOwner').enable();
                    }
                    App.NewMalek_Pelak.body.mask().hide();
                }
            });
        }
        else {/*ویرایش مالک*/
            var CodeNew = "";
            var pluqee = "";
            var txtNameNew = App.NewMalek_Pelak.queryById('txtNameNew');
            var txtEmailNew = App.NewMalek_Pelak.queryById('txtEmailNew');
            var txtCodeMelliNew = App.NewMalek_Pelak.queryById('txtCodeMelliNew');
            var txtCodeEghtesadiNew = App.NewMalek_Pelak.queryById('txtCodeEghtesadiNew');
            var txtCodeMelliAtbaNew = App.NewMalek_Pelak.queryById('txtCodeMelliAtbaNew');
            var txtMobileNew = App.NewMalek_Pelak.queryById('txtMobileNew');
            var txtAddressNew = App.NewMalek_Pelak.queryById('txtAddressNew');
            var txtPostalNew = App.NewMalek_Pelak.queryById('txtPostalNew');
            var txtDescMNew = App.NewMalek_Pelak.queryById('txtDescMNew');
            var txtTarikhNew = App.NewMalek_Pelak.queryById('txtTarikhNew');
            var fldIdMalek = App.NewMalek_Pelak.queryById('fldIdMalek');
            var fldTypeEs = App.NewMalek_Pelak.queryById('fldTypeEs');
            var fldIdPelak = App.NewMalek_Pelak.queryById('fldIdPelak');

            var er = false;

            if ('@ViewBag.TypeMalek' == "1") {/*حقیقی*/
                CodeNew = txtCodeMelliNew.getValue();
                if (txtCodeMelliNew.validate() == false) {
                    er = true;
                }
            }
            else if ('@ViewBag.TypeMalek' == "0") {
                CodeNew = txtCodeEghtesadiNew.getValue();
                if (txtCodeEghtesadiNew.validate() == false) {
                    er = true;
                }
            }
            else {
                CodeNew = txtCodeMelliAtbaNew.getValue();
                if (txtCodeMelliAtbaNew.validate() == false) {
                    er = true;
                }
            }

            if (fldIdPelak.getValue() == "0") {
                if (cboTypepelakNew.getValue() == "2") {/*ملی*/
                    if (_3charPelakNew.getValue() != "" && _2charPelakNew.getValue() == ""
                        || _3charPelakNew.getValue() == "" && _2charPelakNew.getValue() != ""
                        || _3charPelakNew.getValue() != "" && _2charPelakNew.getValue() != "") {
                        _3charPelakNew.allowBlank = false;
                        _2charPelakNew.allowBlank = false;
                        cboSerialPelakNew.allowBlank = false;
                        cboCharPelakNew.allowBlank = false;
                        pluqee = _3charPelakNew.getValue().toString() + cboCharPelakNew.getDisplayValue() + _2charPelakNew.getValue().toString();
                    }
                    else {
                        _3charPelakNew.allowBlank = true;
                        _2charPelakNew.allowBlank = true;
                        cboSerialPelakNew.allowBlank = true;
                        cboCharPelakNew.allowBlank = true;
                    }
                    _3charPelakNew.validate();
                    _2charPelakNew.validate();
                    cboSerialPelakNew.validate();
                    cboCharPelakNew.validate();

                    if (_3charPelakNew.validate() == false) {
                        er = true;
                    }
                    if (_2charPelakNew.validate() == false) {
                        er = true;
                    }
                    if (cboSerialPelakNew.validate() == false) {
                        er = true;
                    }
                    if (cboCharPelakNew.validate() == false) {
                        er = true;
                    }
                }
                else {
                    if (_3charPelakNew.getValue() != "") {
                        _3charPelakNew.allowBlank = false;
                        cboSerialPelakNew.allowBlank = false;
                        pluqee = _3charPelakNew.getValue().toString();
                        if (cboCityPelakNew.validate() == false) {
                            er = true;
                        }
                    }
                    else {
                        _3charPelakNew.allowBlank = true;
                        cboSerialPelakNew.allowBlank = true;
                    }
                    _3charPelakNew.validate();
                    cboSerialPelakNew.validate();

                    if (_3charPelakNew.validate() == false) {
                        er = true;
                    }
                }
            }
            else {
                if (_3charPelakNew.validate() == false) {
                    er = true;
                }
                if (cboCityPelakNew.validate() == false) {
                    er = true;
                }
                if (cboSerialPelakNew.validate() == false) {
                    er = true;
                }
                if (cboTypepelakNew.validate() == false) {
                    er = true;
                }
                if (cboStatusPelakNew.validate() == false) {
                    er = true;
                }
                if (cboTypepelakNew.getDisplayValue() == 'ملی') {
                    if (cboCharPelakNew.validate() == false) {
                        er = true;
                    }
                    if (_2charPelakNew.validate() == false) {
                        er = true;
                    }
                }
            }

            if (txtNameNew.validate() == false) {
                er = true;
            }
            if (txtTarikhNew.validate() == false) {
                er = true;
            }
            if (txtMobileNew.validate() == false) {
                er = true;
            }

            if (er == true)
                return;

            App.NewMalek_Pelak.body.mask("در حال ذخیره سازی...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/NewMalek_Pelak/SaveMalek_Pelak',
                params: {
                    fldID: fldIdMalek.getValue(),
                    fldName: txtNameNew.getValue(),
                    fldOwnerType: '@ViewBag.TypeMalek',
                    fldMelli_EconomicCode: CodeNew,
                    fldEmail: txtEmailNew.getValue(),
                    fldMobile: txtMobileNew.getValue(),
                    fldAddress: txtAddressNew.getValue(),
                    fldPostalCode: txtPostalNew.getValue(),
                    fldDesc: txtDescMNew.getValue(),
                    fldDateShamsi: txtTarikhNew.getRawValue(),
                    fldType: fldTypeEs.getValue(),/*az webServis*/
                    /*اطلاعات پلاک*/
                    fldIdPelak: fldIdPelak.getValue(),
                    fldPlaqueNumber: _3charPelakNew.getValue().toString() + cboCharPelakNew.getDisplayValue() + _2charPelakNew.getValue().toString(),
                    fldPlaqueCityID: cboCityPelakNew.getValue(),
                    fldPlaqueSerialID: cboSerialPelakNew.getValue(),
                    fldPlaqueTypeID: cboTypepelakNew.getValue(),
                    fldCharacterPersianPlaqueID: cboCharPelakNew.getValue(),
                    fldStatusPlaqeID: cboStatusPelakNew.getValue(),
                    fldDescPelak: txtDescPelakNew.getValue()
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Err == 1) {
                        ic = Ext.MessageBox.ERROR;
                    }
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK,
                        fn: function (btn) {
                            if (btn == 'ok') {
                                if (data.Err != 1) {
                                    App.NewMalek_Pelak.destroy();
                                }
                            }
                        }
                    });
                    /*برای مالک*/
                    var tabId = App.SearchParvande.activeTab.id;
                    Ext.getCmp(tabId).queryById('txtNameFamilyMalek').setText(txtNameNew.getValue());

                    if (App.NewMalek_Pelak.queryById('fldIdMalek').getValue() != 0 && App.NewMalek_Pelak.queryById('fldIdMalek').getValue() == Ext.getCmp(tabId).queryById('fldMalekId').getValue()) {
                        document.getElementById('"KName"' + tabId.substring(14)).innerText = txtNameNew.getValue();
                        Ext.getCmp(tabId).setTitle(txtNameNew.getValue());

                        if (App.NewMalek_Pelak.queryById('fldIdPelak').getValue() != 0 && App.NewMalek_Pelak.queryById('fldIdPelak').getValue() == Ext.getCmp(tabId).queryById('fldCarPlaqueID').getValue()) {
                            document.getElementById('"KPelak1"' + tabId.substring(14)).innerText = cboCityPelakNew.getDisplayValue();
                            document.getElementById('"KPelak2"' + tabId.substring(14)).innerText = cboSerialPelakNew.getDisplayValue();
                            document.getElementById('"KPelak3"' + tabId.substring(14)).innerText = _3charPelakNew.getValue().toString() + cboCharPelakNew.getDisplayValue() + _2charPelakNew.getValue().toString();
                        };

                        Ext.net.DirectMethod.request({
                            url: '/NewVer/SelectParvande/Fill',
                            params: {
                                CarFileId: tabId.substring(14)
                            },
                            success: function (data1) {
                                var html = "کد ملی:" + data1.CodeMeli + "</br>VIN:" + data1.vin + "</br>شماره پلاک:" + data1.plaq + "</br>شماره موتور:" + data1.motor +
                                "</br>شماره شاسی:" + data1.shasi + "</br>نوع ساخت:" + data1.make + "</br>نوع کاربری:" + data1.account + "</br>نوع کابین:" + data1.cabin + "</br>سیستم خودرو:" + data1.syst + "</br>تیپ خودرو:" +
                                data1.modell + "</br>کلاس خودرو" + data1.classs + "</brرنگ خودرو:>" + data1.color + "</br>سال تولید:" + data1.year +
                                "</br>تاریخ پلاک گذاری:" + data1.datep + "</br>تاریخ اولین بیمه:" + data1.date;
                                Ext.create('Ext.tip.ToolTip', {
                                    target: Ext.getCmp(tabId).tab,
                                    anchorToTarget: true,
                                    anchorOffset: 25,
                                    anchorSize: {
                                        width: 58,
                                        height: 20
                                    },
                                    anchor: 'top',
                                    closable: false,
                                    dismissDelay: 0,
                                    baseCls: 'ifs-tooltip',
                                    shadow: false,
                                    autoHide: true,
                                    showDelay: 0,
                                    html: html
                                });
                            }
                        });
                        App.GridSearch.store.load();
                    }
                    var code = "";
                    if (Ext.getCmp(tabId).queryById('cboTypeOwner').getValue() == "1") {
                        code = App.NewMalek_Pelak.queryById('txtCodeMelliNew').getValue();
                    }
                    else if (Ext.getCmp(tabId).queryById('cboTypeOwner').getValue() == "0") {
                        code = App.NewMalek_Pelak.queryById('txtCodeEghtesadiNew').getValue();
                    }
                    else {
                        code = App.NewMalek_Pelak.queryById('txtCodeMelliAtbaNew').getValue();
                    }
                    Ext.getCmp(tabId).queryById('CboSh_Pelak').clearValue();
                    Ext.getCmp(tabId).queryById('CboSh_Pelak').store.load({
                        params: {
                            NationalCode: code
                        }
                    });
                    /*Ext.getCmp(tabId).queryById('GridChangeOwner').getStore().getProxy().setExtraParam("PlaquId", Ext.getCmp(tabId).queryById('CboSh_Pelak').getValue());
                    Ext.getCmp(tabId).queryById('GridChangeOwner').getStore().load();*/
                    App.NewMalek_Pelak.body.mask().hide();
                }
            });
        }
    }

    function ClearPelakNew() {
        App.NewMalek_Pelak.queryById('cboCharPelakNew').setValue("");
        App.NewMalek_Pelak.queryById('_3charPelakNew').setValue("");
        App.NewMalek_Pelak.queryById('_2charPelakNew').setValue("");
        App.NewMalek_Pelak.queryById('cboSerialPelakNew').setValue("");
        App.NewMalek_Pelak.queryById('cboTypepelakNew').setValue("2");
        App.NewMalek_Pelak.queryById('cboCityPelakNew').getStore().load({
            params: {
                cboTypeP: App.NewMalek_Pelak.queryById('cboTypepelakNew').getDisplayValue()
            }
        });
        App.NewMalek_Pelak.queryById('cboStatusPelakNew').setValue("1");
        App.NewMalek_Pelak.queryById('txtDescPelakNew').setValue("");
        App.NewMalek_Pelak.queryById('fldIdPelak').setValue(0);
    }

    var addKeyMapMalek = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var nextfld;
                    var keyfield = App.NewMalek_Pelak.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    if (keyfield.itemId == "txtDescMNew") {
                        nextfld = App.NewMalek_Pelak.queryById("cboTypepelakNew");
                        nextfld.focus();
                        return;
                    }
                    else if (keyfield.itemId == "cboStatusPelakNew") {
                        if (App.NewMalek_Pelak.queryById("cboTypepelakNew").getValue() == "2") {
                            nextfld = App.NewMalek_Pelak.queryById("_2charPelakNew");
                        }
                        else {
                            nextfld = App.NewMalek_Pelak.queryById("_3charPelakNew");
                        }
                        nextfld.focus();
                        return;
                    }
                    else if (keyfield.itemId == "_2charPelakNew") {
                        /*if (App.NewMalek_Pelak.queryById("cboTypepelakNew").getValue() == "2") {*/
                        nextfld = App.NewMalek_Pelak.queryById("cboCharPelakNew");
                        nextfld.focus();
                        /*}
                        else {
                            nextfld = App.NewMalek_Pelak.queryById("txtDescPelakNew");
                            nextfld.focus();
                        }*/
                        return;
                    }
                    else if (keyfield.itemId == "cboCharPelakNew") {
                        nextfld = App.NewMalek_Pelak.queryById("_3charPelakNew");
                        nextfld.focus();
                        return;
                    }
                    else if (keyfield.itemId == "_3charPelakNew") {
                        nextfld = App.NewMalek_Pelak.queryById("txtDescPelakNew");
                        nextfld.focus();
                        return;
                    }
                    else if (keyfield.itemId == "txtDescPelakNew") {
                        return;
                    }

                    if ('@ViewBag.NationalCode'.length == 10) {
                        if (App.NewMalek_Pelak.queryById("fldTypeEs").getValue() == "false") {
                            if (keyfield.itemId == "txtTarikhNew") {
                                nextfld = App.NewMalek_Pelak.queryById("txtNameNew");
                                nextfld.focus();
                                /*EstelamNew();*/
                            }
                            else {
                                if (keyfield.itemId == "txtNameNew") {
                                    nextfld = App.NewMalek_Pelak.queryById("txtEmailNew");
                                }
                                else {
                                    nextfld = keyfield.nextSibling().nextSibling();
                                }
                                nextfld.focus();
                            }
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.focus();
                        }
                    }
                    else {
                        if (keyfield.itemId == "txtTarikhNew") {
                            nextfld = App.NewMalek_Pelak.queryById("txtNameNew");
                        }
                        else if (keyfield.itemId == "txtNameNew") {
                            nextfld = App.NewMalek_Pelak.queryById("txtEmailNew");
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                        }
                        nextfld.focus();
                    }
                }
            }]
        });
    };
</script>