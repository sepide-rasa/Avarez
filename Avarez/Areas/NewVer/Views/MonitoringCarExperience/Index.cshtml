@model IEnumerable<Avarez.Models.sp_GetNotVerifiedCarExperience>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}
<script>
    var hub2 = $.connection.S_hub;
    /*$(document).ready(function () {*/
    hub2.client.LoadCarExperience = function () {
        var grid = App.MonitoringCarExperience.queryById("GridCarExperience");
        $.ajax({
            url: '/NewVer/MonitoringCarExperience/GetNotAccept',
            type: 'get',
            datatype: 'json',
            error: function (xhr, status, error) {
                alert(xhr + status);
            },
            success: function (result) {
                var a = document.getElementsByClassName("MonitoringSavabegh");
                if (result.length == 0) {
                    a[0].classList.remove("badge");
                }
                else {
                    var count = "'" + result.length + "'";
                    Ext.util.CSS.updateRule('.badge::after', 'content', count);
                    a[0].classList.add("badge");
                }
                grid.store.loadData(result);
            }
        });
    };
    $.connection.hub.start();
    /*});*/
</script>

@(X.Panel()
    .ID("MonitoringCarExperience")
    .Listeners(l => l.Render.Handler = "App.MonitoringCarExp.add(App.MonitoringCarExperience);")
    //.Height(500)
    //.Width(1000)
    .Border(false)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(Ext.Net.LayoutType.Fit)
    .Items(
        X.Panel()
            .Border(false)
            .Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .Border(false)
                    .ItemID("GridCarExperience")
                    .BottomBar(X.PagingToolbar().HideRefresh(true))
                    .Store(
                        Html.X().StoreForModel()
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
                                    )
                    .PageSize(20000)
                    .RemoteFilter(true)
                    .RemotePaging(true)
                        )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                        )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn().Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldID).Text("کد").Flex(1).Hidden(true),
                        Html.X().Column().DataIndex(Model, m => m.fldMotorNumber).Text("شماره موتور").Wrap(true).Flex(5),
                        Html.X().Column().DataIndex(Model, m => m.fldVIN).Text("VIN").Wrap(true).Flex(5),                                             
                        Html.X().Column().DataIndex(Model, m => m.fldName).Text("شهرداری").Wrap(true).Flex(5),
                        Html.X().Column().DataIndex(Model, m => m.fldLetterNumber).Text("ش نامه").Wrap(true).Flex(3),
                        Html.X().Column().DataIndex(Model, m => m.fldStartDate).Text("از تاریخ").Wrap(true).Flex(3),
                        Html.X().Column().DataIndex(Model, m => m.fldEndDate).Text("تا تاریخ").Wrap(true).Flex(3),
                        //Html.X().Column().DataIndex(Model, m => m.fldAcceptName).Text("وضعیت تأیید").Wrap(true).Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldDate).Text("تاریخ ثبت").Wrap(true).Flex(3),
                        Html.X().Column().DataIndex(Model, m => m.fldKarbarSabt).Text("کاربر ثبت کننده").Wrap(true).Flex(3),                        
                        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Wrap(true).Flex(4),
                        Html.X().CommandColumn().Flex(5).Listeners(ls => ls.Command.Fn = "ShowMadrak")
                            .Commands(
                                Html.X().GridCommand()
                                    .CommandName("buttonMadrak")
                                    .StandOut(true)
                                    .MinWidth(60)
                                    .Text("مدرک")
                                    .ToolTip(tt => tt.Text = "مدرک"),
                                Html.X().GridCommand()
                                .CommandName("buttonTaeeid")
                                .StandOut(true)
                                .MinWidth(60)
                                .Text("تأیید")
                                .ToolTip(tt => tt.Text = "تأیید")   
                            )
                            )
                .SelectionModel(
                    Html.X().RowSelectionModel()
                        .Mode(Ext.Net.SelectionMode.Single)
    )
))
)

<script type="text/javascript">
    var ShowMadrak = function (column, commandd, record) {
        if (commandd == "buttonMadrak") {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/NewVer/SelectParvande/ShowMadrak',
                params: {
                    Id: record.data.fldID
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.net.Mask.show({ msg: '"در حال انجام عملیات..."' });
            Ext.net.DirectMethod.request({
                url: '/NewVer/Filtering_New/AccMadrakSavabegh',
                params: {
                    id: record.data.fldID,
                    CarfileId: record.data.fldCarFileID
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Er == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    Ext.net.Mask.hide();
                }
            });
        }
    };

</script>