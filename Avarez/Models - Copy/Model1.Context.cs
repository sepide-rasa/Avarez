//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Avarez.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class cartaxEntities : DbContext
    {
        public cartaxEntities()
            : base("name=cartaxEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblOnlineLog> tblOnlineLogs { get; set; }
    
        public virtual ObjectResult<sp_AccostType_LogSelect> sp_AccostType_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AccostType_LogSelect>("sp_AccostType_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AccostTypeDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AccostTypeDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AccostTypeInsert(string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AccostTypeInsert", fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_AccostTypeSelect> sp_AccostTypeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AccostTypeSelect>("sp_AccostTypeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AccostTypeUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AccostTypeUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_AccountBank_LogSelect> sp_AccountBank_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AccountBank_LogSelect>("sp_AccountBank_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AccountBankDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AccountBankDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AccountBankInsert(string fldAccountNumber, Nullable<int> fldBranchID, Nullable<int> fldtype, Nullable<int> fldCode, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldAccountNumberParameter = fldAccountNumber != null ?
                new ObjectParameter("fldAccountNumber", fldAccountNumber) :
                new ObjectParameter("fldAccountNumber", typeof(string));
    
            var fldBranchIDParameter = fldBranchID.HasValue ?
                new ObjectParameter("fldBranchID", fldBranchID) :
                new ObjectParameter("fldBranchID", typeof(int));
    
            var fldtypeParameter = fldtype.HasValue ?
                new ObjectParameter("fldtype", fldtype) :
                new ObjectParameter("fldtype", typeof(int));
    
            var fldCodeParameter = fldCode.HasValue ?
                new ObjectParameter("fldCode", fldCode) :
                new ObjectParameter("fldCode", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AccountBankInsert", fldAccountNumberParameter, fldBranchIDParameter, fldtypeParameter, fldCodeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_AccountBankSelect> sp_AccountBankSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AccountBankSelect>("sp_AccountBankSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AccountBankUpdate(Nullable<int> fldID, string fldAccountNumber, Nullable<int> fldBranchID, Nullable<int> fldtype, Nullable<int> fldCode, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldAccountNumberParameter = fldAccountNumber != null ?
                new ObjectParameter("fldAccountNumber", fldAccountNumber) :
                new ObjectParameter("fldAccountNumber", typeof(string));
    
            var fldBranchIDParameter = fldBranchID.HasValue ?
                new ObjectParameter("fldBranchID", fldBranchID) :
                new ObjectParameter("fldBranchID", typeof(int));
    
            var fldtypeParameter = fldtype.HasValue ?
                new ObjectParameter("fldtype", fldtype) :
                new ObjectParameter("fldtype", typeof(int));
    
            var fldCodeParameter = fldCode.HasValue ?
                new ObjectParameter("fldCode", fldCode) :
                new ObjectParameter("fldCode", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AccountBankUpdate", fldIDParameter, fldAccountNumberParameter, fldBranchIDParameter, fldtypeParameter, fldCodeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_AllDigitalArchives> sp_AllDigitalArchives(Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AllDigitalArchives>("sp_AllDigitalArchives", startParameter, endParameter);
        }
    
        public virtual ObjectResult<sp_AmountCost_LogSelect> sp_AmountCost_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AmountCost_LogSelect>("sp_AmountCost_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AmountCostDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AmountCostDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AmountCostInsert(Nullable<int> fldAmount, Nullable<System.DateTime> fldDateAmount, Nullable<int> fldCostID, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<long> fldUserID, string fldDesc, Nullable<bool> fldCountryDivisionsTreeApply, Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<bool> fldCarSeriesTreeApply, string fldUserPass, Nullable<bool> fldEffectiveUser, Nullable<bool> fldEffectiveOffice, Nullable<bool> fldEffectiveMunicipality)
        {
            var fldAmountParameter = fldAmount.HasValue ?
                new ObjectParameter("fldAmount", fldAmount) :
                new ObjectParameter("fldAmount", typeof(int));
    
            var fldDateAmountParameter = fldDateAmount.HasValue ?
                new ObjectParameter("fldDateAmount", fldDateAmount) :
                new ObjectParameter("fldDateAmount", typeof(System.DateTime));
    
            var fldCostIDParameter = fldCostID.HasValue ?
                new ObjectParameter("fldCostID", fldCostID) :
                new ObjectParameter("fldCostID", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldCountryDivisionsTreeApplyParameter = fldCountryDivisionsTreeApply.HasValue ?
                new ObjectParameter("fldCountryDivisionsTreeApply", fldCountryDivisionsTreeApply) :
                new ObjectParameter("fldCountryDivisionsTreeApply", typeof(bool));
    
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldCarSeriesTreeApplyParameter = fldCarSeriesTreeApply.HasValue ?
                new ObjectParameter("fldCarSeriesTreeApply", fldCarSeriesTreeApply) :
                new ObjectParameter("fldCarSeriesTreeApply", typeof(bool));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldEffectiveUserParameter = fldEffectiveUser.HasValue ?
                new ObjectParameter("fldEffectiveUser", fldEffectiveUser) :
                new ObjectParameter("fldEffectiveUser", typeof(bool));
    
            var fldEffectiveOfficeParameter = fldEffectiveOffice.HasValue ?
                new ObjectParameter("fldEffectiveOffice", fldEffectiveOffice) :
                new ObjectParameter("fldEffectiveOffice", typeof(bool));
    
            var fldEffectiveMunicipalityParameter = fldEffectiveMunicipality.HasValue ?
                new ObjectParameter("fldEffectiveMunicipality", fldEffectiveMunicipality) :
                new ObjectParameter("fldEffectiveMunicipality", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AmountCostInsert", fldAmountParameter, fldDateAmountParameter, fldCostIDParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldUserIDParameter, fldDescParameter, fldCountryDivisionsTreeApplyParameter, fldTypeCarParameter, fldCodeCarParameter, fldCarSeriesTreeApplyParameter, fldUserPassParameter, fldEffectiveUserParameter, fldEffectiveOfficeParameter, fldEffectiveMunicipalityParameter);
        }
    
        public virtual ObjectResult<sp_AmountCostSelect> sp_AmountCostSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AmountCostSelect>("sp_AmountCostSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AmountCostUpdate(Nullable<int> fldID, Nullable<int> fldAmount, Nullable<System.DateTime> fldDateAmount, Nullable<int> fldCostID, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<long> fldUserID, string fldDesc, Nullable<bool> fldCountryDivisionsTreeApply, Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<bool> fldCarSeriesTreeApply, string fldUserPass, Nullable<bool> fldEffectiveUser, Nullable<bool> fldEffectiveOffice, Nullable<bool> fldEffectiveMunicipality)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldAmountParameter = fldAmount.HasValue ?
                new ObjectParameter("fldAmount", fldAmount) :
                new ObjectParameter("fldAmount", typeof(int));
    
            var fldDateAmountParameter = fldDateAmount.HasValue ?
                new ObjectParameter("fldDateAmount", fldDateAmount) :
                new ObjectParameter("fldDateAmount", typeof(System.DateTime));
    
            var fldCostIDParameter = fldCostID.HasValue ?
                new ObjectParameter("fldCostID", fldCostID) :
                new ObjectParameter("fldCostID", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldCountryDivisionsTreeApplyParameter = fldCountryDivisionsTreeApply.HasValue ?
                new ObjectParameter("fldCountryDivisionsTreeApply", fldCountryDivisionsTreeApply) :
                new ObjectParameter("fldCountryDivisionsTreeApply", typeof(bool));
    
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldCarSeriesTreeApplyParameter = fldCarSeriesTreeApply.HasValue ?
                new ObjectParameter("fldCarSeriesTreeApply", fldCarSeriesTreeApply) :
                new ObjectParameter("fldCarSeriesTreeApply", typeof(bool));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldEffectiveUserParameter = fldEffectiveUser.HasValue ?
                new ObjectParameter("fldEffectiveUser", fldEffectiveUser) :
                new ObjectParameter("fldEffectiveUser", typeof(bool));
    
            var fldEffectiveOfficeParameter = fldEffectiveOffice.HasValue ?
                new ObjectParameter("fldEffectiveOffice", fldEffectiveOffice) :
                new ObjectParameter("fldEffectiveOffice", typeof(bool));
    
            var fldEffectiveMunicipalityParameter = fldEffectiveMunicipality.HasValue ?
                new ObjectParameter("fldEffectiveMunicipality", fldEffectiveMunicipality) :
                new ObjectParameter("fldEffectiveMunicipality", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AmountCostUpdate", fldIDParameter, fldAmountParameter, fldDateAmountParameter, fldCostIDParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldUserIDParameter, fldDescParameter, fldCountryDivisionsTreeApplyParameter, fldTypeCarParameter, fldCodeCarParameter, fldCarSeriesTreeApplyParameter, fldUserPassParameter, fldEffectiveUserParameter, fldEffectiveOfficeParameter, fldEffectiveMunicipalityParameter);
        }
    
        public virtual int sp_AnnouncementManagerAttachmentDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AnnouncementManagerAttachmentDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_AnnouncementManagerAttachmentFile> sp_AnnouncementManagerAttachmentFile(Nullable<int> fldID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AnnouncementManagerAttachmentFile>("sp_AnnouncementManagerAttachmentFile", fldIDParameter);
        }
    
        public virtual int sp_AnnouncementManagerAttachmentInsert(Nullable<int> fldAnnouncementID, byte[] fldAttachment, string fldFileName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldAnnouncementIDParameter = fldAnnouncementID.HasValue ?
                new ObjectParameter("fldAnnouncementID", fldAnnouncementID) :
                new ObjectParameter("fldAnnouncementID", typeof(int));
    
            var fldAttachmentParameter = fldAttachment != null ?
                new ObjectParameter("fldAttachment", fldAttachment) :
                new ObjectParameter("fldAttachment", typeof(byte[]));
    
            var fldFileNameParameter = fldFileName != null ?
                new ObjectParameter("fldFileName", fldFileName) :
                new ObjectParameter("fldFileName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AnnouncementManagerAttachmentInsert", fldAnnouncementIDParameter, fldAttachmentParameter, fldFileNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_AnnouncementManagerAttachmentSelect> sp_AnnouncementManagerAttachmentSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AnnouncementManagerAttachmentSelect>("sp_AnnouncementManagerAttachmentSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AnnouncementManagerAttachmentUpdate(Nullable<int> fldID, Nullable<int> fldAnnouncementID, byte[] fldAttachment, string fldFileName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldAnnouncementIDParameter = fldAnnouncementID.HasValue ?
                new ObjectParameter("fldAnnouncementID", fldAnnouncementID) :
                new ObjectParameter("fldAnnouncementID", typeof(int));
    
            var fldAttachmentParameter = fldAttachment != null ?
                new ObjectParameter("fldAttachment", fldAttachment) :
                new ObjectParameter("fldAttachment", typeof(byte[]));
    
            var fldFileNameParameter = fldFileName != null ?
                new ObjectParameter("fldFileName", fldFileName) :
                new ObjectParameter("fldFileName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AnnouncementManagerAttachmentUpdate", fldIDParameter, fldAnnouncementIDParameter, fldAttachmentParameter, fldFileNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AnnouncementManagerDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AnnouncementManagerDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AnnouncementManagerInsert(ObjectParameter fldID, string fldSubject, string fldMemo, Nullable<bool> fldShowStatus, Nullable<int> fldCountryDivisonTempID, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<System.DateTime> fldDateInsert)
        {
            var fldSubjectParameter = fldSubject != null ?
                new ObjectParameter("fldSubject", fldSubject) :
                new ObjectParameter("fldSubject", typeof(string));
    
            var fldMemoParameter = fldMemo != null ?
                new ObjectParameter("fldMemo", fldMemo) :
                new ObjectParameter("fldMemo", typeof(string));
    
            var fldShowStatusParameter = fldShowStatus.HasValue ?
                new ObjectParameter("fldShowStatus", fldShowStatus) :
                new ObjectParameter("fldShowStatus", typeof(bool));
    
            var fldCountryDivisonTempIDParameter = fldCountryDivisonTempID.HasValue ?
                new ObjectParameter("fldCountryDivisonTempID", fldCountryDivisonTempID) :
                new ObjectParameter("fldCountryDivisonTempID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldDateInsertParameter = fldDateInsert.HasValue ?
                new ObjectParameter("fldDateInsert", fldDateInsert) :
                new ObjectParameter("fldDateInsert", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AnnouncementManagerInsert", fldID, fldSubjectParameter, fldMemoParameter, fldShowStatusParameter, fldCountryDivisonTempIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldDateInsertParameter);
        }
    
        public virtual ObjectResult<sp_AnnouncementManagerSelect> sp_AnnouncementManagerSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AnnouncementManagerSelect>("sp_AnnouncementManagerSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AnnouncementManagerUpdate(Nullable<int> fldID, string fldSubject, string fldMemo, Nullable<bool> fldShowStatus, Nullable<int> fldCountryDivisonTempID, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<System.DateTime> fldDateInsert)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldSubjectParameter = fldSubject != null ?
                new ObjectParameter("fldSubject", fldSubject) :
                new ObjectParameter("fldSubject", typeof(string));
    
            var fldMemoParameter = fldMemo != null ?
                new ObjectParameter("fldMemo", fldMemo) :
                new ObjectParameter("fldMemo", typeof(string));
    
            var fldShowStatusParameter = fldShowStatus.HasValue ?
                new ObjectParameter("fldShowStatus", fldShowStatus) :
                new ObjectParameter("fldShowStatus", typeof(bool));
    
            var fldCountryDivisonTempIDParameter = fldCountryDivisonTempID.HasValue ?
                new ObjectParameter("fldCountryDivisonTempID", fldCountryDivisonTempID) :
                new ObjectParameter("fldCountryDivisonTempID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldDateInsertParameter = fldDateInsert.HasValue ?
                new ObjectParameter("fldDateInsert", fldDateInsert) :
                new ObjectParameter("fldDateInsert", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AnnouncementManagerUpdate", fldIDParameter, fldSubjectParameter, fldMemoParameter, fldShowStatusParameter, fldCountryDivisonTempIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldDateInsertParameter);
        }
    
        public virtual ObjectResult<sp_ApplicationPart_LogSelect> sp_ApplicationPart_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ApplicationPart_LogSelect>("sp_ApplicationPart_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ApplicationPartDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ApplicationPartDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ApplicationPartInsert(string fldTitle, Nullable<int> fldPID, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldDate, string fldUserPass)
        {
            var fldTitleParameter = fldTitle != null ?
                new ObjectParameter("fldTitle", fldTitle) :
                new ObjectParameter("fldTitle", typeof(string));
    
            var fldPIDParameter = fldPID.HasValue ?
                new ObjectParameter("fldPID", fldPID) :
                new ObjectParameter("fldPID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldDateParameter = fldDate.HasValue ?
                new ObjectParameter("fldDate", fldDate) :
                new ObjectParameter("fldDate", typeof(System.DateTime));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ApplicationPartInsert", fldTitleParameter, fldPIDParameter, fldUserIDParameter, fldDescParameter, fldDateParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ApplicationPartSelect> sp_ApplicationPartSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ApplicationPartSelect>("sp_ApplicationPartSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ApplicationPartUpdate(Nullable<int> fldID, string fldTitle, Nullable<int> fldPID, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldDate, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldTitleParameter = fldTitle != null ?
                new ObjectParameter("fldTitle", fldTitle) :
                new ObjectParameter("fldTitle", typeof(string));
    
            var fldPIDParameter = fldPID.HasValue ?
                new ObjectParameter("fldPID", fldPID) :
                new ObjectParameter("fldPID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldDateParameter = fldDate.HasValue ?
                new ObjectParameter("fldDate", fldDate) :
                new ObjectParameter("fldDate", typeof(System.DateTime));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ApplicationPartUpdate", fldIDParameter, fldTitleParameter, fldPIDParameter, fldUserIDParameter, fldDescParameter, fldDateParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Area_LogSelect> sp_Area_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Area_LogSelect>("sp_Area_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AreaDelete(Nullable<long> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AreaDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AreaInsert(ObjectParameter fldId, string fldName, Nullable<long> fldLocalID, Nullable<int> fldMunicipalityID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldLocalIDParameter = fldLocalID.HasValue ?
                new ObjectParameter("fldLocalID", fldLocalID) :
                new ObjectParameter("fldLocalID", typeof(long));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AreaInsert", fldId, fldNameParameter, fldLocalIDParameter, fldMunicipalityIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_AreaSelect> sp_AreaSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AreaSelect>("sp_AreaSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_AreaUpdate(Nullable<long> fldID, string fldName, Nullable<long> fldLocalID, Nullable<int> fldMunicipalityID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldLocalIDParameter = fldLocalID.HasValue ?
                new ObjectParameter("fldLocalID", fldLocalID) :
                new ObjectParameter("fldLocalID", typeof(long));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AreaUpdate", fldIDParameter, fldNameParameter, fldLocalIDParameter, fldMunicipalityIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Bank_LogSelect> sp_Bank_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Bank_LogSelect>("sp_Bank_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_BankBranch_LogSelect> sp_BankBranch_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BankBranch_LogSelect>("sp_BankBranch_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankBranchDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankBranchDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankBranchInsert(string fldName, string fldBranchCode, Nullable<int> fldBankID, string fldAddress, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldBranchCodeParameter = fldBranchCode != null ?
                new ObjectParameter("fldBranchCode", fldBranchCode) :
                new ObjectParameter("fldBranchCode", typeof(string));
    
            var fldBankIDParameter = fldBankID.HasValue ?
                new ObjectParameter("fldBankID", fldBankID) :
                new ObjectParameter("fldBankID", typeof(int));
    
            var fldAddressParameter = fldAddress != null ?
                new ObjectParameter("fldAddress", fldAddress) :
                new ObjectParameter("fldAddress", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankBranchInsert", fldNameParameter, fldBranchCodeParameter, fldBankIDParameter, fldAddressParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_BankBranchSelect> sp_BankBranchSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BankBranchSelect>("sp_BankBranchSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankBranchUpdate(Nullable<int> fldID, string fldName, string fldBranchCode, Nullable<int> fldBankID, string fldAddress, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldBranchCodeParameter = fldBranchCode != null ?
                new ObjectParameter("fldBranchCode", fldBranchCode) :
                new ObjectParameter("fldBranchCode", typeof(string));
    
            var fldBankIDParameter = fldBankID.HasValue ?
                new ObjectParameter("fldBankID", fldBankID) :
                new ObjectParameter("fldBankID", typeof(int));
    
            var fldAddressParameter = fldAddress != null ?
                new ObjectParameter("fldAddress", fldAddress) :
                new ObjectParameter("fldAddress", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankBranchUpdate", fldIDParameter, fldNameParameter, fldBranchCodeParameter, fldBankIDParameter, fldAddressParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_BankInformation_LogSelect> sp_BankInformation_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BankInformation_LogSelect>("sp_BankInformation_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankInformationDelete(Nullable<int> fldBankID, Nullable<int> fldMunID, Nullable<int> fldUserID, string fldUserPass, Nullable<int> fldCountryDiv)
        {
            var fldBankIDParameter = fldBankID.HasValue ?
                new ObjectParameter("fldBankID", fldBankID) :
                new ObjectParameter("fldBankID", typeof(int));
    
            var fldMunIDParameter = fldMunID.HasValue ?
                new ObjectParameter("fldMunID", fldMunID) :
                new ObjectParameter("fldMunID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldCountryDivParameter = fldCountryDiv.HasValue ?
                new ObjectParameter("fldCountryDiv", fldCountryDiv) :
                new ObjectParameter("fldCountryDiv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankInformationDelete", fldBankIDParameter, fldMunIDParameter, fldUserIDParameter, fldUserPassParameter, fldCountryDivParameter);
        }
    
        public virtual int sp_BankInformationInsert(Nullable<int> fldMunID, string fldValue, Nullable<int> fldParametrID, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<long> fldCountryDiv)
        {
            var fldMunIDParameter = fldMunID.HasValue ?
                new ObjectParameter("fldMunID", fldMunID) :
                new ObjectParameter("fldMunID", typeof(int));
    
            var fldValueParameter = fldValue != null ?
                new ObjectParameter("fldValue", fldValue) :
                new ObjectParameter("fldValue", typeof(string));
    
            var fldParametrIDParameter = fldParametrID.HasValue ?
                new ObjectParameter("fldParametrID", fldParametrID) :
                new ObjectParameter("fldParametrID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldCountryDivParameter = fldCountryDiv.HasValue ?
                new ObjectParameter("fldCountryDiv", fldCountryDiv) :
                new ObjectParameter("fldCountryDiv", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankInformationInsert", fldMunIDParameter, fldValueParameter, fldParametrIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldCountryDivParameter);
        }
    
        public virtual ObjectResult<sp_BankInformationSelect> sp_BankInformationSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BankInformationSelect>("sp_BankInformationSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankInformationUpdate(Nullable<int> fldID, Nullable<int> fldMunID, string fldValue, Nullable<int> fldParametrID, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<long> fldCountryDiv)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldMunIDParameter = fldMunID.HasValue ?
                new ObjectParameter("fldMunID", fldMunID) :
                new ObjectParameter("fldMunID", typeof(int));
    
            var fldValueParameter = fldValue != null ?
                new ObjectParameter("fldValue", fldValue) :
                new ObjectParameter("fldValue", typeof(string));
    
            var fldParametrIDParameter = fldParametrID.HasValue ?
                new ObjectParameter("fldParametrID", fldParametrID) :
                new ObjectParameter("fldParametrID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldCountryDivParameter = fldCountryDiv.HasValue ?
                new ObjectParameter("fldCountryDiv", fldCountryDiv) :
                new ObjectParameter("fldCountryDiv", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankInformationUpdate", fldIDParameter, fldMunIDParameter, fldValueParameter, fldParametrIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldCountryDivParameter);
        }
    
        public virtual int sp_BankInsert(string fldName, Nullable<int> fldBankTypeID, Nullable<byte> fldCentralBankCode, string fldInfinitiveBank, Nullable<long> fldUserID, string fldDesc, byte[] fldImage, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldBankTypeIDParameter = fldBankTypeID.HasValue ?
                new ObjectParameter("fldBankTypeID", fldBankTypeID) :
                new ObjectParameter("fldBankTypeID", typeof(int));
    
            var fldCentralBankCodeParameter = fldCentralBankCode.HasValue ?
                new ObjectParameter("fldCentralBankCode", fldCentralBankCode) :
                new ObjectParameter("fldCentralBankCode", typeof(byte));
    
            var fldInfinitiveBankParameter = fldInfinitiveBank != null ?
                new ObjectParameter("fldInfinitiveBank", fldInfinitiveBank) :
                new ObjectParameter("fldInfinitiveBank", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldImageParameter = fldImage != null ?
                new ObjectParameter("fldImage", fldImage) :
                new ObjectParameter("fldImage", typeof(byte[]));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankInsert", fldNameParameter, fldBankTypeIDParameter, fldCentralBankCodeParameter, fldInfinitiveBankParameter, fldUserIDParameter, fldDescParameter, fldImageParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_BankParameter_LogSelect> sp_BankParameter_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BankParameter_LogSelect>("sp_BankParameter_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankParameterDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankParameterDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankParameterInsert(Nullable<int> fldBankID, string fldPropertyNameEN, string fldPropertyNameFA, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldBankIDParameter = fldBankID.HasValue ?
                new ObjectParameter("fldBankID", fldBankID) :
                new ObjectParameter("fldBankID", typeof(int));
    
            var fldPropertyNameENParameter = fldPropertyNameEN != null ?
                new ObjectParameter("fldPropertyNameEN", fldPropertyNameEN) :
                new ObjectParameter("fldPropertyNameEN", typeof(string));
    
            var fldPropertyNameFAParameter = fldPropertyNameFA != null ?
                new ObjectParameter("fldPropertyNameFA", fldPropertyNameFA) :
                new ObjectParameter("fldPropertyNameFA", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankParameterInsert", fldBankIDParameter, fldPropertyNameENParameter, fldPropertyNameFAParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_BankParameterSelect> sp_BankParameterSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass, Nullable<int> fldMunID, Nullable<int> fldType)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldMunIDParameter = fldMunID.HasValue ?
                new ObjectParameter("fldMunID", fldMunID) :
                new ObjectParameter("fldMunID", typeof(int));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BankParameterSelect>("sp_BankParameterSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter, fldMunIDParameter, fldTypeParameter);
        }
    
        public virtual int sp_BankParameterUpdate(Nullable<int> fldID, Nullable<int> fldBankID, string fldPropertyNameEN, string fldPropertyNameFA, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldBankIDParameter = fldBankID.HasValue ?
                new ObjectParameter("fldBankID", fldBankID) :
                new ObjectParameter("fldBankID", typeof(int));
    
            var fldPropertyNameENParameter = fldPropertyNameEN != null ?
                new ObjectParameter("fldPropertyNameEN", fldPropertyNameEN) :
                new ObjectParameter("fldPropertyNameEN", typeof(string));
    
            var fldPropertyNameFAParameter = fldPropertyNameFA != null ?
                new ObjectParameter("fldPropertyNameFA", fldPropertyNameFA) :
                new ObjectParameter("fldPropertyNameFA", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankParameterUpdate", fldIDParameter, fldBankIDParameter, fldPropertyNameENParameter, fldPropertyNameFAParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_BankSelect> sp_BankSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BankSelect>("sp_BankSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_BankType_LogSelect> sp_BankType_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BankType_LogSelect>("sp_BankType_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankTypeDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankTypeDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankTypeInsert(string fldType, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldTypeParameter = fldType != null ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankTypeInsert", fldTypeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_BankTypeSelect> sp_BankTypeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BankTypeSelect>("sp_BankTypeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankTypeUpdate(Nullable<int> fldID, string fldType, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldTypeParameter = fldType != null ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankTypeUpdate", fldIDParameter, fldTypeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BankUpdate(Nullable<int> fldID, string fldName, Nullable<int> fldBankTypeID, Nullable<byte> fldCentralBankCode, string fldInfinitiveBank, Nullable<long> fldUserID, string fldDesc, byte[] fldPic, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldBankTypeIDParameter = fldBankTypeID.HasValue ?
                new ObjectParameter("fldBankTypeID", fldBankTypeID) :
                new ObjectParameter("fldBankTypeID", typeof(int));
    
            var fldCentralBankCodeParameter = fldCentralBankCode.HasValue ?
                new ObjectParameter("fldCentralBankCode", fldCentralBankCode) :
                new ObjectParameter("fldCentralBankCode", typeof(byte));
    
            var fldInfinitiveBankParameter = fldInfinitiveBank != null ?
                new ObjectParameter("fldInfinitiveBank", fldInfinitiveBank) :
                new ObjectParameter("fldInfinitiveBank", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BankUpdate", fldIDParameter, fldNameParameter, fldBankTypeIDParameter, fldCentralBankCodeParameter, fldInfinitiveBankParameter, fldUserIDParameter, fldDescParameter, fldPicParameter, fldUserPassParameter);
        }
    
        public virtual int sp_BlankDB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BlankDB");
        }
    
        public virtual int sp_BudgetByMonth_DetailDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BudgetByMonth_DetailDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_BudgetByMonth_DetailInsert(Nullable<int> fldBudgetByMonthId, Nullable<byte> fldMonth_No, Nullable<float> fldPercent, Nullable<long> fldUserID, string fldDesc)
        {
            var fldBudgetByMonthIdParameter = fldBudgetByMonthId.HasValue ?
                new ObjectParameter("fldBudgetByMonthId", fldBudgetByMonthId) :
                new ObjectParameter("fldBudgetByMonthId", typeof(int));
    
            var fldMonth_NoParameter = fldMonth_No.HasValue ?
                new ObjectParameter("fldMonth_No", fldMonth_No) :
                new ObjectParameter("fldMonth_No", typeof(byte));
    
            var fldPercentParameter = fldPercent.HasValue ?
                new ObjectParameter("fldPercent", fldPercent) :
                new ObjectParameter("fldPercent", typeof(float));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BudgetByMonth_DetailInsert", fldBudgetByMonthIdParameter, fldMonth_NoParameter, fldPercentParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_BudgetByMonth_DetailSelect> sp_BudgetByMonth_DetailSelect(Nullable<int> sal, Nullable<int> mun)
        {
            var salParameter = sal.HasValue ?
                new ObjectParameter("sal", sal) :
                new ObjectParameter("sal", typeof(int));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BudgetByMonth_DetailSelect>("sp_BudgetByMonth_DetailSelect", salParameter, munParameter);
        }
    
        public virtual int sp_BudgetByMonth_DetailUpdate(Nullable<int> fldId, Nullable<int> fldBudgetByMonthId, Nullable<byte> fldMonth_No, Nullable<float> fldPercent, Nullable<long> fldUserID, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldBudgetByMonthIdParameter = fldBudgetByMonthId.HasValue ?
                new ObjectParameter("fldBudgetByMonthId", fldBudgetByMonthId) :
                new ObjectParameter("fldBudgetByMonthId", typeof(int));
    
            var fldMonth_NoParameter = fldMonth_No.HasValue ?
                new ObjectParameter("fldMonth_No", fldMonth_No) :
                new ObjectParameter("fldMonth_No", typeof(byte));
    
            var fldPercentParameter = fldPercent.HasValue ?
                new ObjectParameter("fldPercent", fldPercent) :
                new ObjectParameter("fldPercent", typeof(float));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BudgetByMonth_DetailUpdate", fldIdParameter, fldBudgetByMonthIdParameter, fldMonth_NoParameter, fldPercentParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual int sp_BudgetByMonthDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BudgetByMonthDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_BudgetByMonthInsert(ObjectParameter fldId, Nullable<int> fldYear, Nullable<int> fldTotalBudget, Nullable<int> fldMun, Nullable<long> fldUserID, string fldDesc)
        {
            var fldYearParameter = fldYear.HasValue ?
                new ObjectParameter("fldYear", fldYear) :
                new ObjectParameter("fldYear", typeof(int));
    
            var fldTotalBudgetParameter = fldTotalBudget.HasValue ?
                new ObjectParameter("fldTotalBudget", fldTotalBudget) :
                new ObjectParameter("fldTotalBudget", typeof(int));
    
            var fldMunParameter = fldMun.HasValue ?
                new ObjectParameter("fldMun", fldMun) :
                new ObjectParameter("fldMun", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BudgetByMonthInsert", fldId, fldYearParameter, fldTotalBudgetParameter, fldMunParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_BudgetByMonthSelect> sp_BudgetByMonthSelect(string fieldname, string value, string value2, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var value2Parameter = value2 != null ?
                new ObjectParameter("Value2", value2) :
                new ObjectParameter("Value2", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BudgetByMonthSelect>("sp_BudgetByMonthSelect", fieldnameParameter, valueParameter, value2Parameter, hParameter);
        }
    
        public virtual int sp_BudgetByMonthUpdate(Nullable<int> fldId, Nullable<int> fldYear, Nullable<int> fldTotalBudget, Nullable<int> fldMun, Nullable<long> fldUserID, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldYearParameter = fldYear.HasValue ?
                new ObjectParameter("fldYear", fldYear) :
                new ObjectParameter("fldYear", typeof(int));
    
            var fldTotalBudgetParameter = fldTotalBudget.HasValue ?
                new ObjectParameter("fldTotalBudget", fldTotalBudget) :
                new ObjectParameter("fldTotalBudget", typeof(int));
    
            var fldMunParameter = fldMun.HasValue ?
                new ObjectParameter("fldMun", fldMun) :
                new ObjectParameter("fldMun", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BudgetByMonthUpdate", fldIdParameter, fldYearParameter, fldTotalBudgetParameter, fldMunParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_CabinType_LogSelect> sp_CabinType_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CabinType_LogSelect>("sp_CabinType_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CabinTypeDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CabinTypeDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CabinTypeInsert(ObjectParameter fldId, string fldName, Nullable<int> fldCarAccountTypeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCarAccountTypeIDParameter = fldCarAccountTypeID.HasValue ?
                new ObjectParameter("fldCarAccountTypeID", fldCarAccountTypeID) :
                new ObjectParameter("fldCarAccountTypeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CabinTypeInsert", fldId, fldNameParameter, fldCarAccountTypeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CabinTypeSelect> sp_CabinTypeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CabinTypeSelect>("sp_CabinTypeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CabinTypeUpdate(Nullable<int> fldID, string fldName, Nullable<int> fldCarAccountTypeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCarAccountTypeIDParameter = fldCarAccountTypeID.HasValue ?
                new ObjectParameter("fldCarAccountTypeID", fldCarAccountTypeID) :
                new ObjectParameter("fldCarAccountTypeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CabinTypeUpdate", fldIDParameter, fldNameParameter, fldCarAccountTypeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CachedSearchCarFile_MalekUpdate(string fldOwerName, string fldMeli_EconomicCode, string fldMeli_EconomicCodeOld)
        {
            var fldOwerNameParameter = fldOwerName != null ?
                new ObjectParameter("fldOwerName", fldOwerName) :
                new ObjectParameter("fldOwerName", typeof(string));
    
            var fldMeli_EconomicCodeParameter = fldMeli_EconomicCode != null ?
                new ObjectParameter("fldMeli_EconomicCode", fldMeli_EconomicCode) :
                new ObjectParameter("fldMeli_EconomicCode", typeof(string));
    
            var fldMeli_EconomicCodeOldParameter = fldMeli_EconomicCodeOld != null ?
                new ObjectParameter("fldMeli_EconomicCodeOld", fldMeli_EconomicCodeOld) :
                new ObjectParameter("fldMeli_EconomicCodeOld", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CachedSearchCarFile_MalekUpdate", fldOwerNameParameter, fldMeli_EconomicCodeParameter, fldMeli_EconomicCodeOldParameter);
        }
    
        public virtual int sp_CachedSearchCarFile_PluqeUpdate(string fldPluqeNumber, string fldPluqeNumberOld)
        {
            var fldPluqeNumberParameter = fldPluqeNumber != null ?
                new ObjectParameter("fldPluqeNumber", fldPluqeNumber) :
                new ObjectParameter("fldPluqeNumber", typeof(string));
    
            var fldPluqeNumberOldParameter = fldPluqeNumberOld != null ?
                new ObjectParameter("fldPluqeNumberOld", fldPluqeNumberOld) :
                new ObjectParameter("fldPluqeNumberOld", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CachedSearchCarFile_PluqeUpdate", fldPluqeNumberParameter, fldPluqeNumberOldParameter);
        }
    
        public virtual int sp_CachedSearchCarFileDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CachedSearchCarFileDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_CachedSearchCarFileInsert(Nullable<int> fldID, string fldMotorNumber, string fldShasiNumber, string fldVIN, Nullable<short> fldModel, string fldCarModelName, string fldCarClassName, Nullable<long> fldCarFileId, Nullable<long> fldUserId, string fldDesc, string fldOwerName, string fldMeli_EconomicCode, string fldPluqeNumber, string fldCarAccountName, string fldCarSystemName, string fldCarColorName, string fldFuelTypeName, Nullable<byte> fldAccept, string fldAcceptName, Nullable<byte> fldIsBalckList, Nullable<int> fldAccountTypeId)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldMotorNumberParameter = fldMotorNumber != null ?
                new ObjectParameter("fldMotorNumber", fldMotorNumber) :
                new ObjectParameter("fldMotorNumber", typeof(string));
    
            var fldShasiNumberParameter = fldShasiNumber != null ?
                new ObjectParameter("fldShasiNumber", fldShasiNumber) :
                new ObjectParameter("fldShasiNumber", typeof(string));
    
            var fldVINParameter = fldVIN != null ?
                new ObjectParameter("fldVIN", fldVIN) :
                new ObjectParameter("fldVIN", typeof(string));
    
            var fldModelParameter = fldModel.HasValue ?
                new ObjectParameter("fldModel", fldModel) :
                new ObjectParameter("fldModel", typeof(short));
    
            var fldCarModelNameParameter = fldCarModelName != null ?
                new ObjectParameter("fldCarModelName", fldCarModelName) :
                new ObjectParameter("fldCarModelName", typeof(string));
    
            var fldCarClassNameParameter = fldCarClassName != null ?
                new ObjectParameter("fldCarClassName", fldCarClassName) :
                new ObjectParameter("fldCarClassName", typeof(string));
    
            var fldCarFileIdParameter = fldCarFileId.HasValue ?
                new ObjectParameter("fldCarFileId", fldCarFileId) :
                new ObjectParameter("fldCarFileId", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldOwerNameParameter = fldOwerName != null ?
                new ObjectParameter("fldOwerName", fldOwerName) :
                new ObjectParameter("fldOwerName", typeof(string));
    
            var fldMeli_EconomicCodeParameter = fldMeli_EconomicCode != null ?
                new ObjectParameter("fldMeli_EconomicCode", fldMeli_EconomicCode) :
                new ObjectParameter("fldMeli_EconomicCode", typeof(string));
    
            var fldPluqeNumberParameter = fldPluqeNumber != null ?
                new ObjectParameter("fldPluqeNumber", fldPluqeNumber) :
                new ObjectParameter("fldPluqeNumber", typeof(string));
    
            var fldCarAccountNameParameter = fldCarAccountName != null ?
                new ObjectParameter("fldCarAccountName", fldCarAccountName) :
                new ObjectParameter("fldCarAccountName", typeof(string));
    
            var fldCarSystemNameParameter = fldCarSystemName != null ?
                new ObjectParameter("fldCarSystemName", fldCarSystemName) :
                new ObjectParameter("fldCarSystemName", typeof(string));
    
            var fldCarColorNameParameter = fldCarColorName != null ?
                new ObjectParameter("fldCarColorName", fldCarColorName) :
                new ObjectParameter("fldCarColorName", typeof(string));
    
            var fldFuelTypeNameParameter = fldFuelTypeName != null ?
                new ObjectParameter("fldFuelTypeName", fldFuelTypeName) :
                new ObjectParameter("fldFuelTypeName", typeof(string));
    
            var fldAcceptParameter = fldAccept.HasValue ?
                new ObjectParameter("fldAccept", fldAccept) :
                new ObjectParameter("fldAccept", typeof(byte));
    
            var fldAcceptNameParameter = fldAcceptName != null ?
                new ObjectParameter("fldAcceptName", fldAcceptName) :
                new ObjectParameter("fldAcceptName", typeof(string));
    
            var fldIsBalckListParameter = fldIsBalckList.HasValue ?
                new ObjectParameter("fldIsBalckList", fldIsBalckList) :
                new ObjectParameter("fldIsBalckList", typeof(byte));
    
            var fldAccountTypeIdParameter = fldAccountTypeId.HasValue ?
                new ObjectParameter("fldAccountTypeId", fldAccountTypeId) :
                new ObjectParameter("fldAccountTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CachedSearchCarFileInsert", fldIDParameter, fldMotorNumberParameter, fldShasiNumberParameter, fldVINParameter, fldModelParameter, fldCarModelNameParameter, fldCarClassNameParameter, fldCarFileIdParameter, fldUserIdParameter, fldDescParameter, fldOwerNameParameter, fldMeli_EconomicCodeParameter, fldPluqeNumberParameter, fldCarAccountNameParameter, fldCarSystemNameParameter, fldCarColorNameParameter, fldFuelTypeNameParameter, fldAcceptParameter, fldAcceptNameParameter, fldIsBalckListParameter, fldAccountTypeIdParameter);
        }
    
        public virtual ObjectResult<sp_CachedSearchCarFileSelect> sp_CachedSearchCarFileSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CachedSearchCarFileSelect>("sp_CachedSearchCarFileSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_CachedSearchCarFileUpdate(string fldMotorNumber, string fldShasiNumber, string fldVIN, Nullable<short> fldModel, string fldCarModelName, string fldCarClassName, Nullable<long> fldCarFileId, Nullable<long> fldUserId, string fldDesc, string fldOwerName, string fldMeli_EconomicCode, string fldPluqeNumber, string fldCarAccountName, string fldCarSystemName, string fldCarColorName, string fldFuelTypeName, Nullable<byte> fldAccept, string fldAcceptName, Nullable<int> fldAccountTypeId)
        {
            var fldMotorNumberParameter = fldMotorNumber != null ?
                new ObjectParameter("fldMotorNumber", fldMotorNumber) :
                new ObjectParameter("fldMotorNumber", typeof(string));
    
            var fldShasiNumberParameter = fldShasiNumber != null ?
                new ObjectParameter("fldShasiNumber", fldShasiNumber) :
                new ObjectParameter("fldShasiNumber", typeof(string));
    
            var fldVINParameter = fldVIN != null ?
                new ObjectParameter("fldVIN", fldVIN) :
                new ObjectParameter("fldVIN", typeof(string));
    
            var fldModelParameter = fldModel.HasValue ?
                new ObjectParameter("fldModel", fldModel) :
                new ObjectParameter("fldModel", typeof(short));
    
            var fldCarModelNameParameter = fldCarModelName != null ?
                new ObjectParameter("fldCarModelName", fldCarModelName) :
                new ObjectParameter("fldCarModelName", typeof(string));
    
            var fldCarClassNameParameter = fldCarClassName != null ?
                new ObjectParameter("fldCarClassName", fldCarClassName) :
                new ObjectParameter("fldCarClassName", typeof(string));
    
            var fldCarFileIdParameter = fldCarFileId.HasValue ?
                new ObjectParameter("fldCarFileId", fldCarFileId) :
                new ObjectParameter("fldCarFileId", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldOwerNameParameter = fldOwerName != null ?
                new ObjectParameter("fldOwerName", fldOwerName) :
                new ObjectParameter("fldOwerName", typeof(string));
    
            var fldMeli_EconomicCodeParameter = fldMeli_EconomicCode != null ?
                new ObjectParameter("fldMeli_EconomicCode", fldMeli_EconomicCode) :
                new ObjectParameter("fldMeli_EconomicCode", typeof(string));
    
            var fldPluqeNumberParameter = fldPluqeNumber != null ?
                new ObjectParameter("fldPluqeNumber", fldPluqeNumber) :
                new ObjectParameter("fldPluqeNumber", typeof(string));
    
            var fldCarAccountNameParameter = fldCarAccountName != null ?
                new ObjectParameter("fldCarAccountName", fldCarAccountName) :
                new ObjectParameter("fldCarAccountName", typeof(string));
    
            var fldCarSystemNameParameter = fldCarSystemName != null ?
                new ObjectParameter("fldCarSystemName", fldCarSystemName) :
                new ObjectParameter("fldCarSystemName", typeof(string));
    
            var fldCarColorNameParameter = fldCarColorName != null ?
                new ObjectParameter("fldCarColorName", fldCarColorName) :
                new ObjectParameter("fldCarColorName", typeof(string));
    
            var fldFuelTypeNameParameter = fldFuelTypeName != null ?
                new ObjectParameter("fldFuelTypeName", fldFuelTypeName) :
                new ObjectParameter("fldFuelTypeName", typeof(string));
    
            var fldAcceptParameter = fldAccept.HasValue ?
                new ObjectParameter("fldAccept", fldAccept) :
                new ObjectParameter("fldAccept", typeof(byte));
    
            var fldAcceptNameParameter = fldAcceptName != null ?
                new ObjectParameter("fldAcceptName", fldAcceptName) :
                new ObjectParameter("fldAcceptName", typeof(string));
    
            var fldAccountTypeIdParameter = fldAccountTypeId.HasValue ?
                new ObjectParameter("fldAccountTypeId", fldAccountTypeId) :
                new ObjectParameter("fldAccountTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CachedSearchCarFileUpdate", fldMotorNumberParameter, fldShasiNumberParameter, fldVINParameter, fldModelParameter, fldCarModelNameParameter, fldCarClassNameParameter, fldCarFileIdParameter, fldUserIdParameter, fldDescParameter, fldOwerNameParameter, fldMeli_EconomicCodeParameter, fldPluqeNumberParameter, fldCarAccountNameParameter, fldCarSystemNameParameter, fldCarColorNameParameter, fldFuelTypeNameParameter, fldAcceptParameter, fldAcceptNameParameter, fldAccountTypeIdParameter);
        }
    
        public virtual int sp_CalcTransactionInsert(Nullable<long> fldCarId, Nullable<long> fldUserId, string fldDesc)
        {
            var fldCarIdParameter = fldCarId.HasValue ?
                new ObjectParameter("fldCarId", fldCarId) :
                new ObjectParameter("fldCarId", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CalcTransactionInsert", fldCarIdParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_CalcTransactionSelect> sp_CalcTransactionSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CalcTransactionSelect>("sp_CalcTransactionSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual ObjectResult<sp_Car_LogSelect> sp_Car_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Car_LogSelect>("sp_Car_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Car_Mafasa> sp_Car_Mafasa(Nullable<System.DateTime> azTarikh, Nullable<System.DateTime> taTarikh, Nullable<int> munId)
        {
            var azTarikhParameter = azTarikh.HasValue ?
                new ObjectParameter("AzTarikh", azTarikh) :
                new ObjectParameter("AzTarikh", typeof(System.DateTime));
    
            var taTarikhParameter = taTarikh.HasValue ?
                new ObjectParameter("TaTarikh", taTarikh) :
                new ObjectParameter("TaTarikh", typeof(System.DateTime));
    
            var munIdParameter = munId.HasValue ?
                new ObjectParameter("MunId", munId) :
                new ObjectParameter("MunId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Car_Mafasa>("sp_Car_Mafasa", azTarikhParameter, taTarikhParameter, munIdParameter);
        }
    
        public virtual ObjectResult<sp_CarAccountType_LogSelect> sp_CarAccountType_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarAccountType_LogSelect>("sp_CarAccountType_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarAccountTypeDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarAccountTypeDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarAccountTypeInsert(ObjectParameter fldId, string fldName, Nullable<int> fldCarMakeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCarMakeIDParameter = fldCarMakeID.HasValue ?
                new ObjectParameter("fldCarMakeID", fldCarMakeID) :
                new ObjectParameter("fldCarMakeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarAccountTypeInsert", fldId, fldNameParameter, fldCarMakeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarAccountTypeSelect> sp_CarAccountTypeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarAccountTypeSelect>("sp_CarAccountTypeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<string> Sp_AcceptStatus(Nullable<int> carFileId)
        {
            var carFileIdParameter = carFileId.HasValue ?
                new ObjectParameter("CarFileId", carFileId) :
                new ObjectParameter("CarFileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_AcceptStatus", carFileIdParameter);
        }
    
        public virtual int sp_CarAccountTypeUpdate(Nullable<int> fldID, string fldName, Nullable<int> fldCarMakeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCarMakeIDParameter = fldCarMakeID.HasValue ?
                new ObjectParameter("fldCarMakeID", fldCarMakeID) :
                new ObjectParameter("fldCarMakeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarAccountTypeUpdate", fldIDParameter, fldNameParameter, fldCarMakeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarClass_LogSelect> sp_CarClass_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarClass_LogSelect>("sp_CarClass_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarClassDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarClassDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarClassInsert(string fldName, Nullable<int> fldCarModelID, Nullable<int> fldCarPatternModelID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCarModelIDParameter = fldCarModelID.HasValue ?
                new ObjectParameter("fldCarModelID", fldCarModelID) :
                new ObjectParameter("fldCarModelID", typeof(int));
    
            var fldCarPatternModelIDParameter = fldCarPatternModelID.HasValue ?
                new ObjectParameter("fldCarPatternModelID", fldCarPatternModelID) :
                new ObjectParameter("fldCarPatternModelID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarClassInsert", fldNameParameter, fldCarModelIDParameter, fldCarPatternModelIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarClassSelect> sp_CarClassSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarClassSelect>("sp_CarClassSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarClassUpdate(Nullable<int> fldID, string fldName, Nullable<int> fldCarModelID, Nullable<int> fldCarPatternModelID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCarModelIDParameter = fldCarModelID.HasValue ?
                new ObjectParameter("fldCarModelID", fldCarModelID) :
                new ObjectParameter("fldCarModelID", typeof(int));
    
            var fldCarPatternModelIDParameter = fldCarPatternModelID.HasValue ?
                new ObjectParameter("fldCarPatternModelID", fldCarPatternModelID) :
                new ObjectParameter("fldCarPatternModelID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarClassUpdate", fldIDParameter, fldNameParameter, fldCarModelIDParameter, fldCarPatternModelIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarDelete(Nullable<long> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarExperience_LogSelect> sp_CarExperience_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarExperience_LogSelect>("sp_CarExperience_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarExperienceAccept(Nullable<long> fldID, Nullable<bool> fldAccept, Nullable<int> fldAcceptUser, Nullable<System.DateTime> fldAcceptDate)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldAcceptParameter = fldAccept.HasValue ?
                new ObjectParameter("fldAccept", fldAccept) :
                new ObjectParameter("fldAccept", typeof(bool));
    
            var fldAcceptUserParameter = fldAcceptUser.HasValue ?
                new ObjectParameter("fldAcceptUser", fldAcceptUser) :
                new ObjectParameter("fldAcceptUser", typeof(int));
    
            var fldAcceptDateParameter = fldAcceptDate.HasValue ?
                new ObjectParameter("fldAcceptDate", fldAcceptDate) :
                new ObjectParameter("fldAcceptDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarExperienceAccept", fldIDParameter, fldAcceptParameter, fldAcceptUserParameter, fldAcceptDateParameter);
        }
    
        public virtual int sp_CarExperienceDelete(Nullable<long> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarExperienceDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarExperienceInsert(Nullable<long> fldCarFileID, Nullable<System.DateTime> fldStartDate, Nullable<System.DateTime> fldEndDate, Nullable<int> fldMunicipalityID, string fldLetterNumber, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<int> fldfileid, Nullable<bool> fldAccept, Nullable<int> fldAcceptUser, Nullable<System.DateTime> fldAcceptDate)
        {
            var fldCarFileIDParameter = fldCarFileID.HasValue ?
                new ObjectParameter("fldCarFileID", fldCarFileID) :
                new ObjectParameter("fldCarFileID", typeof(long));
    
            var fldStartDateParameter = fldStartDate.HasValue ?
                new ObjectParameter("fldStartDate", fldStartDate) :
                new ObjectParameter("fldStartDate", typeof(System.DateTime));
    
            var fldEndDateParameter = fldEndDate.HasValue ?
                new ObjectParameter("fldEndDate", fldEndDate) :
                new ObjectParameter("fldEndDate", typeof(System.DateTime));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldLetterNumberParameter = fldLetterNumber != null ?
                new ObjectParameter("fldLetterNumber", fldLetterNumber) :
                new ObjectParameter("fldLetterNumber", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldfileidParameter = fldfileid.HasValue ?
                new ObjectParameter("fldfileid", fldfileid) :
                new ObjectParameter("fldfileid", typeof(int));
    
            var fldAcceptParameter = fldAccept.HasValue ?
                new ObjectParameter("fldAccept", fldAccept) :
                new ObjectParameter("fldAccept", typeof(bool));
    
            var fldAcceptUserParameter = fldAcceptUser.HasValue ?
                new ObjectParameter("fldAcceptUser", fldAcceptUser) :
                new ObjectParameter("fldAcceptUser", typeof(int));
    
            var fldAcceptDateParameter = fldAcceptDate.HasValue ?
                new ObjectParameter("fldAcceptDate", fldAcceptDate) :
                new ObjectParameter("fldAcceptDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarExperienceInsert", fldCarFileIDParameter, fldStartDateParameter, fldEndDateParameter, fldMunicipalityIDParameter, fldLetterNumberParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldfileidParameter, fldAcceptParameter, fldAcceptUserParameter, fldAcceptDateParameter);
        }
    
        public virtual ObjectResult<sp_CarExperienceSelect> sp_CarExperienceSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarExperienceSelect>("sp_CarExperienceSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarExperienceUpdate(Nullable<long> fldID, Nullable<long> fldCarFileID, Nullable<System.DateTime> fldStartDate, Nullable<System.DateTime> fldEndDate, Nullable<int> fldMunicipalityID, string fldLetterNumber, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<int> fldFileId)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldCarFileIDParameter = fldCarFileID.HasValue ?
                new ObjectParameter("fldCarFileID", fldCarFileID) :
                new ObjectParameter("fldCarFileID", typeof(long));
    
            var fldStartDateParameter = fldStartDate.HasValue ?
                new ObjectParameter("fldStartDate", fldStartDate) :
                new ObjectParameter("fldStartDate", typeof(System.DateTime));
    
            var fldEndDateParameter = fldEndDate.HasValue ?
                new ObjectParameter("fldEndDate", fldEndDate) :
                new ObjectParameter("fldEndDate", typeof(System.DateTime));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldLetterNumberParameter = fldLetterNumber != null ?
                new ObjectParameter("fldLetterNumber", fldLetterNumber) :
                new ObjectParameter("fldLetterNumber", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldFileIdParameter = fldFileId.HasValue ?
                new ObjectParameter("fldFileId", fldFileId) :
                new ObjectParameter("fldFileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarExperienceUpdate", fldIDParameter, fldCarFileIDParameter, fldStartDateParameter, fldEndDateParameter, fldMunicipalityIDParameter, fldLetterNumberParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldFileIdParameter);
        }
    
        public virtual ObjectResult<sp_CarFile_LogSelect> sp_CarFile_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarFile_LogSelect>("sp_CarFile_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarFile_LogSelect2> sp_CarFile_LogSelect2(string fieldName, string value, string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("fieldName", fieldName) :
                new ObjectParameter("fieldName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarFile_LogSelect2>("sp_CarFile_LogSelect2", fieldNameParameter, valueParameter, startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarFileAccept(Nullable<long> fldID, Nullable<bool> fldAccept, Nullable<int> fldAcceptUser, Nullable<System.DateTime> fldAcceptDate)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldAcceptParameter = fldAccept.HasValue ?
                new ObjectParameter("fldAccept", fldAccept) :
                new ObjectParameter("fldAccept", typeof(bool));
    
            var fldAcceptUserParameter = fldAcceptUser.HasValue ?
                new ObjectParameter("fldAcceptUser", fldAcceptUser) :
                new ObjectParameter("fldAcceptUser", typeof(int));
    
            var fldAcceptDateParameter = fldAcceptDate.HasValue ?
                new ObjectParameter("fldAcceptDate", fldAcceptDate) :
                new ObjectParameter("fldAcceptDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarFileAccept", fldIDParameter, fldAcceptParameter, fldAcceptUserParameter, fldAcceptDateParameter);
        }
    
        public virtual int sp_CarFileDelete(Nullable<long> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarFileDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarFileInsert(ObjectParameter fldId, Nullable<long> fldCarID, Nullable<int> fldCarPlaqueID, Nullable<System.DateTime> fldDatePlaque, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<int> fldBargSabzFileId, Nullable<int> fldCartFileId, Nullable<int> fldSanadForoshFileId, Nullable<int> fldCartBackFileId, Nullable<bool> fldAccept, Nullable<int> fldAcceptUser, Nullable<System.DateTime> fldAcceptDate, Nullable<bool> fldTypeEntezami)
        {
            var fldCarIDParameter = fldCarID.HasValue ?
                new ObjectParameter("fldCarID", fldCarID) :
                new ObjectParameter("fldCarID", typeof(long));
    
            var fldCarPlaqueIDParameter = fldCarPlaqueID.HasValue ?
                new ObjectParameter("fldCarPlaqueID", fldCarPlaqueID) :
                new ObjectParameter("fldCarPlaqueID", typeof(int));
    
            var fldDatePlaqueParameter = fldDatePlaque.HasValue ?
                new ObjectParameter("fldDatePlaque", fldDatePlaque) :
                new ObjectParameter("fldDatePlaque", typeof(System.DateTime));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldBargSabzFileIdParameter = fldBargSabzFileId.HasValue ?
                new ObjectParameter("fldBargSabzFileId", fldBargSabzFileId) :
                new ObjectParameter("fldBargSabzFileId", typeof(int));
    
            var fldCartFileIdParameter = fldCartFileId.HasValue ?
                new ObjectParameter("fldCartFileId", fldCartFileId) :
                new ObjectParameter("fldCartFileId", typeof(int));
    
            var fldSanadForoshFileIdParameter = fldSanadForoshFileId.HasValue ?
                new ObjectParameter("fldSanadForoshFileId", fldSanadForoshFileId) :
                new ObjectParameter("fldSanadForoshFileId", typeof(int));
    
            var fldCartBackFileIdParameter = fldCartBackFileId.HasValue ?
                new ObjectParameter("fldCartBackFileId", fldCartBackFileId) :
                new ObjectParameter("fldCartBackFileId", typeof(int));
    
            var fldAcceptParameter = fldAccept.HasValue ?
                new ObjectParameter("fldAccept", fldAccept) :
                new ObjectParameter("fldAccept", typeof(bool));
    
            var fldAcceptUserParameter = fldAcceptUser.HasValue ?
                new ObjectParameter("fldAcceptUser", fldAcceptUser) :
                new ObjectParameter("fldAcceptUser", typeof(int));
    
            var fldAcceptDateParameter = fldAcceptDate.HasValue ?
                new ObjectParameter("fldAcceptDate", fldAcceptDate) :
                new ObjectParameter("fldAcceptDate", typeof(System.DateTime));
    
            var fldTypeEntezamiParameter = fldTypeEntezami.HasValue ?
                new ObjectParameter("fldTypeEntezami", fldTypeEntezami) :
                new ObjectParameter("fldTypeEntezami", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarFileInsert", fldId, fldCarIDParameter, fldCarPlaqueIDParameter, fldDatePlaqueParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldBargSabzFileIdParameter, fldCartFileIdParameter, fldSanadForoshFileIdParameter, fldCartBackFileIdParameter, fldAcceptParameter, fldAcceptUserParameter, fldAcceptDateParameter, fldTypeEntezamiParameter);
        }
    
        public virtual ObjectResult<sp_CarFileSelect> sp_CarFileSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarFileSelect>("sp_CarFileSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarFileTaid(Nullable<int> carfileId, Nullable<int> userId)
        {
            var carfileIdParameter = carfileId.HasValue ?
                new ObjectParameter("carfileId", carfileId) :
                new ObjectParameter("carfileId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarFileTaid", carfileIdParameter, userIdParameter);
        }
    
        public virtual int sp_CarFileUpdate(Nullable<long> fldID, Nullable<long> fldCarID, Nullable<int> fldCarPlaqueID, Nullable<System.DateTime> fldDatePlaque, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<int> fldBargSabzFileId, Nullable<int> fldCartFileId, Nullable<int> fldSanadForoshFileId, Nullable<int> fldCartBackFileId, Nullable<bool> fldTypeEntezami)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldCarIDParameter = fldCarID.HasValue ?
                new ObjectParameter("fldCarID", fldCarID) :
                new ObjectParameter("fldCarID", typeof(long));
    
            var fldCarPlaqueIDParameter = fldCarPlaqueID.HasValue ?
                new ObjectParameter("fldCarPlaqueID", fldCarPlaqueID) :
                new ObjectParameter("fldCarPlaqueID", typeof(int));
    
            var fldDatePlaqueParameter = fldDatePlaque.HasValue ?
                new ObjectParameter("fldDatePlaque", fldDatePlaque) :
                new ObjectParameter("fldDatePlaque", typeof(System.DateTime));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldBargSabzFileIdParameter = fldBargSabzFileId.HasValue ?
                new ObjectParameter("fldBargSabzFileId", fldBargSabzFileId) :
                new ObjectParameter("fldBargSabzFileId", typeof(int));
    
            var fldCartFileIdParameter = fldCartFileId.HasValue ?
                new ObjectParameter("fldCartFileId", fldCartFileId) :
                new ObjectParameter("fldCartFileId", typeof(int));
    
            var fldSanadForoshFileIdParameter = fldSanadForoshFileId.HasValue ?
                new ObjectParameter("fldSanadForoshFileId", fldSanadForoshFileId) :
                new ObjectParameter("fldSanadForoshFileId", typeof(int));
    
            var fldCartBackFileIdParameter = fldCartBackFileId.HasValue ?
                new ObjectParameter("fldCartBackFileId", fldCartBackFileId) :
                new ObjectParameter("fldCartBackFileId", typeof(int));
    
            var fldTypeEntezamiParameter = fldTypeEntezami.HasValue ?
                new ObjectParameter("fldTypeEntezami", fldTypeEntezami) :
                new ObjectParameter("fldTypeEntezami", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarFileUpdate", fldIDParameter, fldCarIDParameter, fldCarPlaqueIDParameter, fldDatePlaqueParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldBargSabzFileIdParameter, fldCartFileIdParameter, fldSanadForoshFileIdParameter, fldCartBackFileIdParameter, fldTypeEntezamiParameter);
        }
    
        public virtual int sp_CarInsert(ObjectParameter fldId, string fldMotorNumber, string fldShasiNumber, string fldVIN, Nullable<int> fldCarModelID, Nullable<int> fldCarClassID, Nullable<int> fldCarColorID, Nullable<short> fldModel, Nullable<System.DateTime> fldStartDateInsurance, Nullable<bool> fldMotabeghBaShasi, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldMotorNumberParameter = fldMotorNumber != null ?
                new ObjectParameter("fldMotorNumber", fldMotorNumber) :
                new ObjectParameter("fldMotorNumber", typeof(string));
    
            var fldShasiNumberParameter = fldShasiNumber != null ?
                new ObjectParameter("fldShasiNumber", fldShasiNumber) :
                new ObjectParameter("fldShasiNumber", typeof(string));
    
            var fldVINParameter = fldVIN != null ?
                new ObjectParameter("fldVIN", fldVIN) :
                new ObjectParameter("fldVIN", typeof(string));
    
            var fldCarModelIDParameter = fldCarModelID.HasValue ?
                new ObjectParameter("fldCarModelID", fldCarModelID) :
                new ObjectParameter("fldCarModelID", typeof(int));
    
            var fldCarClassIDParameter = fldCarClassID.HasValue ?
                new ObjectParameter("fldCarClassID", fldCarClassID) :
                new ObjectParameter("fldCarClassID", typeof(int));
    
            var fldCarColorIDParameter = fldCarColorID.HasValue ?
                new ObjectParameter("fldCarColorID", fldCarColorID) :
                new ObjectParameter("fldCarColorID", typeof(int));
    
            var fldModelParameter = fldModel.HasValue ?
                new ObjectParameter("fldModel", fldModel) :
                new ObjectParameter("fldModel", typeof(short));
    
            var fldStartDateInsuranceParameter = fldStartDateInsurance.HasValue ?
                new ObjectParameter("fldStartDateInsurance", fldStartDateInsurance) :
                new ObjectParameter("fldStartDateInsurance", typeof(System.DateTime));
    
            var fldMotabeghBaShasiParameter = fldMotabeghBaShasi.HasValue ?
                new ObjectParameter("fldMotabeghBaShasi", fldMotabeghBaShasi) :
                new ObjectParameter("fldMotabeghBaShasi", typeof(bool));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarInsert", fldId, fldMotorNumberParameter, fldShasiNumberParameter, fldVINParameter, fldCarModelIDParameter, fldCarClassIDParameter, fldCarColorIDParameter, fldModelParameter, fldStartDateInsuranceParameter, fldMotabeghBaShasiParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarMake_LogSelect> sp_CarMake_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarMake_LogSelect>("sp_CarMake_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarMakeDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarMakeDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarMakeInsert(ObjectParameter fldId, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarMakeInsert", fldId, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarMakeSelect> sp_CarMakeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarMakeSelect>("sp_CarMakeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarMakeUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarMakeUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarModel_LogSelect> sp_CarModel_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarModel_LogSelect>("sp_CarModel_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarModelDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarModelDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarModelInsert(ObjectParameter fldId, string fldName, Nullable<int> fldCarSystemID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCarSystemIDParameter = fldCarSystemID.HasValue ?
                new ObjectParameter("fldCarSystemID", fldCarSystemID) :
                new ObjectParameter("fldCarSystemID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarModelInsert", fldId, fldNameParameter, fldCarSystemIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarModelSelect> sp_CarModelSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarModelSelect>("sp_CarModelSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarModelUpdate(Nullable<int> fldID, string fldName, Nullable<int> fldCarSystemID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCarSystemIDParameter = fldCarSystemID.HasValue ?
                new ObjectParameter("fldCarSystemID", fldCarSystemID) :
                new ObjectParameter("fldCarSystemID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarModelUpdate", fldIDParameter, fldNameParameter, fldCarSystemIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarPatternModel_LogSelect> sp_CarPatternModel_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarPatternModel_LogSelect>("sp_CarPatternModel_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarPatternModelDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarPatternModelDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarPatternModelInsert(string fldName, Nullable<byte> fldCylinderNumber, Nullable<byte> fldWheelNumber, Nullable<byte> fldPivotNumber, Nullable<int> fldContentMotor, Nullable<int> fldFuelTypeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCylinderNumberParameter = fldCylinderNumber.HasValue ?
                new ObjectParameter("fldCylinderNumber", fldCylinderNumber) :
                new ObjectParameter("fldCylinderNumber", typeof(byte));
    
            var fldWheelNumberParameter = fldWheelNumber.HasValue ?
                new ObjectParameter("fldWheelNumber", fldWheelNumber) :
                new ObjectParameter("fldWheelNumber", typeof(byte));
    
            var fldPivotNumberParameter = fldPivotNumber.HasValue ?
                new ObjectParameter("fldPivotNumber", fldPivotNumber) :
                new ObjectParameter("fldPivotNumber", typeof(byte));
    
            var fldContentMotorParameter = fldContentMotor.HasValue ?
                new ObjectParameter("fldContentMotor", fldContentMotor) :
                new ObjectParameter("fldContentMotor", typeof(int));
    
            var fldFuelTypeIDParameter = fldFuelTypeID.HasValue ?
                new ObjectParameter("fldFuelTypeID", fldFuelTypeID) :
                new ObjectParameter("fldFuelTypeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarPatternModelInsert", fldNameParameter, fldCylinderNumberParameter, fldWheelNumberParameter, fldPivotNumberParameter, fldContentMotorParameter, fldFuelTypeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarPatternModelSelect> sp_CarPatternModelSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarPatternModelSelect>("sp_CarPatternModelSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarPatternModelUpdate(Nullable<int> fldID, string fldName, Nullable<byte> fldCylinderNumber, Nullable<byte> fldWheelNumber, Nullable<byte> fldPivotNumber, Nullable<int> fldContentMotor, Nullable<int> fldFuelTypeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCylinderNumberParameter = fldCylinderNumber.HasValue ?
                new ObjectParameter("fldCylinderNumber", fldCylinderNumber) :
                new ObjectParameter("fldCylinderNumber", typeof(byte));
    
            var fldWheelNumberParameter = fldWheelNumber.HasValue ?
                new ObjectParameter("fldWheelNumber", fldWheelNumber) :
                new ObjectParameter("fldWheelNumber", typeof(byte));
    
            var fldPivotNumberParameter = fldPivotNumber.HasValue ?
                new ObjectParameter("fldPivotNumber", fldPivotNumber) :
                new ObjectParameter("fldPivotNumber", typeof(byte));
    
            var fldContentMotorParameter = fldContentMotor.HasValue ?
                new ObjectParameter("fldContentMotor", fldContentMotor) :
                new ObjectParameter("fldContentMotor", typeof(int));
    
            var fldFuelTypeIDParameter = fldFuelTypeID.HasValue ?
                new ObjectParameter("fldFuelTypeID", fldFuelTypeID) :
                new ObjectParameter("fldFuelTypeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarPatternModelUpdate", fldIDParameter, fldNameParameter, fldCylinderNumberParameter, fldWheelNumberParameter, fldPivotNumberParameter, fldContentMotorParameter, fldFuelTypeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarPlaque_LogSelect> sp_CarPlaque_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarPlaque_LogSelect>("sp_CarPlaque_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarPlaqueDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarPlaqueDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarPlaqueInsert(ObjectParameter fldID, string fldPlaqueNumber, Nullable<int> fldPlaqueCityID, Nullable<int> fldPlaqueSerialID, Nullable<int> fldPlaqueTypeID, Nullable<long> fldOwnerID, Nullable<int> fldCharacterPersianPlaqueID, Nullable<int> fldStatusPlaqeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldPlaqueNumberParameter = fldPlaqueNumber != null ?
                new ObjectParameter("fldPlaqueNumber", fldPlaqueNumber) :
                new ObjectParameter("fldPlaqueNumber", typeof(string));
    
            var fldPlaqueCityIDParameter = fldPlaqueCityID.HasValue ?
                new ObjectParameter("fldPlaqueCityID", fldPlaqueCityID) :
                new ObjectParameter("fldPlaqueCityID", typeof(int));
    
            var fldPlaqueSerialIDParameter = fldPlaqueSerialID.HasValue ?
                new ObjectParameter("fldPlaqueSerialID", fldPlaqueSerialID) :
                new ObjectParameter("fldPlaqueSerialID", typeof(int));
    
            var fldPlaqueTypeIDParameter = fldPlaqueTypeID.HasValue ?
                new ObjectParameter("fldPlaqueTypeID", fldPlaqueTypeID) :
                new ObjectParameter("fldPlaqueTypeID", typeof(int));
    
            var fldOwnerIDParameter = fldOwnerID.HasValue ?
                new ObjectParameter("fldOwnerID", fldOwnerID) :
                new ObjectParameter("fldOwnerID", typeof(long));
    
            var fldCharacterPersianPlaqueIDParameter = fldCharacterPersianPlaqueID.HasValue ?
                new ObjectParameter("fldCharacterPersianPlaqueID", fldCharacterPersianPlaqueID) :
                new ObjectParameter("fldCharacterPersianPlaqueID", typeof(int));
    
            var fldStatusPlaqeIDParameter = fldStatusPlaqeID.HasValue ?
                new ObjectParameter("fldStatusPlaqeID", fldStatusPlaqeID) :
                new ObjectParameter("fldStatusPlaqeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarPlaqueInsert", fldID, fldPlaqueNumberParameter, fldPlaqueCityIDParameter, fldPlaqueSerialIDParameter, fldPlaqueTypeIDParameter, fldOwnerIDParameter, fldCharacterPersianPlaqueIDParameter, fldStatusPlaqeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarPlaqueSelect> sp_CarPlaqueSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarPlaqueSelect>("sp_CarPlaqueSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarPlaqueUpdate(Nullable<int> fldID, string fldPlaqueNumber, Nullable<int> fldPlaqueCityID, Nullable<int> fldPlaqueSerialID, Nullable<int> fldPlaqueTypeID, Nullable<long> fldOwnerID, Nullable<int> fldCharacterPersianPlaqueID, Nullable<int> fldStatusPlaqeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldPlaqueNumberParameter = fldPlaqueNumber != null ?
                new ObjectParameter("fldPlaqueNumber", fldPlaqueNumber) :
                new ObjectParameter("fldPlaqueNumber", typeof(string));
    
            var fldPlaqueCityIDParameter = fldPlaqueCityID.HasValue ?
                new ObjectParameter("fldPlaqueCityID", fldPlaqueCityID) :
                new ObjectParameter("fldPlaqueCityID", typeof(int));
    
            var fldPlaqueSerialIDParameter = fldPlaqueSerialID.HasValue ?
                new ObjectParameter("fldPlaqueSerialID", fldPlaqueSerialID) :
                new ObjectParameter("fldPlaqueSerialID", typeof(int));
    
            var fldPlaqueTypeIDParameter = fldPlaqueTypeID.HasValue ?
                new ObjectParameter("fldPlaqueTypeID", fldPlaqueTypeID) :
                new ObjectParameter("fldPlaqueTypeID", typeof(int));
    
            var fldOwnerIDParameter = fldOwnerID.HasValue ?
                new ObjectParameter("fldOwnerID", fldOwnerID) :
                new ObjectParameter("fldOwnerID", typeof(long));
    
            var fldCharacterPersianPlaqueIDParameter = fldCharacterPersianPlaqueID.HasValue ?
                new ObjectParameter("fldCharacterPersianPlaqueID", fldCharacterPersianPlaqueID) :
                new ObjectParameter("fldCharacterPersianPlaqueID", typeof(int));
    
            var fldStatusPlaqeIDParameter = fldStatusPlaqeID.HasValue ?
                new ObjectParameter("fldStatusPlaqeID", fldStatusPlaqeID) :
                new ObjectParameter("fldStatusPlaqeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarPlaqueUpdate", fldIDParameter, fldPlaqueNumberParameter, fldPlaqueCityIDParameter, fldPlaqueSerialIDParameter, fldPlaqueTypeIDParameter, fldOwnerIDParameter, fldCharacterPersianPlaqueIDParameter, fldStatusPlaqeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarSelect> sp_CarSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarSelect>("sp_CarSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarSeries_LogSelect> sp_CarSeries_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarSeries_LogSelect>("sp_CarSeries_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarSeriesDelete(Nullable<long> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarSeriesDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarSeriesInsert(Nullable<int> fldCarMakeID, Nullable<int> fldCarAccountTypeID, Nullable<int> fldCabinTypeID, Nullable<int> fldCarSystemID, Nullable<int> fldCarModelID, Nullable<int> fldCarClassID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldCarMakeIDParameter = fldCarMakeID.HasValue ?
                new ObjectParameter("fldCarMakeID", fldCarMakeID) :
                new ObjectParameter("fldCarMakeID", typeof(int));
    
            var fldCarAccountTypeIDParameter = fldCarAccountTypeID.HasValue ?
                new ObjectParameter("fldCarAccountTypeID", fldCarAccountTypeID) :
                new ObjectParameter("fldCarAccountTypeID", typeof(int));
    
            var fldCabinTypeIDParameter = fldCabinTypeID.HasValue ?
                new ObjectParameter("fldCabinTypeID", fldCabinTypeID) :
                new ObjectParameter("fldCabinTypeID", typeof(int));
    
            var fldCarSystemIDParameter = fldCarSystemID.HasValue ?
                new ObjectParameter("fldCarSystemID", fldCarSystemID) :
                new ObjectParameter("fldCarSystemID", typeof(int));
    
            var fldCarModelIDParameter = fldCarModelID.HasValue ?
                new ObjectParameter("fldCarModelID", fldCarModelID) :
                new ObjectParameter("fldCarModelID", typeof(int));
    
            var fldCarClassIDParameter = fldCarClassID.HasValue ?
                new ObjectParameter("fldCarClassID", fldCarClassID) :
                new ObjectParameter("fldCarClassID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarSeriesInsert", fldCarMakeIDParameter, fldCarAccountTypeIDParameter, fldCabinTypeIDParameter, fldCarSystemIDParameter, fldCarModelIDParameter, fldCarClassIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarSeriesSelect> sp_CarSeriesSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarSeriesSelect>("sp_CarSeriesSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarSeriesUpdate(Nullable<long> fldID, Nullable<int> fldCarMakeID, Nullable<int> fldCarAccountTypeID, Nullable<int> fldCabinTypeID, Nullable<int> fldCarSystemID, Nullable<int> fldCarModelID, Nullable<int> fldCarClassID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldCarMakeIDParameter = fldCarMakeID.HasValue ?
                new ObjectParameter("fldCarMakeID", fldCarMakeID) :
                new ObjectParameter("fldCarMakeID", typeof(int));
    
            var fldCarAccountTypeIDParameter = fldCarAccountTypeID.HasValue ?
                new ObjectParameter("fldCarAccountTypeID", fldCarAccountTypeID) :
                new ObjectParameter("fldCarAccountTypeID", typeof(int));
    
            var fldCabinTypeIDParameter = fldCabinTypeID.HasValue ?
                new ObjectParameter("fldCabinTypeID", fldCabinTypeID) :
                new ObjectParameter("fldCabinTypeID", typeof(int));
    
            var fldCarSystemIDParameter = fldCarSystemID.HasValue ?
                new ObjectParameter("fldCarSystemID", fldCarSystemID) :
                new ObjectParameter("fldCarSystemID", typeof(int));
    
            var fldCarModelIDParameter = fldCarModelID.HasValue ?
                new ObjectParameter("fldCarModelID", fldCarModelID) :
                new ObjectParameter("fldCarModelID", typeof(int));
    
            var fldCarClassIDParameter = fldCarClassID.HasValue ?
                new ObjectParameter("fldCarClassID", fldCarClassID) :
                new ObjectParameter("fldCarClassID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarSeriesUpdate", fldIDParameter, fldCarMakeIDParameter, fldCarAccountTypeIDParameter, fldCabinTypeIDParameter, fldCarSystemIDParameter, fldCarModelIDParameter, fldCarClassIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarSystem_LogSelect> sp_CarSystem_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarSystem_LogSelect>("sp_CarSystem_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarSystemDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarSystemDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarSystemInsert(ObjectParameter fldId, string fldName, Nullable<int> fldCabinTypeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCabinTypeIDParameter = fldCabinTypeID.HasValue ?
                new ObjectParameter("fldCabinTypeID", fldCabinTypeID) :
                new ObjectParameter("fldCabinTypeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarSystemInsert", fldId, fldNameParameter, fldCabinTypeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarSystemSelect> sp_CarSystemSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarSystemSelect>("sp_CarSystemSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarSystemUpdate(Nullable<int> fldID, string fldName, Nullable<int> fldCabinTypeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCabinTypeIDParameter = fldCabinTypeID.HasValue ?
                new ObjectParameter("fldCabinTypeID", fldCabinTypeID) :
                new ObjectParameter("fldCabinTypeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarSystemUpdate", fldIDParameter, fldNameParameter, fldCabinTypeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CarUpdate(Nullable<long> fldID, string fldMotorNumber, string fldShasiNumber, string fldVIN, Nullable<int> fldCarModelID, Nullable<int> fldCarClassID, Nullable<int> fldCarColorID, Nullable<short> fldModel, Nullable<System.DateTime> fldStartDateInsurance, Nullable<bool> fldMotabeghBaShasi, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldMotorNumberParameter = fldMotorNumber != null ?
                new ObjectParameter("fldMotorNumber", fldMotorNumber) :
                new ObjectParameter("fldMotorNumber", typeof(string));
    
            var fldShasiNumberParameter = fldShasiNumber != null ?
                new ObjectParameter("fldShasiNumber", fldShasiNumber) :
                new ObjectParameter("fldShasiNumber", typeof(string));
    
            var fldVINParameter = fldVIN != null ?
                new ObjectParameter("fldVIN", fldVIN) :
                new ObjectParameter("fldVIN", typeof(string));
    
            var fldCarModelIDParameter = fldCarModelID.HasValue ?
                new ObjectParameter("fldCarModelID", fldCarModelID) :
                new ObjectParameter("fldCarModelID", typeof(int));
    
            var fldCarClassIDParameter = fldCarClassID.HasValue ?
                new ObjectParameter("fldCarClassID", fldCarClassID) :
                new ObjectParameter("fldCarClassID", typeof(int));
    
            var fldCarColorIDParameter = fldCarColorID.HasValue ?
                new ObjectParameter("fldCarColorID", fldCarColorID) :
                new ObjectParameter("fldCarColorID", typeof(int));
    
            var fldModelParameter = fldModel.HasValue ?
                new ObjectParameter("fldModel", fldModel) :
                new ObjectParameter("fldModel", typeof(short));
    
            var fldStartDateInsuranceParameter = fldStartDateInsurance.HasValue ?
                new ObjectParameter("fldStartDateInsurance", fldStartDateInsurance) :
                new ObjectParameter("fldStartDateInsurance", typeof(System.DateTime));
    
            var fldMotabeghBaShasiParameter = fldMotabeghBaShasi.HasValue ?
                new ObjectParameter("fldMotabeghBaShasi", fldMotabeghBaShasi) :
                new ObjectParameter("fldMotabeghBaShasi", typeof(bool));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CarUpdate", fldIDParameter, fldMotorNumberParameter, fldShasiNumberParameter, fldVINParameter, fldCarModelIDParameter, fldCarClassIDParameter, fldCarColorIDParameter, fldModelParameter, fldStartDateInsuranceParameter, fldMotabeghBaShasiParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CarUserGuestSelect> sp_CarUserGuestSelect(string fieldname, string valueMotors, string valueShasi, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueMotorsParameter = valueMotors != null ?
                new ObjectParameter("ValueMotors", valueMotors) :
                new ObjectParameter("ValueMotors", typeof(string));
    
            var valueShasiParameter = valueShasi != null ?
                new ObjectParameter("ValueShasi", valueShasi) :
                new ObjectParameter("ValueShasi", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CarUserGuestSelect>("sp_CarUserGuestSelect", fieldnameParameter, valueMotorsParameter, valueShasiParameter, hParameter);
        }
    
        public virtual int sp_ChangePass(Nullable<long> fldUserId, string fldUserName, string fldPassword)
        {
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldUserNameParameter = fldUserName != null ?
                new ObjectParameter("fldUserName", fldUserName) :
                new ObjectParameter("fldUserName", typeof(string));
    
            var fldPasswordParameter = fldPassword != null ?
                new ObjectParameter("fldPassword", fldPassword) :
                new ObjectParameter("fldPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChangePass", fldUserIdParameter, fldUserNameParameter, fldPasswordParameter);
        }
    
        public virtual ObjectResult<sp_CharacterPersianPlaque_LogSelect> sp_CharacterPersianPlaque_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CharacterPersianPlaque_LogSelect>("sp_CharacterPersianPlaque_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CharacterPersianPlaqueDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CharacterPersianPlaqueDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CharacterPersianPlaqueInsert(string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CharacterPersianPlaqueInsert", fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CharacterPersianPlaqueSelect> sp_CharacterPersianPlaqueSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CharacterPersianPlaqueSelect>("sp_CharacterPersianPlaqueSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CharacterPersianPlaqueUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CharacterPersianPlaqueUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CheckEditCarFile> sp_CheckEditCarFile(Nullable<int> carId)
        {
            var carIdParameter = carId.HasValue ?
                new ObjectParameter("carId", carId) :
                new ObjectParameter("carId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CheckEditCarFile>("sp_CheckEditCarFile", carIdParameter);
        }
    
        public virtual ObjectResult<sp_CheckOwner_CarFile> sp_CheckOwner_CarFile(Nullable<int> carPlaqueID, Nullable<int> ownerId)
        {
            var carPlaqueIDParameter = carPlaqueID.HasValue ?
                new ObjectParameter("CarPlaqueID", carPlaqueID) :
                new ObjectParameter("CarPlaqueID", typeof(int));
    
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("ownerId", ownerId) :
                new ObjectParameter("ownerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CheckOwner_CarFile>("sp_CheckOwner_CarFile", carPlaqueIDParameter, ownerIdParameter);
        }
    
        public virtual int sp_City_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_City_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CityDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CityDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CityInsert(ObjectParameter fldId, string fldName, Nullable<int> fldZoneID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldZoneIDParameter = fldZoneID.HasValue ?
                new ObjectParameter("fldZoneID", fldZoneID) :
                new ObjectParameter("fldZoneID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CityInsert", fldId, fldNameParameter, fldZoneIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CitySelect> sp_CitySelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CitySelect>("sp_CitySelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CityUpdate(Nullable<int> fldID, string fldName, Nullable<int> fldZoneID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldZoneIDParameter = fldZoneID.HasValue ?
                new ObjectParameter("fldZoneID", fldZoneID) :
                new ObjectParameter("fldZoneID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CityUpdate", fldIDParameter, fldNameParameter, fldZoneIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Collection_LogSelect> sp_Collection_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Collection_LogSelect>("sp_Collection_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CollectionAccept(Nullable<long> fldID, Nullable<bool> fldAccept, Nullable<int> fldAcceptUser, Nullable<System.DateTime> fldAcceptDate)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldAcceptParameter = fldAccept.HasValue ?
                new ObjectParameter("fldAccept", fldAccept) :
                new ObjectParameter("fldAccept", typeof(bool));
    
            var fldAcceptUserParameter = fldAcceptUser.HasValue ?
                new ObjectParameter("fldAcceptUser", fldAcceptUser) :
                new ObjectParameter("fldAcceptUser", typeof(int));
    
            var fldAcceptDateParameter = fldAcceptDate.HasValue ?
                new ObjectParameter("fldAcceptDate", fldAcceptDate) :
                new ObjectParameter("fldAcceptDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CollectionAccept", fldIDParameter, fldAcceptParameter, fldAcceptUserParameter, fldAcceptDateParameter);
        }
    
        public virtual int sp_CollectionDelete(Nullable<long> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CollectionDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CollectionInsert(ObjectParameter fldId, Nullable<long> fldCarFileID, Nullable<System.DateTime> fldCollectionDate, Nullable<int> fldPrice, Nullable<int> fldSettleTypeID, Nullable<int> fldPeacockeryCode, Nullable<long> fldTrackCode, string fldSerialBarChasb, Nullable<long> fldUserID, string fldDesc, string fldUserPass, string fldTrackCodePishkhan, Nullable<int> fldMunId, string fldSerialFish, Nullable<int> fldPardakhtFileDetailId, Nullable<int> fldFileId, Nullable<bool> fldAccept, Nullable<int> fldAcceptUser, Nullable<System.DateTime> fldAcceptDate)
        {
            var fldCarFileIDParameter = fldCarFileID.HasValue ?
                new ObjectParameter("fldCarFileID", fldCarFileID) :
                new ObjectParameter("fldCarFileID", typeof(long));
    
            var fldCollectionDateParameter = fldCollectionDate.HasValue ?
                new ObjectParameter("fldCollectionDate", fldCollectionDate) :
                new ObjectParameter("fldCollectionDate", typeof(System.DateTime));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldSettleTypeIDParameter = fldSettleTypeID.HasValue ?
                new ObjectParameter("fldSettleTypeID", fldSettleTypeID) :
                new ObjectParameter("fldSettleTypeID", typeof(int));
    
            var fldPeacockeryCodeParameter = fldPeacockeryCode.HasValue ?
                new ObjectParameter("fldPeacockeryCode", fldPeacockeryCode) :
                new ObjectParameter("fldPeacockeryCode", typeof(int));
    
            var fldTrackCodeParameter = fldTrackCode.HasValue ?
                new ObjectParameter("fldTrackCode", fldTrackCode) :
                new ObjectParameter("fldTrackCode", typeof(long));
    
            var fldSerialBarChasbParameter = fldSerialBarChasb != null ?
                new ObjectParameter("fldSerialBarChasb", fldSerialBarChasb) :
                new ObjectParameter("fldSerialBarChasb", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldTrackCodePishkhanParameter = fldTrackCodePishkhan != null ?
                new ObjectParameter("fldTrackCodePishkhan", fldTrackCodePishkhan) :
                new ObjectParameter("fldTrackCodePishkhan", typeof(string));
    
            var fldMunIdParameter = fldMunId.HasValue ?
                new ObjectParameter("fldMunId", fldMunId) :
                new ObjectParameter("fldMunId", typeof(int));
    
            var fldSerialFishParameter = fldSerialFish != null ?
                new ObjectParameter("fldSerialFish", fldSerialFish) :
                new ObjectParameter("fldSerialFish", typeof(string));
    
            var fldPardakhtFileDetailIdParameter = fldPardakhtFileDetailId.HasValue ?
                new ObjectParameter("fldPardakhtFileDetailId", fldPardakhtFileDetailId) :
                new ObjectParameter("fldPardakhtFileDetailId", typeof(int));
    
            var fldFileIdParameter = fldFileId.HasValue ?
                new ObjectParameter("fldFileId", fldFileId) :
                new ObjectParameter("fldFileId", typeof(int));
    
            var fldAcceptParameter = fldAccept.HasValue ?
                new ObjectParameter("fldAccept", fldAccept) :
                new ObjectParameter("fldAccept", typeof(bool));
    
            var fldAcceptUserParameter = fldAcceptUser.HasValue ?
                new ObjectParameter("fldAcceptUser", fldAcceptUser) :
                new ObjectParameter("fldAcceptUser", typeof(int));
    
            var fldAcceptDateParameter = fldAcceptDate.HasValue ?
                new ObjectParameter("fldAcceptDate", fldAcceptDate) :
                new ObjectParameter("fldAcceptDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CollectionInsert", fldId, fldCarFileIDParameter, fldCollectionDateParameter, fldPriceParameter, fldSettleTypeIDParameter, fldPeacockeryCodeParameter, fldTrackCodeParameter, fldSerialBarChasbParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldTrackCodePishkhanParameter, fldMunIdParameter, fldSerialFishParameter, fldPardakhtFileDetailIdParameter, fldFileIdParameter, fldAcceptParameter, fldAcceptUserParameter, fldAcceptDateParameter);
        }
    
        public virtual ObjectResult<sp_CollectionSelect> sp_CollectionSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CollectionSelect>("sp_CollectionSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CollectionUpdate(Nullable<long> fldID, Nullable<long> fldCarFileID, Nullable<System.DateTime> fldCollectionDate, Nullable<int> fldPrice, Nullable<int> fldSettleTypeID, Nullable<int> fldPeacockeryCode, Nullable<long> fldTrackCode, string fldSerialBarChasb, Nullable<long> fldUserID, string fldDesc, string fldUserPass, string fldTrackCodePishkhan, Nullable<int> fldMunId, string fldSerialFish, Nullable<int> fldPardakhtFileDetailId, Nullable<int> fldfileid)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldCarFileIDParameter = fldCarFileID.HasValue ?
                new ObjectParameter("fldCarFileID", fldCarFileID) :
                new ObjectParameter("fldCarFileID", typeof(long));
    
            var fldCollectionDateParameter = fldCollectionDate.HasValue ?
                new ObjectParameter("fldCollectionDate", fldCollectionDate) :
                new ObjectParameter("fldCollectionDate", typeof(System.DateTime));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldSettleTypeIDParameter = fldSettleTypeID.HasValue ?
                new ObjectParameter("fldSettleTypeID", fldSettleTypeID) :
                new ObjectParameter("fldSettleTypeID", typeof(int));
    
            var fldPeacockeryCodeParameter = fldPeacockeryCode.HasValue ?
                new ObjectParameter("fldPeacockeryCode", fldPeacockeryCode) :
                new ObjectParameter("fldPeacockeryCode", typeof(int));
    
            var fldTrackCodeParameter = fldTrackCode.HasValue ?
                new ObjectParameter("fldTrackCode", fldTrackCode) :
                new ObjectParameter("fldTrackCode", typeof(long));
    
            var fldSerialBarChasbParameter = fldSerialBarChasb != null ?
                new ObjectParameter("fldSerialBarChasb", fldSerialBarChasb) :
                new ObjectParameter("fldSerialBarChasb", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldTrackCodePishkhanParameter = fldTrackCodePishkhan != null ?
                new ObjectParameter("fldTrackCodePishkhan", fldTrackCodePishkhan) :
                new ObjectParameter("fldTrackCodePishkhan", typeof(string));
    
            var fldMunIdParameter = fldMunId.HasValue ?
                new ObjectParameter("fldMunId", fldMunId) :
                new ObjectParameter("fldMunId", typeof(int));
    
            var fldSerialFishParameter = fldSerialFish != null ?
                new ObjectParameter("fldSerialFish", fldSerialFish) :
                new ObjectParameter("fldSerialFish", typeof(string));
    
            var fldPardakhtFileDetailIdParameter = fldPardakhtFileDetailId.HasValue ?
                new ObjectParameter("fldPardakhtFileDetailId", fldPardakhtFileDetailId) :
                new ObjectParameter("fldPardakhtFileDetailId", typeof(int));
    
            var fldfileidParameter = fldfileid.HasValue ?
                new ObjectParameter("fldfileid", fldfileid) :
                new ObjectParameter("fldfileid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CollectionUpdate", fldIDParameter, fldCarFileIDParameter, fldCollectionDateParameter, fldPriceParameter, fldSettleTypeIDParameter, fldPeacockeryCodeParameter, fldTrackCodeParameter, fldSerialBarChasbParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldTrackCodePishkhanParameter, fldMunIdParameter, fldSerialFishParameter, fldPardakhtFileDetailIdParameter, fldfileidParameter);
        }
    
        public virtual int sp_CollectionUpdateSamie(Nullable<long> fldID, string fldSamieGUID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldSamieGUIDParameter = fldSamieGUID != null ?
                new ObjectParameter("fldSamieGUID", fldSamieGUID) :
                new ObjectParameter("fldSamieGUID", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CollectionUpdateSamie", fldIDParameter, fldSamieGUIDParameter, fldUserIDParameter);
        }
    
        public virtual ObjectResult<sp_ColorCar_LogSelect> sp_ColorCar_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ColorCar_LogSelect>("sp_ColorCar_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ColorCarDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ColorCarDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ColorCarInsert(string fldColor, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldColorParameter = fldColor != null ?
                new ObjectParameter("fldColor", fldColor) :
                new ObjectParameter("fldColor", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ColorCarInsert", fldColorParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ColorCarSelect> sp_ColorCarSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ColorCarSelect>("sp_ColorCarSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ColorCarUpdate(Nullable<int> fldID, string fldColor, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldColorParameter = fldColor != null ?
                new ObjectParameter("fldColor", fldColor) :
                new ObjectParameter("fldColor", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ColorCarUpdate", fldIDParameter, fldColorParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ComplicationsRate_LogSelect> sp_ComplicationsRate_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ComplicationsRate_LogSelect>("sp_ComplicationsRate_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ComplicationsRateDelete(Nullable<long> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ComplicationsRateDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ComplicationsRateInsert(Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<short> fldYear, Nullable<byte> fldFromCylinder, Nullable<byte> fldToCylinder, Nullable<byte> fldFromWheel, Nullable<byte> fldToWheel, Nullable<short> fldFromModel, Nullable<short> fldToModel, Nullable<int> fldFromContentMotor, Nullable<int> fldToContentMotor, Nullable<int> fldPrice, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldYearParameter = fldYear.HasValue ?
                new ObjectParameter("fldYear", fldYear) :
                new ObjectParameter("fldYear", typeof(short));
    
            var fldFromCylinderParameter = fldFromCylinder.HasValue ?
                new ObjectParameter("fldFromCylinder", fldFromCylinder) :
                new ObjectParameter("fldFromCylinder", typeof(byte));
    
            var fldToCylinderParameter = fldToCylinder.HasValue ?
                new ObjectParameter("fldToCylinder", fldToCylinder) :
                new ObjectParameter("fldToCylinder", typeof(byte));
    
            var fldFromWheelParameter = fldFromWheel.HasValue ?
                new ObjectParameter("fldFromWheel", fldFromWheel) :
                new ObjectParameter("fldFromWheel", typeof(byte));
    
            var fldToWheelParameter = fldToWheel.HasValue ?
                new ObjectParameter("fldToWheel", fldToWheel) :
                new ObjectParameter("fldToWheel", typeof(byte));
    
            var fldFromModelParameter = fldFromModel.HasValue ?
                new ObjectParameter("fldFromModel", fldFromModel) :
                new ObjectParameter("fldFromModel", typeof(short));
    
            var fldToModelParameter = fldToModel.HasValue ?
                new ObjectParameter("fldToModel", fldToModel) :
                new ObjectParameter("fldToModel", typeof(short));
    
            var fldFromContentMotorParameter = fldFromContentMotor.HasValue ?
                new ObjectParameter("fldFromContentMotor", fldFromContentMotor) :
                new ObjectParameter("fldFromContentMotor", typeof(int));
    
            var fldToContentMotorParameter = fldToContentMotor.HasValue ?
                new ObjectParameter("fldToContentMotor", fldToContentMotor) :
                new ObjectParameter("fldToContentMotor", typeof(int));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ComplicationsRateInsert", fldTypeCarParameter, fldCodeCarParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldYearParameter, fldFromCylinderParameter, fldToCylinderParameter, fldFromWheelParameter, fldToWheelParameter, fldFromModelParameter, fldToModelParameter, fldFromContentMotorParameter, fldToContentMotorParameter, fldPriceParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ComplicationsRateInsert_Update(Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<short> fldYear, Nullable<int> fldPrice, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldYearParameter = fldYear.HasValue ?
                new ObjectParameter("fldYear", fldYear) :
                new ObjectParameter("fldYear", typeof(short));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ComplicationsRateInsert_Update", fldTypeCarParameter, fldCodeCarParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldYearParameter, fldPriceParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ComplicationsRateInsertBazeForConvert(Nullable<long> fldCarSeriesID, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<short> fldYear, Nullable<int> fldPrice, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<byte> fldFromCylinder, Nullable<byte> fldToCylinder, Nullable<short> fldFromModel, Nullable<short> fldToModel)
        {
            var fldCarSeriesIDParameter = fldCarSeriesID.HasValue ?
                new ObjectParameter("fldCarSeriesID", fldCarSeriesID) :
                new ObjectParameter("fldCarSeriesID", typeof(long));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldYearParameter = fldYear.HasValue ?
                new ObjectParameter("fldYear", fldYear) :
                new ObjectParameter("fldYear", typeof(short));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldFromCylinderParameter = fldFromCylinder.HasValue ?
                new ObjectParameter("fldFromCylinder", fldFromCylinder) :
                new ObjectParameter("fldFromCylinder", typeof(byte));
    
            var fldToCylinderParameter = fldToCylinder.HasValue ?
                new ObjectParameter("fldToCylinder", fldToCylinder) :
                new ObjectParameter("fldToCylinder", typeof(byte));
    
            var fldFromModelParameter = fldFromModel.HasValue ?
                new ObjectParameter("fldFromModel", fldFromModel) :
                new ObjectParameter("fldFromModel", typeof(short));
    
            var fldToModelParameter = fldToModel.HasValue ?
                new ObjectParameter("fldToModel", fldToModel) :
                new ObjectParameter("fldToModel", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ComplicationsRateInsertBazeForConvert", fldCarSeriesIDParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldYearParameter, fldPriceParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldFromCylinderParameter, fldToCylinderParameter, fldFromModelParameter, fldToModelParameter);
        }
    
        public virtual int sp_ComplicationsRateInsertForConvert(Nullable<long> fldCarSeriesID, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<short> fldYear, Nullable<int> fldPrice, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldCarSeriesIDParameter = fldCarSeriesID.HasValue ?
                new ObjectParameter("fldCarSeriesID", fldCarSeriesID) :
                new ObjectParameter("fldCarSeriesID", typeof(long));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldYearParameter = fldYear.HasValue ?
                new ObjectParameter("fldYear", fldYear) :
                new ObjectParameter("fldYear", typeof(short));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ComplicationsRateInsertForConvert", fldCarSeriesIDParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldYearParameter, fldPriceParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ComplicationsRateSelect> sp_ComplicationsRateSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ComplicationsRateSelect>("sp_ComplicationsRateSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ComplicationsRateUpdate(Nullable<long> fldID, Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<short> fldYear, Nullable<byte> fldFromCylinder, Nullable<byte> fldToCylinder, Nullable<byte> fldFromWheel, Nullable<byte> fldToWheel, Nullable<short> fldFromModel, Nullable<short> fldToModel, Nullable<int> fldFromContentMotor, Nullable<int> fldToContentMotor, Nullable<int> fldPrice, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldYearParameter = fldYear.HasValue ?
                new ObjectParameter("fldYear", fldYear) :
                new ObjectParameter("fldYear", typeof(short));
    
            var fldFromCylinderParameter = fldFromCylinder.HasValue ?
                new ObjectParameter("fldFromCylinder", fldFromCylinder) :
                new ObjectParameter("fldFromCylinder", typeof(byte));
    
            var fldToCylinderParameter = fldToCylinder.HasValue ?
                new ObjectParameter("fldToCylinder", fldToCylinder) :
                new ObjectParameter("fldToCylinder", typeof(byte));
    
            var fldFromWheelParameter = fldFromWheel.HasValue ?
                new ObjectParameter("fldFromWheel", fldFromWheel) :
                new ObjectParameter("fldFromWheel", typeof(byte));
    
            var fldToWheelParameter = fldToWheel.HasValue ?
                new ObjectParameter("fldToWheel", fldToWheel) :
                new ObjectParameter("fldToWheel", typeof(byte));
    
            var fldFromModelParameter = fldFromModel.HasValue ?
                new ObjectParameter("fldFromModel", fldFromModel) :
                new ObjectParameter("fldFromModel", typeof(short));
    
            var fldToModelParameter = fldToModel.HasValue ?
                new ObjectParameter("fldToModel", fldToModel) :
                new ObjectParameter("fldToModel", typeof(short));
    
            var fldFromContentMotorParameter = fldFromContentMotor.HasValue ?
                new ObjectParameter("fldFromContentMotor", fldFromContentMotor) :
                new ObjectParameter("fldFromContentMotor", typeof(int));
    
            var fldToContentMotorParameter = fldToContentMotor.HasValue ?
                new ObjectParameter("fldToContentMotor", fldToContentMotor) :
                new ObjectParameter("fldToContentMotor", typeof(int));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ComplicationsRateUpdate", fldIDParameter, fldTypeCarParameter, fldCodeCarParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldYearParameter, fldFromCylinderParameter, fldToCylinderParameter, fldFromWheelParameter, fldToWheelParameter, fldFromModelParameter, fldToModelParameter, fldFromContentMotorParameter, fldToContentMotorParameter, fldPriceParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Contact_LogSelect> sp_Contact_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_LogSelect>("sp_Contact_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ContactDelete(Nullable<int> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ContactDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ContactInsert(string fldName, string fldFamily, string fldTel1, string fldTel2, string fldMobile1, string fldMobile2, string fldEmail, string fldFax, string fldWebsite, string fldPostalCode, Nullable<int> fldAccostTypeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldFamilyParameter = fldFamily != null ?
                new ObjectParameter("fldFamily", fldFamily) :
                new ObjectParameter("fldFamily", typeof(string));
    
            var fldTel1Parameter = fldTel1 != null ?
                new ObjectParameter("fldTel1", fldTel1) :
                new ObjectParameter("fldTel1", typeof(string));
    
            var fldTel2Parameter = fldTel2 != null ?
                new ObjectParameter("fldTel2", fldTel2) :
                new ObjectParameter("fldTel2", typeof(string));
    
            var fldMobile1Parameter = fldMobile1 != null ?
                new ObjectParameter("fldMobile1", fldMobile1) :
                new ObjectParameter("fldMobile1", typeof(string));
    
            var fldMobile2Parameter = fldMobile2 != null ?
                new ObjectParameter("fldMobile2", fldMobile2) :
                new ObjectParameter("fldMobile2", typeof(string));
    
            var fldEmailParameter = fldEmail != null ?
                new ObjectParameter("fldEmail", fldEmail) :
                new ObjectParameter("fldEmail", typeof(string));
    
            var fldFaxParameter = fldFax != null ?
                new ObjectParameter("fldFax", fldFax) :
                new ObjectParameter("fldFax", typeof(string));
    
            var fldWebsiteParameter = fldWebsite != null ?
                new ObjectParameter("fldWebsite", fldWebsite) :
                new ObjectParameter("fldWebsite", typeof(string));
    
            var fldPostalCodeParameter = fldPostalCode != null ?
                new ObjectParameter("fldPostalCode", fldPostalCode) :
                new ObjectParameter("fldPostalCode", typeof(string));
    
            var fldAccostTypeIDParameter = fldAccostTypeID.HasValue ?
                new ObjectParameter("fldAccostTypeID", fldAccostTypeID) :
                new ObjectParameter("fldAccostTypeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ContactInsert", fldNameParameter, fldFamilyParameter, fldTel1Parameter, fldTel2Parameter, fldMobile1Parameter, fldMobile2Parameter, fldEmailParameter, fldFaxParameter, fldWebsiteParameter, fldPostalCodeParameter, fldAccostTypeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ContactSelect> sp_ContactSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ContactSelect>("sp_ContactSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ContactUpdate(Nullable<int> fldID, string fldName, string fldFamily, string fldTel1, string fldTel2, string fldMobile1, string fldMobile2, string fldEmail, string fldFax, string fldWebsite, string fldPostalCode, Nullable<int> fldAccostTypeID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldFamilyParameter = fldFamily != null ?
                new ObjectParameter("fldFamily", fldFamily) :
                new ObjectParameter("fldFamily", typeof(string));
    
            var fldTel1Parameter = fldTel1 != null ?
                new ObjectParameter("fldTel1", fldTel1) :
                new ObjectParameter("fldTel1", typeof(string));
    
            var fldTel2Parameter = fldTel2 != null ?
                new ObjectParameter("fldTel2", fldTel2) :
                new ObjectParameter("fldTel2", typeof(string));
    
            var fldMobile1Parameter = fldMobile1 != null ?
                new ObjectParameter("fldMobile1", fldMobile1) :
                new ObjectParameter("fldMobile1", typeof(string));
    
            var fldMobile2Parameter = fldMobile2 != null ?
                new ObjectParameter("fldMobile2", fldMobile2) :
                new ObjectParameter("fldMobile2", typeof(string));
    
            var fldEmailParameter = fldEmail != null ?
                new ObjectParameter("fldEmail", fldEmail) :
                new ObjectParameter("fldEmail", typeof(string));
    
            var fldFaxParameter = fldFax != null ?
                new ObjectParameter("fldFax", fldFax) :
                new ObjectParameter("fldFax", typeof(string));
    
            var fldWebsiteParameter = fldWebsite != null ?
                new ObjectParameter("fldWebsite", fldWebsite) :
                new ObjectParameter("fldWebsite", typeof(string));
    
            var fldPostalCodeParameter = fldPostalCode != null ?
                new ObjectParameter("fldPostalCode", fldPostalCode) :
                new ObjectParameter("fldPostalCode", typeof(string));
    
            var fldAccostTypeIDParameter = fldAccostTypeID.HasValue ?
                new ObjectParameter("fldAccostTypeID", fldAccostTypeID) :
                new ObjectParameter("fldAccostTypeID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ContactUpdate", fldIDParameter, fldNameParameter, fldFamilyParameter, fldTel1Parameter, fldTel2Parameter, fldMobile1Parameter, fldMobile2Parameter, fldEmailParameter, fldFaxParameter, fldWebsiteParameter, fldPostalCodeParameter, fldAccostTypeIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int Sp_ConvertCar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ConvertCar");
        }
    
        public virtual int sp_ConvertCarFile()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConvertCarFile");
        }
    
        public virtual ObjectResult<sp_Cost_LogSelect> sp_Cost_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Cost_LogSelect>("sp_Cost_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CostDelete(Nullable<int> fldID, Nullable<int> flduserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var flduserIdParameter = flduserId.HasValue ?
                new ObjectParameter("flduserId", flduserId) :
                new ObjectParameter("flduserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CostDelete", fldIDParameter, flduserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CostInsert(string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CostInsert", fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CostSelect> sp_CostSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CostSelect>("sp_CostSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CostUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CostUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CountPaid_NotPaid_TafkikTavabe> sp_CountPaid_NotPaid_TafkikTavabe(string fieldName, string sal)
        {
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("fieldName", fieldName) :
                new ObjectParameter("fieldName", typeof(string));
    
            var salParameter = sal != null ?
                new ObjectParameter("Sal", sal) :
                new ObjectParameter("Sal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CountPaid_NotPaid_TafkikTavabe>("sp_CountPaid_NotPaid_TafkikTavabe", fieldNameParameter, salParameter);
        }
    
        public virtual ObjectResult<sp_CountryDivisions_LogSelect> sp_CountryDivisions_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CountryDivisions_LogSelect>("sp_CountryDivisions_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CountryDivisionsDelete(Nullable<long> fldID, Nullable<int> fldUserId, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CountryDivisionsDelete", fldIDParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CountryDivisionsInsert(Nullable<int> fldStateID, Nullable<int> fldCountyID, Nullable<int> fldZoneID, Nullable<int> fldCityID, Nullable<int> fldMunicipalityID, Nullable<long> fldLocalID, Nullable<long> fldAreaID, Nullable<long> fldOfficesID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldStateIDParameter = fldStateID.HasValue ?
                new ObjectParameter("fldStateID", fldStateID) :
                new ObjectParameter("fldStateID", typeof(int));
    
            var fldCountyIDParameter = fldCountyID.HasValue ?
                new ObjectParameter("fldCountyID", fldCountyID) :
                new ObjectParameter("fldCountyID", typeof(int));
    
            var fldZoneIDParameter = fldZoneID.HasValue ?
                new ObjectParameter("fldZoneID", fldZoneID) :
                new ObjectParameter("fldZoneID", typeof(int));
    
            var fldCityIDParameter = fldCityID.HasValue ?
                new ObjectParameter("fldCityID", fldCityID) :
                new ObjectParameter("fldCityID", typeof(int));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldLocalIDParameter = fldLocalID.HasValue ?
                new ObjectParameter("fldLocalID", fldLocalID) :
                new ObjectParameter("fldLocalID", typeof(long));
    
            var fldAreaIDParameter = fldAreaID.HasValue ?
                new ObjectParameter("fldAreaID", fldAreaID) :
                new ObjectParameter("fldAreaID", typeof(long));
    
            var fldOfficesIDParameter = fldOfficesID.HasValue ?
                new ObjectParameter("fldOfficesID", fldOfficesID) :
                new ObjectParameter("fldOfficesID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CountryDivisionsInsert", fldStateIDParameter, fldCountyIDParameter, fldZoneIDParameter, fldCityIDParameter, fldMunicipalityIDParameter, fldLocalIDParameter, fldAreaIDParameter, fldOfficesIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CountryDivisionsSelect> sp_CountryDivisionsSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CountryDivisionsSelect>("sp_CountryDivisionsSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CountryDivisionsUpdate(Nullable<long> fldID, Nullable<int> fldStateID, Nullable<int> fldCountyID, Nullable<int> fldZoneID, Nullable<int> fldCityID, Nullable<int> fldMunicipalityID, Nullable<long> fldLocalID, Nullable<long> fldAreaID, Nullable<long> fldOfficesID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldStateIDParameter = fldStateID.HasValue ?
                new ObjectParameter("fldStateID", fldStateID) :
                new ObjectParameter("fldStateID", typeof(int));
    
            var fldCountyIDParameter = fldCountyID.HasValue ?
                new ObjectParameter("fldCountyID", fldCountyID) :
                new ObjectParameter("fldCountyID", typeof(int));
    
            var fldZoneIDParameter = fldZoneID.HasValue ?
                new ObjectParameter("fldZoneID", fldZoneID) :
                new ObjectParameter("fldZoneID", typeof(int));
    
            var fldCityIDParameter = fldCityID.HasValue ?
                new ObjectParameter("fldCityID", fldCityID) :
                new ObjectParameter("fldCityID", typeof(int));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldLocalIDParameter = fldLocalID.HasValue ?
                new ObjectParameter("fldLocalID", fldLocalID) :
                new ObjectParameter("fldLocalID", typeof(long));
    
            var fldAreaIDParameter = fldAreaID.HasValue ?
                new ObjectParameter("fldAreaID", fldAreaID) :
                new ObjectParameter("fldAreaID", typeof(long));
    
            var fldOfficesIDParameter = fldOfficesID.HasValue ?
                new ObjectParameter("fldOfficesID", fldOfficesID) :
                new ObjectParameter("fldOfficesID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CountryDivisionsUpdate", fldIDParameter, fldStateIDParameter, fldCountyIDParameter, fldZoneIDParameter, fldCityIDParameter, fldMunicipalityIDParameter, fldLocalIDParameter, fldAreaIDParameter, fldOfficesIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CountryDivName> sp_CountryDivName(Nullable<int> type, Nullable<int> code)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CountryDivName>("sp_CountryDivName", typeParameter, codeParameter);
        }
    
        public virtual ObjectResult<sp_County_LogSelect> sp_County_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_County_LogSelect>("sp_County_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CountyDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CountyDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CountyInsert(ObjectParameter fldId, string fldName, Nullable<int> fldStateID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldStateIDParameter = fldStateID.HasValue ?
                new ObjectParameter("fldStateID", fldStateID) :
                new ObjectParameter("fldStateID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CountyInsert", fldId, fldNameParameter, fldStateIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_CountySelect> sp_CountySelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CountySelect>("sp_CountySelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_CountyUpdate(Nullable<int> fldID, string fldName, Nullable<int> fldStateID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldStateIDParameter = fldStateID.HasValue ?
                new ObjectParameter("fldStateID", fldStateID) :
                new ObjectParameter("fldStateID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CountyUpdate", fldIDParameter, fldNameParameter, fldStateIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_DegreeMunicipality_LogSelect> sp_DegreeMunicipality_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DegreeMunicipality_LogSelect>("sp_DegreeMunicipality_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_DegreeMunicipalityDelete(Nullable<long> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DegreeMunicipalityDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_DegreeMunicipalityInsert(Nullable<byte> fldDegree, Nullable<System.DateTime> fldDateDegree, Nullable<int> fldMunicipalityID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldDegreeParameter = fldDegree.HasValue ?
                new ObjectParameter("fldDegree", fldDegree) :
                new ObjectParameter("fldDegree", typeof(byte));
    
            var fldDateDegreeParameter = fldDateDegree.HasValue ?
                new ObjectParameter("fldDateDegree", fldDateDegree) :
                new ObjectParameter("fldDateDegree", typeof(System.DateTime));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DegreeMunicipalityInsert", fldDegreeParameter, fldDateDegreeParameter, fldMunicipalityIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_DegreeMunicipalitySelect> sp_DegreeMunicipalitySelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DegreeMunicipalitySelect>("sp_DegreeMunicipalitySelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_DegreeMunicipalityUpdate(Nullable<long> fldID, Nullable<byte> fldDegree, Nullable<System.DateTime> fldDateDegree, Nullable<int> fldMunicipalityID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldDegreeParameter = fldDegree.HasValue ?
                new ObjectParameter("fldDegree", fldDegree) :
                new ObjectParameter("fldDegree", typeof(byte));
    
            var fldDateDegreeParameter = fldDateDegree.HasValue ?
                new ObjectParameter("fldDateDegree", fldDateDegree) :
                new ObjectParameter("fldDateDegree", typeof(System.DateTime));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DegreeMunicipalityUpdate", fldIDParameter, fldDegreeParameter, fldDateDegreeParameter, fldMunicipalityIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int Sp_DeleteCalcTransaction(Nullable<int> id, Nullable<int> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteCalcTransaction", idParameter, useridParameter);
        }
    
        public virtual int sp_DeleteDuplicatedFish(Nullable<int> userid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteDuplicatedFish", useridParameter, fromParameter, toParameter);
        }
    
        public virtual int sp_DeleteDuplicatedFishByCarFile(Nullable<int> userid, Nullable<int> carfileid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var carfileidParameter = carfileid.HasValue ?
                new ObjectParameter("carfileid", carfileid) :
                new ObjectParameter("carfileid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteDuplicatedFishByCarFile", useridParameter, carfileidParameter);
        }
    
        public virtual int sp_DeleteMafasa(Nullable<long> fldCarId)
        {
            var fldCarIdParameter = fldCarId.HasValue ?
                new ObjectParameter("fldCarId", fldCarId) :
                new ObjectParameter("fldCarId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteMafasa", fldCarIdParameter);
        }
    
        public virtual int sp_DeletePeacockery_Copy(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeletePeacockery_Copy", idParameter);
        }
    
        public virtual int sp_DigitalArchive_DetailDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DigitalArchive_DetailDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_DigitalArchive_DetailInsert(Nullable<int> fldDigitalArchiveId, byte[] fldPic, Nullable<long> fldUserID, string fldDesc)
        {
            var fldDigitalArchiveIdParameter = fldDigitalArchiveId.HasValue ?
                new ObjectParameter("fldDigitalArchiveId", fldDigitalArchiveId) :
                new ObjectParameter("fldDigitalArchiveId", typeof(int));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DigitalArchive_DetailInsert", fldDigitalArchiveIdParameter, fldPicParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_DigitalArchive_DetailSelect> sp_DigitalArchive_DetailSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DigitalArchive_DetailSelect>("sp_DigitalArchive_DetailSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_DigitalArchive_DetailUpdate(Nullable<int> fldId, Nullable<int> fldDigitalArchiveId, byte[] fldPic, Nullable<long> fldUserID, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldDigitalArchiveIdParameter = fldDigitalArchiveId.HasValue ?
                new ObjectParameter("fldDigitalArchiveId", fldDigitalArchiveId) :
                new ObjectParameter("fldDigitalArchiveId", typeof(int));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DigitalArchive_DetailUpdate", fldIdParameter, fldDigitalArchiveIdParameter, fldPicParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual int sp_DigitalArchiveDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DigitalArchiveDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_DigitalArchiveInsert(ObjectParameter fldID, Nullable<long> fldCarFileId, Nullable<int> fldDigitalTreeId, Nullable<long> fldUserID, string fldDesc)
        {
            var fldCarFileIdParameter = fldCarFileId.HasValue ?
                new ObjectParameter("fldCarFileId", fldCarFileId) :
                new ObjectParameter("fldCarFileId", typeof(long));
    
            var fldDigitalTreeIdParameter = fldDigitalTreeId.HasValue ?
                new ObjectParameter("fldDigitalTreeId", fldDigitalTreeId) :
                new ObjectParameter("fldDigitalTreeId", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DigitalArchiveInsert", fldID, fldCarFileIdParameter, fldDigitalTreeIdParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_DigitalArchiveSelect> sp_DigitalArchiveSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DigitalArchiveSelect>("sp_DigitalArchiveSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_DigitalArchiveUpdate(Nullable<int> fldID, Nullable<long> fldCarFileId, Nullable<int> fldDigitalTreeId, Nullable<long> fldUserID, string fldDesc)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldCarFileIdParameter = fldCarFileId.HasValue ?
                new ObjectParameter("fldCarFileId", fldCarFileId) :
                new ObjectParameter("fldCarFileId", typeof(long));
    
            var fldDigitalTreeIdParameter = fldDigitalTreeId.HasValue ?
                new ObjectParameter("fldDigitalTreeId", fldDigitalTreeId) :
                new ObjectParameter("fldDigitalTreeId", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DigitalArchiveUpdate", fldIDParameter, fldCarFileIdParameter, fldDigitalTreeIdParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_Discount_LogSelect> sp_Discount_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Discount_LogSelect>("sp_Discount_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_DiscountDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DiscountDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_DiscountInsert(string fldName, Nullable<System.DateTime> fldStartDate, Nullable<System.DateTime> fldEndDate, Nullable<bool> fldComplicationPrice, Nullable<bool> fldFinePrice, Nullable<bool> fldValueAddedPrice, Nullable<bool> fldOtherPrice, Nullable<int> fldPercentDiscount, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<int> fldTypeCarSeries, Nullable<int> fldCodeCarSeries, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<System.DateTime> fldDateOf, Nullable<bool> fldEffectiveUser, Nullable<bool> fldEffectiveOffice, Nullable<bool> fldEffectiveMunicipality)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldStartDateParameter = fldStartDate.HasValue ?
                new ObjectParameter("fldStartDate", fldStartDate) :
                new ObjectParameter("fldStartDate", typeof(System.DateTime));
    
            var fldEndDateParameter = fldEndDate.HasValue ?
                new ObjectParameter("fldEndDate", fldEndDate) :
                new ObjectParameter("fldEndDate", typeof(System.DateTime));
    
            var fldComplicationPriceParameter = fldComplicationPrice.HasValue ?
                new ObjectParameter("fldComplicationPrice", fldComplicationPrice) :
                new ObjectParameter("fldComplicationPrice", typeof(bool));
    
            var fldFinePriceParameter = fldFinePrice.HasValue ?
                new ObjectParameter("fldFinePrice", fldFinePrice) :
                new ObjectParameter("fldFinePrice", typeof(bool));
    
            var fldValueAddedPriceParameter = fldValueAddedPrice.HasValue ?
                new ObjectParameter("fldValueAddedPrice", fldValueAddedPrice) :
                new ObjectParameter("fldValueAddedPrice", typeof(bool));
    
            var fldOtherPriceParameter = fldOtherPrice.HasValue ?
                new ObjectParameter("fldOtherPrice", fldOtherPrice) :
                new ObjectParameter("fldOtherPrice", typeof(bool));
    
            var fldPercentDiscountParameter = fldPercentDiscount.HasValue ?
                new ObjectParameter("fldPercentDiscount", fldPercentDiscount) :
                new ObjectParameter("fldPercentDiscount", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldTypeCarSeriesParameter = fldTypeCarSeries.HasValue ?
                new ObjectParameter("fldTypeCarSeries", fldTypeCarSeries) :
                new ObjectParameter("fldTypeCarSeries", typeof(int));
    
            var fldCodeCarSeriesParameter = fldCodeCarSeries.HasValue ?
                new ObjectParameter("fldCodeCarSeries", fldCodeCarSeries) :
                new ObjectParameter("fldCodeCarSeries", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldDateOfParameter = fldDateOf.HasValue ?
                new ObjectParameter("fldDateOf", fldDateOf) :
                new ObjectParameter("fldDateOf", typeof(System.DateTime));
    
            var fldEffectiveUserParameter = fldEffectiveUser.HasValue ?
                new ObjectParameter("fldEffectiveUser", fldEffectiveUser) :
                new ObjectParameter("fldEffectiveUser", typeof(bool));
    
            var fldEffectiveOfficeParameter = fldEffectiveOffice.HasValue ?
                new ObjectParameter("fldEffectiveOffice", fldEffectiveOffice) :
                new ObjectParameter("fldEffectiveOffice", typeof(bool));
    
            var fldEffectiveMunicipalityParameter = fldEffectiveMunicipality.HasValue ?
                new ObjectParameter("fldEffectiveMunicipality", fldEffectiveMunicipality) :
                new ObjectParameter("fldEffectiveMunicipality", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DiscountInsert", fldNameParameter, fldStartDateParameter, fldEndDateParameter, fldComplicationPriceParameter, fldFinePriceParameter, fldValueAddedPriceParameter, fldOtherPriceParameter, fldPercentDiscountParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldTypeCarSeriesParameter, fldCodeCarSeriesParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldDateOfParameter, fldEffectiveUserParameter, fldEffectiveOfficeParameter, fldEffectiveMunicipalityParameter);
        }
    
        public virtual ObjectResult<sp_DiscountSelect> sp_DiscountSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DiscountSelect>("sp_DiscountSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_DiscountUpdate(Nullable<int> fldID, string fldName, Nullable<System.DateTime> fldStartDate, Nullable<System.DateTime> fldEndDate, Nullable<bool> fldComplicationPrice, Nullable<bool> fldFinePrice, Nullable<bool> fldValueAddedPrice, Nullable<bool> fldOtherPrice, Nullable<int> fldPercentDiscount, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<int> fldTypeCarSeries, Nullable<int> fldCodeCarSeries, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<System.DateTime> fldDateOf, Nullable<bool> fldEffectiveUser, Nullable<bool> fldEffectiveOffice, Nullable<bool> fldEffectiveMunicipality)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldStartDateParameter = fldStartDate.HasValue ?
                new ObjectParameter("fldStartDate", fldStartDate) :
                new ObjectParameter("fldStartDate", typeof(System.DateTime));
    
            var fldEndDateParameter = fldEndDate.HasValue ?
                new ObjectParameter("fldEndDate", fldEndDate) :
                new ObjectParameter("fldEndDate", typeof(System.DateTime));
    
            var fldComplicationPriceParameter = fldComplicationPrice.HasValue ?
                new ObjectParameter("fldComplicationPrice", fldComplicationPrice) :
                new ObjectParameter("fldComplicationPrice", typeof(bool));
    
            var fldFinePriceParameter = fldFinePrice.HasValue ?
                new ObjectParameter("fldFinePrice", fldFinePrice) :
                new ObjectParameter("fldFinePrice", typeof(bool));
    
            var fldValueAddedPriceParameter = fldValueAddedPrice.HasValue ?
                new ObjectParameter("fldValueAddedPrice", fldValueAddedPrice) :
                new ObjectParameter("fldValueAddedPrice", typeof(bool));
    
            var fldOtherPriceParameter = fldOtherPrice.HasValue ?
                new ObjectParameter("fldOtherPrice", fldOtherPrice) :
                new ObjectParameter("fldOtherPrice", typeof(bool));
    
            var fldPercentDiscountParameter = fldPercentDiscount.HasValue ?
                new ObjectParameter("fldPercentDiscount", fldPercentDiscount) :
                new ObjectParameter("fldPercentDiscount", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldTypeCarSeriesParameter = fldTypeCarSeries.HasValue ?
                new ObjectParameter("fldTypeCarSeries", fldTypeCarSeries) :
                new ObjectParameter("fldTypeCarSeries", typeof(int));
    
            var fldCodeCarSeriesParameter = fldCodeCarSeries.HasValue ?
                new ObjectParameter("fldCodeCarSeries", fldCodeCarSeries) :
                new ObjectParameter("fldCodeCarSeries", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldDateOfParameter = fldDateOf.HasValue ?
                new ObjectParameter("fldDateOf", fldDateOf) :
                new ObjectParameter("fldDateOf", typeof(System.DateTime));
    
            var fldEffectiveUserParameter = fldEffectiveUser.HasValue ?
                new ObjectParameter("fldEffectiveUser", fldEffectiveUser) :
                new ObjectParameter("fldEffectiveUser", typeof(bool));
    
            var fldEffectiveOfficeParameter = fldEffectiveOffice.HasValue ?
                new ObjectParameter("fldEffectiveOffice", fldEffectiveOffice) :
                new ObjectParameter("fldEffectiveOffice", typeof(bool));
    
            var fldEffectiveMunicipalityParameter = fldEffectiveMunicipality.HasValue ?
                new ObjectParameter("fldEffectiveMunicipality", fldEffectiveMunicipality) :
                new ObjectParameter("fldEffectiveMunicipality", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DiscountUpdate", fldIDParameter, fldNameParameter, fldStartDateParameter, fldEndDateParameter, fldComplicationPriceParameter, fldFinePriceParameter, fldValueAddedPriceParameter, fldOtherPriceParameter, fldPercentDiscountParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldTypeCarSeriesParameter, fldCodeCarSeriesParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldDateOfParameter, fldEffectiveUserParameter, fldEffectiveOfficeParameter, fldEffectiveMunicipalityParameter);
        }
    
        public virtual int sp_ErrorProgramDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ErrorProgramDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ErrorProgramInsert(ObjectParameter fldID, string fldText, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldDate, string fldUserPass)
        {
            var fldTextParameter = fldText != null ?
                new ObjectParameter("fldText", fldText) :
                new ObjectParameter("fldText", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldDateParameter = fldDate.HasValue ?
                new ObjectParameter("fldDate", fldDate) :
                new ObjectParameter("fldDate", typeof(System.DateTime));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ErrorProgramInsert", fldID, fldTextParameter, fldUserIDParameter, fldDescParameter, fldDateParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ErrorProgramSelect> sp_ErrorProgramSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ErrorProgramSelect>("sp_ErrorProgramSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ErrorProgramUpdate(Nullable<int> fldID, string fldText, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldDate, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldTextParameter = fldText != null ?
                new ObjectParameter("fldText", fldText) :
                new ObjectParameter("fldText", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldDateParameter = fldDate.HasValue ?
                new ObjectParameter("fldDate", fldDate) :
                new ObjectParameter("fldDate", typeof(System.DateTime));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ErrorProgramUpdate", fldIDParameter, fldTextParameter, fldUserIDParameter, fldDescParameter, fldDateParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ExistMafasa> sp_ExistMafasa(Nullable<int> fldCarId, Nullable<int> fldMunId)
        {
            var fldCarIdParameter = fldCarId.HasValue ?
                new ObjectParameter("fldCarId", fldCarId) :
                new ObjectParameter("fldCarId", typeof(int));
    
            var fldMunIdParameter = fldMunId.HasValue ?
                new ObjectParameter("fldMunId", fldMunId) :
                new ObjectParameter("fldMunId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ExistMafasa>("sp_ExistMafasa", fldCarIdParameter, fldMunIdParameter);
        }
    
        public virtual int Sp_FilesDelete(Nullable<int> fldId)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_FilesDelete", fldIdParameter);
        }
    
        public virtual int Sp_FilesInsert(ObjectParameter fldId, byte[] fldImage, Nullable<long> fldUserId, Nullable<bool> fldIsAccept, Nullable<long> fldKarbarTaeed, Nullable<System.DateTime> fldDateAccept)
        {
            var fldImageParameter = fldImage != null ?
                new ObjectParameter("fldImage", fldImage) :
                new ObjectParameter("fldImage", typeof(byte[]));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldIsAcceptParameter = fldIsAccept.HasValue ?
                new ObjectParameter("fldIsAccept", fldIsAccept) :
                new ObjectParameter("fldIsAccept", typeof(bool));
    
            var fldKarbarTaeedParameter = fldKarbarTaeed.HasValue ?
                new ObjectParameter("fldKarbarTaeed", fldKarbarTaeed) :
                new ObjectParameter("fldKarbarTaeed", typeof(long));
    
            var fldDateAcceptParameter = fldDateAccept.HasValue ?
                new ObjectParameter("fldDateAccept", fldDateAccept) :
                new ObjectParameter("fldDateAccept", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_FilesInsert", fldId, fldImageParameter, fldUserIdParameter, fldIsAcceptParameter, fldKarbarTaeedParameter, fldDateAcceptParameter);
        }
    
        public virtual ObjectResult<Sp_FilesSelect> Sp_FilesSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_FilesSelect>("Sp_FilesSelect", idParameter);
        }
    
        public virtual int sp_FilesUpdateAcc(Nullable<int> fldID, Nullable<bool> fldIsAccept, Nullable<long> fldKarbarTaeed, Nullable<System.DateTime> fldDateAccept)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldIsAcceptParameter = fldIsAccept.HasValue ?
                new ObjectParameter("fldIsAccept", fldIsAccept) :
                new ObjectParameter("fldIsAccept", typeof(bool));
    
            var fldKarbarTaeedParameter = fldKarbarTaeed.HasValue ?
                new ObjectParameter("fldKarbarTaeed", fldKarbarTaeed) :
                new ObjectParameter("fldKarbarTaeed", typeof(long));
    
            var fldDateAcceptParameter = fldDateAccept.HasValue ?
                new ObjectParameter("fldDateAccept", fldDateAccept) :
                new ObjectParameter("fldDateAccept", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FilesUpdateAcc", fldIDParameter, fldIsAcceptParameter, fldKarbarTaeedParameter, fldDateAcceptParameter);
        }
    
        public virtual int sp_FinesRule_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FinesRule_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_FinesRuleDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FinesRuleDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_FinesRuleInsert(string fldName, Nullable<System.DateTime> fldImplementationDate, Nullable<double> fldPercentFine, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldImplementationDateParameter = fldImplementationDate.HasValue ?
                new ObjectParameter("fldImplementationDate", fldImplementationDate) :
                new ObjectParameter("fldImplementationDate", typeof(System.DateTime));
    
            var fldPercentFineParameter = fldPercentFine.HasValue ?
                new ObjectParameter("fldPercentFine", fldPercentFine) :
                new ObjectParameter("fldPercentFine", typeof(double));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FinesRuleInsert", fldNameParameter, fldImplementationDateParameter, fldPercentFineParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_FinesRuleSelect> sp_FinesRuleSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_FinesRuleSelect>("sp_FinesRuleSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_FinesRuleUpdate(Nullable<int> fldID, string fldName, Nullable<System.DateTime> fldImplementationDate, Nullable<double> fldPercentFine, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldImplementationDateParameter = fldImplementationDate.HasValue ?
                new ObjectParameter("fldImplementationDate", fldImplementationDate) :
                new ObjectParameter("fldImplementationDate", typeof(System.DateTime));
    
            var fldPercentFineParameter = fldPercentFine.HasValue ?
                new ObjectParameter("fldPercentFine", fldPercentFine) :
                new ObjectParameter("fldPercentFine", typeof(double));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FinesRuleUpdate", fldIDParameter, fldNameParameter, fldImplementationDateParameter, fldPercentFineParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ForgetPass_VerifyInsert(string fldVerifyCode, Nullable<bool> fldActive_Deactive, Nullable<long> fldUserId, string fldDesc)
        {
            var fldVerifyCodeParameter = fldVerifyCode != null ?
                new ObjectParameter("fldVerifyCode", fldVerifyCode) :
                new ObjectParameter("fldVerifyCode", typeof(string));
    
            var fldActive_DeactiveParameter = fldActive_Deactive.HasValue ?
                new ObjectParameter("fldActive_Deactive", fldActive_Deactive) :
                new ObjectParameter("fldActive_Deactive", typeof(bool));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ForgetPass_VerifyInsert", fldVerifyCodeParameter, fldActive_DeactiveParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_ForgetPass_VerifySelect> sp_ForgetPass_VerifySelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ForgetPass_VerifySelect>("sp_ForgetPass_VerifySelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_ForgetPass_VerifyUpdate(Nullable<int> fldId)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ForgetPass_VerifyUpdate", fldIdParameter);
        }
    
        public virtual ObjectResult<sp_Friends_LogSelect> sp_Friends_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Friends_LogSelect>("sp_Friends_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_FriendsDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FriendsDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_FriendsInsert(Nullable<long> fldUser, Nullable<long> fldFriends, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldDate, string fldUserPass)
        {
            var fldUserParameter = fldUser.HasValue ?
                new ObjectParameter("fldUser", fldUser) :
                new ObjectParameter("fldUser", typeof(long));
    
            var fldFriendsParameter = fldFriends.HasValue ?
                new ObjectParameter("fldFriends", fldFriends) :
                new ObjectParameter("fldFriends", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldDateParameter = fldDate.HasValue ?
                new ObjectParameter("fldDate", fldDate) :
                new ObjectParameter("fldDate", typeof(System.DateTime));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FriendsInsert", fldUserParameter, fldFriendsParameter, fldUserIDParameter, fldDescParameter, fldDateParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_FriendsSelect> sp_FriendsSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_FriendsSelect>("sp_FriendsSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_FriendsUpdate(Nullable<int> fldID, Nullable<long> fldUser, Nullable<long> fldFriends, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldDate, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserParameter = fldUser.HasValue ?
                new ObjectParameter("fldUser", fldUser) :
                new ObjectParameter("fldUser", typeof(long));
    
            var fldFriendsParameter = fldFriends.HasValue ?
                new ObjectParameter("fldFriends", fldFriends) :
                new ObjectParameter("fldFriends", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldDateParameter = fldDate.HasValue ?
                new ObjectParameter("fldDate", fldDate) :
                new ObjectParameter("fldDate", typeof(System.DateTime));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FriendsUpdate", fldIDParameter, fldUserParameter, fldFriendsParameter, fldUserIDParameter, fldDescParameter, fldDateParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_FuelType_LogSelect> sp_FuelType_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_FuelType_LogSelect>("sp_FuelType_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_FuelTypeDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FuelTypeDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_FuelTypeInsert(string fldType, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldTypeParameter = fldType != null ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FuelTypeInsert", fldTypeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_FuelTypeSelect> sp_FuelTypeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_FuelTypeSelect>("sp_FuelTypeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_FuelTypeUpdate(Nullable<int> fldID, string fldType, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldTypeParameter = fldType != null ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FuelTypeUpdate", fldIDParameter, fldTypeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_GET_IDCarSeries> sp_GET_IDCarSeries(Nullable<int> type, Nullable<int> code)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GET_IDCarSeries>("sp_GET_IDCarSeries", typeParameter, codeParameter);
        }
    
        public virtual ObjectResult<sp_GET_IDCountryDivisions> sp_GET_IDCountryDivisions(Nullable<int> type, Nullable<int> code)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GET_IDCountryDivisions>("sp_GET_IDCountryDivisions", typeParameter, codeParameter);
        }
    
        public virtual int sp_GET_TypeAndCodeCountryDivisions(Nullable<long> iD, ObjectParameter type, ObjectParameter code)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GET_TypeAndCodeCountryDivisions", iDParameter, type, code);
        }
    
        public virtual ObjectResult<sp_GetAllShenaseGhabzInfo> sp_GetAllShenaseGhabzInfo(Nullable<int> munId)
        {
            var munIdParameter = munId.HasValue ?
                new ObjectParameter("munId", munId) :
                new ObjectParameter("munId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllShenaseGhabzInfo>("sp_GetAllShenaseGhabzInfo", munIdParameter);
        }
    
        public virtual ObjectResult<sp_GetBankPcPos> sp_GetBankPcPos(Nullable<int> type, Nullable<int> code)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetBankPcPos>("sp_GetBankPcPos", typeParameter, codeParameter);
        }
    
        public virtual int sp_GetBedehKar(Nullable<byte> countryType, Nullable<int> countryCode, Nullable<int> treeId)
        {
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("CountryType", countryType) :
                new ObjectParameter("CountryType", typeof(byte));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(int));
    
            var treeIdParameter = treeId.HasValue ?
                new ObjectParameter("TreeId", treeId) :
                new ObjectParameter("TreeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetBedehKar", countryTypeParameter, countryCodeParameter, treeIdParameter);
        }
    
        public virtual ObjectResult<sp_getBedehkaranList> sp_getBedehkaranList(Nullable<byte> countryType, Nullable<int> countryCode, Nullable<int> treeId)
        {
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("CountryType", countryType) :
                new ObjectParameter("CountryType", typeof(byte));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(int));
    
            var treeIdParameter = treeId.HasValue ?
                new ObjectParameter("TreeId", treeId) :
                new ObjectParameter("TreeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getBedehkaranList>("sp_getBedehkaranList", countryTypeParameter, countryCodeParameter, treeIdParameter);
        }
    
        public virtual ObjectResult<string> sp_GetClassForWebService(string carMakeType, string carAccountType, string carCabin, string carSystem, string carTip, string carClass)
        {
            var carMakeTypeParameter = carMakeType != null ?
                new ObjectParameter("CarMakeType", carMakeType) :
                new ObjectParameter("CarMakeType", typeof(string));
    
            var carAccountTypeParameter = carAccountType != null ?
                new ObjectParameter("CarAccountType", carAccountType) :
                new ObjectParameter("CarAccountType", typeof(string));
    
            var carCabinParameter = carCabin != null ?
                new ObjectParameter("CarCabin", carCabin) :
                new ObjectParameter("CarCabin", typeof(string));
    
            var carSystemParameter = carSystem != null ?
                new ObjectParameter("CarSystem", carSystem) :
                new ObjectParameter("CarSystem", typeof(string));
    
            var carTipParameter = carTip != null ?
                new ObjectParameter("CarTip", carTip) :
                new ObjectParameter("CarTip", typeof(string));
    
            var carClassParameter = carClass != null ?
                new ObjectParameter("CarClass", carClass) :
                new ObjectParameter("CarClass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetClassForWebService", carMakeTypeParameter, carAccountTypeParameter, carCabinParameter, carSystemParameter, carTipParameter, carClassParameter);
        }
    
        public virtual ObjectResult<sp_GetCountryDivForWebService> sp_GetCountryDivForWebService(string state, string county, string zone, string city, string mun)
        {
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countyParameter = county != null ?
                new ObjectParameter("County", county) :
                new ObjectParameter("County", typeof(string));
    
            var zoneParameter = zone != null ?
                new ObjectParameter("zone", zone) :
                new ObjectParameter("zone", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var munParameter = mun != null ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCountryDivForWebService>("sp_GetCountryDivForWebService", stateParameter, countyParameter, zoneParameter, cityParameter, munParameter);
        }
    
        public virtual ObjectResult<sp_GetDate> sp_GetDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDate>("sp_GetDate");
        }
    
        public virtual ObjectResult<sp_GetFishWithShGhabz> sp_GetFishWithShGhabz(string shGhabz, string shPardakht)
        {
            var shGhabzParameter = shGhabz != null ?
                new ObjectParameter("shGhabz", shGhabz) :
                new ObjectParameter("shGhabz", typeof(string));
    
            var shPardakhtParameter = shPardakht != null ?
                new ObjectParameter("shPardakht", shPardakht) :
                new ObjectParameter("shPardakht", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetFishWithShGhabz>("sp_GetFishWithShGhabz", shGhabzParameter, shPardakhtParameter);
        }
    
        public virtual ObjectResult<sp_GetNotVerifiedCarExperience> sp_GetNotVerifiedCarExperience(Nullable<int> nodeType, Nullable<int> sourceID)
        {
            var nodeTypeParameter = nodeType.HasValue ?
                new ObjectParameter("NodeType", nodeType) :
                new ObjectParameter("NodeType", typeof(int));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("SourceID", sourceID) :
                new ObjectParameter("SourceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetNotVerifiedCarExperience>("sp_GetNotVerifiedCarExperience", nodeTypeParameter, sourceIDParameter);
        }
    
        public virtual ObjectResult<sp_GetRateForWebService> sp_GetRateForWebService(Nullable<int> fromYear, Nullable<int> toYear, string carMakeType, string carAccountType, string carCabin, string carSystem, string carTip, string carClass)
        {
            var fromYearParameter = fromYear.HasValue ?
                new ObjectParameter("fromYear", fromYear) :
                new ObjectParameter("fromYear", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("toYear", toYear) :
                new ObjectParameter("toYear", typeof(int));
    
            var carMakeTypeParameter = carMakeType != null ?
                new ObjectParameter("CarMakeType", carMakeType) :
                new ObjectParameter("CarMakeType", typeof(string));
    
            var carAccountTypeParameter = carAccountType != null ?
                new ObjectParameter("CarAccountType", carAccountType) :
                new ObjectParameter("CarAccountType", typeof(string));
    
            var carCabinParameter = carCabin != null ?
                new ObjectParameter("CarCabin", carCabin) :
                new ObjectParameter("CarCabin", typeof(string));
    
            var carSystemParameter = carSystem != null ?
                new ObjectParameter("CarSystem", carSystem) :
                new ObjectParameter("CarSystem", typeof(string));
    
            var carTipParameter = carTip != null ?
                new ObjectParameter("CarTip", carTip) :
                new ObjectParameter("CarTip", typeof(string));
    
            var carClassParameter = carClass != null ?
                new ObjectParameter("CarClass", carClass) :
                new ObjectParameter("CarClass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetRateForWebService>("sp_GetRateForWebService", fromYearParameter, toYearParameter, carMakeTypeParameter, carAccountTypeParameter, carCabinParameter, carSystemParameter, carTipParameter, carClassParameter);
        }
    
        public virtual int sp_GuestUserDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuestUserDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_GuestUserInsert(string fldMobile, string fldNationalCode, string fldAcceptCode, string fldPassword, Nullable<bool> fldFlag, Nullable<bool> fldType, Nullable<int> fldMunId, Nullable<int> fldStateId, string fldTarikhTavalod, string fldDesc, string fldName, string fldFatherName, string fldSerialShenasname, string fldSh_Shenasname, string fldMahalSodoor)
        {
            var fldMobileParameter = fldMobile != null ?
                new ObjectParameter("fldMobile", fldMobile) :
                new ObjectParameter("fldMobile", typeof(string));
    
            var fldNationalCodeParameter = fldNationalCode != null ?
                new ObjectParameter("fldNationalCode", fldNationalCode) :
                new ObjectParameter("fldNationalCode", typeof(string));
    
            var fldAcceptCodeParameter = fldAcceptCode != null ?
                new ObjectParameter("fldAcceptCode", fldAcceptCode) :
                new ObjectParameter("fldAcceptCode", typeof(string));
    
            var fldPasswordParameter = fldPassword != null ?
                new ObjectParameter("fldPassword", fldPassword) :
                new ObjectParameter("fldPassword", typeof(string));
    
            var fldFlagParameter = fldFlag.HasValue ?
                new ObjectParameter("fldFlag", fldFlag) :
                new ObjectParameter("fldFlag", typeof(bool));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(bool));
    
            var fldMunIdParameter = fldMunId.HasValue ?
                new ObjectParameter("fldMunId", fldMunId) :
                new ObjectParameter("fldMunId", typeof(int));
    
            var fldStateIdParameter = fldStateId.HasValue ?
                new ObjectParameter("fldStateId", fldStateId) :
                new ObjectParameter("fldStateId", typeof(int));
    
            var fldTarikhTavalodParameter = fldTarikhTavalod != null ?
                new ObjectParameter("fldTarikhTavalod", fldTarikhTavalod) :
                new ObjectParameter("fldTarikhTavalod", typeof(string));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldFatherNameParameter = fldFatherName != null ?
                new ObjectParameter("fldFatherName", fldFatherName) :
                new ObjectParameter("fldFatherName", typeof(string));
    
            var fldSerialShenasnameParameter = fldSerialShenasname != null ?
                new ObjectParameter("fldSerialShenasname", fldSerialShenasname) :
                new ObjectParameter("fldSerialShenasname", typeof(string));
    
            var fldSh_ShenasnameParameter = fldSh_Shenasname != null ?
                new ObjectParameter("fldSh_Shenasname", fldSh_Shenasname) :
                new ObjectParameter("fldSh_Shenasname", typeof(string));
    
            var fldMahalSodoorParameter = fldMahalSodoor != null ?
                new ObjectParameter("fldMahalSodoor", fldMahalSodoor) :
                new ObjectParameter("fldMahalSodoor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuestUserInsert", fldMobileParameter, fldNationalCodeParameter, fldAcceptCodeParameter, fldPasswordParameter, fldFlagParameter, fldTypeParameter, fldMunIdParameter, fldStateIdParameter, fldTarikhTavalodParameter, fldDescParameter, fldNameParameter, fldFatherNameParameter, fldSerialShenasnameParameter, fldSh_ShenasnameParameter, fldMahalSodoorParameter);
        }
    
        public virtual int sp_GuestUserPassword(Nullable<int> fldId, string password, Nullable<bool> fldFlag)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var fldFlagParameter = fldFlag.HasValue ?
                new ObjectParameter("fldFlag", fldFlag) :
                new ObjectParameter("fldFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuestUserPassword", fldIdParameter, passwordParameter, fldFlagParameter);
        }
    
        public virtual ObjectResult<sp_GuestUserSelect> sp_GuestUserSelect(string fieldname, string value, string value2, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var value2Parameter = value2 != null ?
                new ObjectParameter("Value2", value2) :
                new ObjectParameter("Value2", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GuestUserSelect>("sp_GuestUserSelect", fieldnameParameter, valueParameter, value2Parameter, hParameter);
        }
    
        public virtual int sp_GuestUserUpdate(Nullable<int> fldId, string fldMobile, string fldNationalCode, string fldAcceptCode, Nullable<bool> fldFlag, Nullable<bool> fldType, Nullable<int> fldMunId, Nullable<int> fldStateId, string fldTarikhTavalod, string fldDesc, string fldName, string fldFatherName, string fldSerialShenasname, string fldSh_Shenasname, string fldMahalSodoor)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldMobileParameter = fldMobile != null ?
                new ObjectParameter("fldMobile", fldMobile) :
                new ObjectParameter("fldMobile", typeof(string));
    
            var fldNationalCodeParameter = fldNationalCode != null ?
                new ObjectParameter("fldNationalCode", fldNationalCode) :
                new ObjectParameter("fldNationalCode", typeof(string));
    
            var fldAcceptCodeParameter = fldAcceptCode != null ?
                new ObjectParameter("fldAcceptCode", fldAcceptCode) :
                new ObjectParameter("fldAcceptCode", typeof(string));
    
            var fldFlagParameter = fldFlag.HasValue ?
                new ObjectParameter("fldFlag", fldFlag) :
                new ObjectParameter("fldFlag", typeof(bool));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(bool));
    
            var fldMunIdParameter = fldMunId.HasValue ?
                new ObjectParameter("fldMunId", fldMunId) :
                new ObjectParameter("fldMunId", typeof(int));
    
            var fldStateIdParameter = fldStateId.HasValue ?
                new ObjectParameter("fldStateId", fldStateId) :
                new ObjectParameter("fldStateId", typeof(int));
    
            var fldTarikhTavalodParameter = fldTarikhTavalod != null ?
                new ObjectParameter("fldTarikhTavalod", fldTarikhTavalod) :
                new ObjectParameter("fldTarikhTavalod", typeof(string));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldFatherNameParameter = fldFatherName != null ?
                new ObjectParameter("fldFatherName", fldFatherName) :
                new ObjectParameter("fldFatherName", typeof(string));
    
            var fldSerialShenasnameParameter = fldSerialShenasname != null ?
                new ObjectParameter("fldSerialShenasname", fldSerialShenasname) :
                new ObjectParameter("fldSerialShenasname", typeof(string));
    
            var fldSh_ShenasnameParameter = fldSh_Shenasname != null ?
                new ObjectParameter("fldSh_Shenasname", fldSh_Shenasname) :
                new ObjectParameter("fldSh_Shenasname", typeof(string));
    
            var fldMahalSodoorParameter = fldMahalSodoor != null ?
                new ObjectParameter("fldMahalSodoor", fldMahalSodoor) :
                new ObjectParameter("fldMahalSodoor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuestUserUpdate", fldIdParameter, fldMobileParameter, fldNationalCodeParameter, fldAcceptCodeParameter, fldFlagParameter, fldTypeParameter, fldMunIdParameter, fldStateIdParameter, fldTarikhTavalodParameter, fldDescParameter, fldNameParameter, fldFatherNameParameter, fldSerialShenasnameParameter, fldSh_ShenasnameParameter, fldMahalSodoorParameter);
        }
    
        public virtual ObjectResult<sp_ImplementationFinesRule_LogSelect> sp_ImplementationFinesRule_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ImplementationFinesRule_LogSelect>("sp_ImplementationFinesRule_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ImplementationFinesRuleDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ImplementationFinesRuleDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ImplementationFinesRuleInsert(Nullable<int> fldFinesRuleID, Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<long> fldUserID, string fldDesc, Nullable<bool> fldCarSeriesTreeApply, Nullable<bool> fldCountryDivisionsTreeApply, string fldUserPass)
        {
            var fldFinesRuleIDParameter = fldFinesRuleID.HasValue ?
                new ObjectParameter("fldFinesRuleID", fldFinesRuleID) :
                new ObjectParameter("fldFinesRuleID", typeof(int));
    
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldCarSeriesTreeApplyParameter = fldCarSeriesTreeApply.HasValue ?
                new ObjectParameter("fldCarSeriesTreeApply", fldCarSeriesTreeApply) :
                new ObjectParameter("fldCarSeriesTreeApply", typeof(bool));
    
            var fldCountryDivisionsTreeApplyParameter = fldCountryDivisionsTreeApply.HasValue ?
                new ObjectParameter("fldCountryDivisionsTreeApply", fldCountryDivisionsTreeApply) :
                new ObjectParameter("fldCountryDivisionsTreeApply", typeof(bool));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ImplementationFinesRuleInsert", fldFinesRuleIDParameter, fldTypeCarParameter, fldCodeCarParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldUserIDParameter, fldDescParameter, fldCarSeriesTreeApplyParameter, fldCountryDivisionsTreeApplyParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ImplementationFinesRuleSelect> sp_ImplementationFinesRuleSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ImplementationFinesRuleSelect>("sp_ImplementationFinesRuleSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ImplementationFinesRuleUpdate(Nullable<int> fldID, Nullable<int> fldFinesRuleID, Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<long> fldUserID, string fldDesc, Nullable<bool> fldCarSeriesTreeApply, Nullable<bool> fldCountryDivisionsTreeApply, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldFinesRuleIDParameter = fldFinesRuleID.HasValue ?
                new ObjectParameter("fldFinesRuleID", fldFinesRuleID) :
                new ObjectParameter("fldFinesRuleID", typeof(int));
    
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldCarSeriesTreeApplyParameter = fldCarSeriesTreeApply.HasValue ?
                new ObjectParameter("fldCarSeriesTreeApply", fldCarSeriesTreeApply) :
                new ObjectParameter("fldCarSeriesTreeApply", typeof(bool));
    
            var fldCountryDivisionsTreeApplyParameter = fldCountryDivisionsTreeApply.HasValue ?
                new ObjectParameter("fldCountryDivisionsTreeApply", fldCountryDivisionsTreeApply) :
                new ObjectParameter("fldCountryDivisionsTreeApply", typeof(bool));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ImplementationFinesRuleUpdate", fldIDParameter, fldFinesRuleIDParameter, fldTypeCarParameter, fldCodeCarParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldUserIDParameter, fldDescParameter, fldCarSeriesTreeApplyParameter, fldCountryDivisionsTreeApplyParameter, fldUserPassParameter);
        }
    
        public virtual int sp_INSERT_IDCarSeries(Nullable<int> type, Nullable<int> code, Nullable<int> fldUserID, ObjectParameter iD)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_INSERT_IDCarSeries", typeParameter, codeParameter, fldUserIDParameter, iD);
        }
    
        public virtual int sp_INSERT_IDCountryDivisions(Nullable<int> type, Nullable<int> code, Nullable<int> fldUserID, ObjectParameter iD)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_INSERT_IDCountryDivisions", typeParameter, codeParameter, fldUserIDParameter, iD);
        }
    
        public virtual int sp_InsertCar_CarFile(ObjectParameter fldId, string fldMotorNumber, string fldShasiNumber, string fldVIN, Nullable<int> fldCarModelID, Nullable<int> fldCarClassID, Nullable<int> fldCarColorID, Nullable<short> fldModel, Nullable<System.DateTime> fldStartDateInsurance, string fldDescCar, Nullable<int> fldCarPlaqueID, Nullable<System.DateTime> fldDatePlaque, Nullable<long> fldUserID, string fldDescCarFile, string fldUserPass, Nullable<int> fldBargSabzFileId, Nullable<int> fldCartFileId, Nullable<int> fldSanadForoshFileId, Nullable<int> fldCartBackFileId, Nullable<bool> fldAccept, Nullable<int> fldAcceptUser, Nullable<System.DateTime> fldAcceptDate, Nullable<bool> fldTypeEntezami, Nullable<bool> fldMotabeghBaShasi, ObjectParameter carfileid)
        {
            var fldMotorNumberParameter = fldMotorNumber != null ?
                new ObjectParameter("fldMotorNumber", fldMotorNumber) :
                new ObjectParameter("fldMotorNumber", typeof(string));
    
            var fldShasiNumberParameter = fldShasiNumber != null ?
                new ObjectParameter("fldShasiNumber", fldShasiNumber) :
                new ObjectParameter("fldShasiNumber", typeof(string));
    
            var fldVINParameter = fldVIN != null ?
                new ObjectParameter("fldVIN", fldVIN) :
                new ObjectParameter("fldVIN", typeof(string));
    
            var fldCarModelIDParameter = fldCarModelID.HasValue ?
                new ObjectParameter("fldCarModelID", fldCarModelID) :
                new ObjectParameter("fldCarModelID", typeof(int));
    
            var fldCarClassIDParameter = fldCarClassID.HasValue ?
                new ObjectParameter("fldCarClassID", fldCarClassID) :
                new ObjectParameter("fldCarClassID", typeof(int));
    
            var fldCarColorIDParameter = fldCarColorID.HasValue ?
                new ObjectParameter("fldCarColorID", fldCarColorID) :
                new ObjectParameter("fldCarColorID", typeof(int));
    
            var fldModelParameter = fldModel.HasValue ?
                new ObjectParameter("fldModel", fldModel) :
                new ObjectParameter("fldModel", typeof(short));
    
            var fldStartDateInsuranceParameter = fldStartDateInsurance.HasValue ?
                new ObjectParameter("fldStartDateInsurance", fldStartDateInsurance) :
                new ObjectParameter("fldStartDateInsurance", typeof(System.DateTime));
    
            var fldDescCarParameter = fldDescCar != null ?
                new ObjectParameter("fldDescCar", fldDescCar) :
                new ObjectParameter("fldDescCar", typeof(string));
    
            var fldCarPlaqueIDParameter = fldCarPlaqueID.HasValue ?
                new ObjectParameter("fldCarPlaqueID", fldCarPlaqueID) :
                new ObjectParameter("fldCarPlaqueID", typeof(int));
    
            var fldDatePlaqueParameter = fldDatePlaque.HasValue ?
                new ObjectParameter("fldDatePlaque", fldDatePlaque) :
                new ObjectParameter("fldDatePlaque", typeof(System.DateTime));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescCarFileParameter = fldDescCarFile != null ?
                new ObjectParameter("fldDescCarFile", fldDescCarFile) :
                new ObjectParameter("fldDescCarFile", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldBargSabzFileIdParameter = fldBargSabzFileId.HasValue ?
                new ObjectParameter("fldBargSabzFileId", fldBargSabzFileId) :
                new ObjectParameter("fldBargSabzFileId", typeof(int));
    
            var fldCartFileIdParameter = fldCartFileId.HasValue ?
                new ObjectParameter("fldCartFileId", fldCartFileId) :
                new ObjectParameter("fldCartFileId", typeof(int));
    
            var fldSanadForoshFileIdParameter = fldSanadForoshFileId.HasValue ?
                new ObjectParameter("fldSanadForoshFileId", fldSanadForoshFileId) :
                new ObjectParameter("fldSanadForoshFileId", typeof(int));
    
            var fldCartBackFileIdParameter = fldCartBackFileId.HasValue ?
                new ObjectParameter("fldCartBackFileId", fldCartBackFileId) :
                new ObjectParameter("fldCartBackFileId", typeof(int));
    
            var fldAcceptParameter = fldAccept.HasValue ?
                new ObjectParameter("fldAccept", fldAccept) :
                new ObjectParameter("fldAccept", typeof(bool));
    
            var fldAcceptUserParameter = fldAcceptUser.HasValue ?
                new ObjectParameter("fldAcceptUser", fldAcceptUser) :
                new ObjectParameter("fldAcceptUser", typeof(int));
    
            var fldAcceptDateParameter = fldAcceptDate.HasValue ?
                new ObjectParameter("fldAcceptDate", fldAcceptDate) :
                new ObjectParameter("fldAcceptDate", typeof(System.DateTime));
    
            var fldTypeEntezamiParameter = fldTypeEntezami.HasValue ?
                new ObjectParameter("fldTypeEntezami", fldTypeEntezami) :
                new ObjectParameter("fldTypeEntezami", typeof(bool));
    
            var fldMotabeghBaShasiParameter = fldMotabeghBaShasi.HasValue ?
                new ObjectParameter("fldMotabeghBaShasi", fldMotabeghBaShasi) :
                new ObjectParameter("fldMotabeghBaShasi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCar_CarFile", fldId, fldMotorNumberParameter, fldShasiNumberParameter, fldVINParameter, fldCarModelIDParameter, fldCarClassIDParameter, fldCarColorIDParameter, fldModelParameter, fldStartDateInsuranceParameter, fldDescCarParameter, fldCarPlaqueIDParameter, fldDatePlaqueParameter, fldUserIDParameter, fldDescCarFileParameter, fldUserPassParameter, fldBargSabzFileIdParameter, fldCartFileIdParameter, fldSanadForoshFileIdParameter, fldCartBackFileIdParameter, fldAcceptParameter, fldAcceptUserParameter, fldAcceptDateParameter, fldTypeEntezamiParameter, fldMotabeghBaShasiParameter, carfileid);
        }
    
        public virtual int sp_InsertOwner_CarPlaque(string fldName, string fldMelli_EconomicCode, Nullable<byte> fldOwnerType, string fldEmail, string fldMobile, string fldAddress, string fldPostalCode, Nullable<bool> fldType, Nullable<System.DateTime> fldTarikh, string fldPlaqueNumber, Nullable<int> fldPlaqueCityID, Nullable<int> fldPlaqueSerialID, Nullable<int> fldPlaqueTypeID, Nullable<int> fldCharacterPersianPlaqueID, Nullable<int> fldStatusPlaqeID, string fldDesc, Nullable<long> fldUserID, string fldUserPass, string fldDescPelaqe)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldMelli_EconomicCodeParameter = fldMelli_EconomicCode != null ?
                new ObjectParameter("fldMelli_EconomicCode", fldMelli_EconomicCode) :
                new ObjectParameter("fldMelli_EconomicCode", typeof(string));
    
            var fldOwnerTypeParameter = fldOwnerType.HasValue ?
                new ObjectParameter("fldOwnerType", fldOwnerType) :
                new ObjectParameter("fldOwnerType", typeof(byte));
    
            var fldEmailParameter = fldEmail != null ?
                new ObjectParameter("fldEmail", fldEmail) :
                new ObjectParameter("fldEmail", typeof(string));
    
            var fldMobileParameter = fldMobile != null ?
                new ObjectParameter("fldMobile", fldMobile) :
                new ObjectParameter("fldMobile", typeof(string));
    
            var fldAddressParameter = fldAddress != null ?
                new ObjectParameter("fldAddress", fldAddress) :
                new ObjectParameter("fldAddress", typeof(string));
    
            var fldPostalCodeParameter = fldPostalCode != null ?
                new ObjectParameter("fldPostalCode", fldPostalCode) :
                new ObjectParameter("fldPostalCode", typeof(string));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(bool));
    
            var fldTarikhParameter = fldTarikh.HasValue ?
                new ObjectParameter("fldTarikh", fldTarikh) :
                new ObjectParameter("fldTarikh", typeof(System.DateTime));
    
            var fldPlaqueNumberParameter = fldPlaqueNumber != null ?
                new ObjectParameter("fldPlaqueNumber", fldPlaqueNumber) :
                new ObjectParameter("fldPlaqueNumber", typeof(string));
    
            var fldPlaqueCityIDParameter = fldPlaqueCityID.HasValue ?
                new ObjectParameter("fldPlaqueCityID", fldPlaqueCityID) :
                new ObjectParameter("fldPlaqueCityID", typeof(int));
    
            var fldPlaqueSerialIDParameter = fldPlaqueSerialID.HasValue ?
                new ObjectParameter("fldPlaqueSerialID", fldPlaqueSerialID) :
                new ObjectParameter("fldPlaqueSerialID", typeof(int));
    
            var fldPlaqueTypeIDParameter = fldPlaqueTypeID.HasValue ?
                new ObjectParameter("fldPlaqueTypeID", fldPlaqueTypeID) :
                new ObjectParameter("fldPlaqueTypeID", typeof(int));
    
            var fldCharacterPersianPlaqueIDParameter = fldCharacterPersianPlaqueID.HasValue ?
                new ObjectParameter("fldCharacterPersianPlaqueID", fldCharacterPersianPlaqueID) :
                new ObjectParameter("fldCharacterPersianPlaqueID", typeof(int));
    
            var fldStatusPlaqeIDParameter = fldStatusPlaqeID.HasValue ?
                new ObjectParameter("fldStatusPlaqeID", fldStatusPlaqeID) :
                new ObjectParameter("fldStatusPlaqeID", typeof(int));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldDescPelaqeParameter = fldDescPelaqe != null ?
                new ObjectParameter("fldDescPelaqe", fldDescPelaqe) :
                new ObjectParameter("fldDescPelaqe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertOwner_CarPlaque", fldNameParameter, fldMelli_EconomicCodeParameter, fldOwnerTypeParameter, fldEmailParameter, fldMobileParameter, fldAddressParameter, fldPostalCodeParameter, fldTypeParameter, fldTarikhParameter, fldPlaqueNumberParameter, fldPlaqueCityIDParameter, fldPlaqueSerialIDParameter, fldPlaqueTypeIDParameter, fldCharacterPersianPlaqueIDParameter, fldStatusPlaqeIDParameter, fldDescParameter, fldUserIDParameter, fldUserPassParameter, fldDescPelaqeParameter);
        }
    
        public virtual ObjectResult<sp_jCalcCarFile> sp_jCalcCarFile(Nullable<int> carfileId, Nullable<int> countryType, Nullable<int> countryCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> calcDate, Nullable<int> userId, ObjectParameter nullYears, ObjectParameter bed)
        {
            var carfileIdParameter = carfileId.HasValue ?
                new ObjectParameter("CarfileId", carfileId) :
                new ObjectParameter("CarfileId", typeof(int));
    
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("countryType", countryType) :
                new ObjectParameter("countryType", typeof(int));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var calcDateParameter = calcDate.HasValue ?
                new ObjectParameter("calcDate", calcDate) :
                new ObjectParameter("calcDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jCalcCarFile>("sp_jCalcCarFile", carfileIdParameter, countryTypeParameter, countryCodeParameter, startDateParameter, endDateParameter, calcDateParameter, userIdParameter, nullYears, bed);
        }
    
        public virtual ObjectResult<sp_jCalcCarFile_New> sp_jCalcCarFile_New(Nullable<int> carfileId, Nullable<int> countryType, Nullable<int> countryCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> calcDate, Nullable<int> userId, ObjectParameter nullYears, ObjectParameter bed)
        {
            var carfileIdParameter = carfileId.HasValue ?
                new ObjectParameter("CarfileId", carfileId) :
                new ObjectParameter("CarfileId", typeof(int));
    
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("countryType", countryType) :
                new ObjectParameter("countryType", typeof(int));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var calcDateParameter = calcDate.HasValue ?
                new ObjectParameter("calcDate", calcDate) :
                new ObjectParameter("calcDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jCalcCarFile_New>("sp_jCalcCarFile_New", carfileIdParameter, countryTypeParameter, countryCodeParameter, startDateParameter, endDateParameter, calcDateParameter, userIdParameter, nullYears, bed);
        }
    
        public virtual ObjectResult<sp_jCalcCarFile_Report> sp_jCalcCarFile_Report(Nullable<int> carfileId, Nullable<int> countryType, Nullable<int> countryCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> calcDate, Nullable<int> userId)
        {
            var carfileIdParameter = carfileId.HasValue ?
                new ObjectParameter("CarfileId", carfileId) :
                new ObjectParameter("CarfileId", typeof(int));
    
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("countryType", countryType) :
                new ObjectParameter("countryType", typeof(int));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var calcDateParameter = calcDate.HasValue ?
                new ObjectParameter("calcDate", calcDate) :
                new ObjectParameter("calcDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jCalcCarFile_Report>("sp_jCalcCarFile_Report", carfileIdParameter, countryTypeParameter, countryCodeParameter, startDateParameter, endDateParameter, calcDateParameter, userIdParameter);
        }
    
        public virtual ObjectResult<sp_jCalcCarFile_test> sp_jCalcCarFile_test(Nullable<int> carfileId, Nullable<int> countryType, Nullable<int> countryCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> calcDate, Nullable<int> userId, ObjectParameter nullYears, ObjectParameter bed)
        {
            var carfileIdParameter = carfileId.HasValue ?
                new ObjectParameter("CarfileId", carfileId) :
                new ObjectParameter("CarfileId", typeof(int));
    
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("countryType", countryType) :
                new ObjectParameter("countryType", typeof(int));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var calcDateParameter = calcDate.HasValue ?
                new ObjectParameter("calcDate", calcDate) :
                new ObjectParameter("calcDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jCalcCarFile_test>("sp_jCalcCarFile_test", carfileIdParameter, countryTypeParameter, countryCodeParameter, startDateParameter, endDateParameter, calcDateParameter, userIdParameter, nullYears, bed);
        }
    
        public virtual ObjectResult<sp_jCalcCarFile_test1> sp_jCalcCarFile_test1(Nullable<int> carfileId, Nullable<int> countryType, Nullable<int> countryCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> calcDate, Nullable<int> userId, ObjectParameter nullYears, ObjectParameter bed)
        {
            var carfileIdParameter = carfileId.HasValue ?
                new ObjectParameter("CarfileId", carfileId) :
                new ObjectParameter("CarfileId", typeof(int));
    
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("countryType", countryType) :
                new ObjectParameter("countryType", typeof(int));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var calcDateParameter = calcDate.HasValue ?
                new ObjectParameter("calcDate", calcDate) :
                new ObjectParameter("calcDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jCalcCarFile_test1>("sp_jCalcCarFile_test1", carfileIdParameter, countryTypeParameter, countryCodeParameter, startDateParameter, endDateParameter, calcDateParameter, userIdParameter, nullYears, bed);
        }
    
        public virtual ObjectResult<sp_jCalcSingleBaze> sp_jCalcSingleBaze(Nullable<int> carType, Nullable<int> carCode, Nullable<int> countryType, Nullable<int> countryCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> firstBimeDate, Nullable<System.DateTime> calcDate, Nullable<int> carModel, ObjectParameter nullYears)
        {
            var carTypeParameter = carType.HasValue ?
                new ObjectParameter("carType", carType) :
                new ObjectParameter("carType", typeof(int));
    
            var carCodeParameter = carCode.HasValue ?
                new ObjectParameter("carCode", carCode) :
                new ObjectParameter("carCode", typeof(int));
    
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("countryType", countryType) :
                new ObjectParameter("countryType", typeof(int));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var firstBimeDateParameter = firstBimeDate.HasValue ?
                new ObjectParameter("FirstBimeDate", firstBimeDate) :
                new ObjectParameter("FirstBimeDate", typeof(System.DateTime));
    
            var calcDateParameter = calcDate.HasValue ?
                new ObjectParameter("calcDate", calcDate) :
                new ObjectParameter("calcDate", typeof(System.DateTime));
    
            var carModelParameter = carModel.HasValue ?
                new ObjectParameter("carModel", carModel) :
                new ObjectParameter("carModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jCalcSingleBaze>("sp_jCalcSingleBaze", carTypeParameter, carCodeParameter, countryTypeParameter, countryCodeParameter, startDateParameter, endDateParameter, firstBimeDateParameter, calcDateParameter, carModelParameter, nullYears);
        }
    
        public virtual ObjectResult<sp_KolParvandeHa> sp_KolParvandeHa(Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_KolParvandeHa>("sp_KolParvandeHa", startParameter, endParameter);
        }
    
        public virtual ObjectResult<sp_KolParvandeHaByUserId> sp_KolParvandeHaByUserId(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> sourceID, Nullable<byte> nodeType, string fieldName, string vlaue, Nullable<int> h)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("SourceID", sourceID) :
                new ObjectParameter("SourceID", typeof(int));
    
            var nodeTypeParameter = nodeType.HasValue ?
                new ObjectParameter("NodeType", nodeType) :
                new ObjectParameter("NodeType", typeof(byte));
    
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("fieldName", fieldName) :
                new ObjectParameter("fieldName", typeof(string));
    
            var vlaueParameter = vlaue != null ?
                new ObjectParameter("Vlaue", vlaue) :
                new ObjectParameter("Vlaue", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_KolParvandeHaByUserId>("sp_KolParvandeHaByUserId", startParameter, endParameter, sourceIDParameter, nodeTypeParameter, fieldNameParameter, vlaueParameter, hParameter);
        }
    
        public virtual int sp_ListeSiyahDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ListeSiyahDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_ListeSiyahInsert(Nullable<long> fldCarId, Nullable<byte> fldType, string fldMsg, Nullable<long> fldUserID, string fldDesc)
        {
            var fldCarIdParameter = fldCarId.HasValue ?
                new ObjectParameter("fldCarId", fldCarId) :
                new ObjectParameter("fldCarId", typeof(long));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(byte));
    
            var fldMsgParameter = fldMsg != null ?
                new ObjectParameter("fldMsg", fldMsg) :
                new ObjectParameter("fldMsg", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ListeSiyahInsert", fldCarIdParameter, fldTypeParameter, fldMsgParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_ListeSiyahSelect> sp_ListeSiyahSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListeSiyahSelect>("sp_ListeSiyahSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_ListeSiyahUpdate(Nullable<int> fldId, Nullable<long> fldCarId, Nullable<byte> fldType, string fldMsg, Nullable<long> fldUserID, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldCarIdParameter = fldCarId.HasValue ?
                new ObjectParameter("fldCarId", fldCarId) :
                new ObjectParameter("fldCarId", typeof(long));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(byte));
    
            var fldMsgParameter = fldMsg != null ?
                new ObjectParameter("fldMsg", fldMsg) :
                new ObjectParameter("fldMsg", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ListeSiyahUpdate", fldIdParameter, fldCarIdParameter, fldTypeParameter, fldMsgParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_Local_LogSelect> sp_Local_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Local_LogSelect>("sp_Local_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_LocalDelete(Nullable<long> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LocalDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_LocalInsert(ObjectParameter fldId, string fldName, Nullable<int> fldMunicipalityID, Nullable<long> fldUserID, string fldDesc, string fldUserPass, string fldServiceCode, string fldSourceInformatics)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldServiceCodeParameter = fldServiceCode != null ?
                new ObjectParameter("fldServiceCode", fldServiceCode) :
                new ObjectParameter("fldServiceCode", typeof(string));
    
            var fldSourceInformaticsParameter = fldSourceInformatics != null ?
                new ObjectParameter("fldSourceInformatics", fldSourceInformatics) :
                new ObjectParameter("fldSourceInformatics", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LocalInsert", fldId, fldNameParameter, fldMunicipalityIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldServiceCodeParameter, fldSourceInformaticsParameter);
        }
    
        public virtual ObjectResult<sp_LocalSelect> sp_LocalSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LocalSelect>("sp_LocalSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_LocalUpdate(Nullable<long> fldID, string fldName, Nullable<int> fldMunicipalityID, Nullable<long> fldUserID, string fldDesc, string fldUserPass, string fldServiceCode, string fldSourceInformatics)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldServiceCodeParameter = fldServiceCode != null ?
                new ObjectParameter("fldServiceCode", fldServiceCode) :
                new ObjectParameter("fldServiceCode", typeof(string));
    
            var fldSourceInformaticsParameter = fldSourceInformatics != null ?
                new ObjectParameter("fldSourceInformatics", fldSourceInformatics) :
                new ObjectParameter("fldSourceInformatics", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LocalUpdate", fldIDParameter, fldNameParameter, fldMunicipalityIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldServiceCodeParameter, fldSourceInformaticsParameter);
        }
    
        public virtual int sp_LogInProgramDelete(Nullable<long> fldUserID, string fldUserPass)
        {
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LogInProgramDelete", fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_LogInProgramInsert(Nullable<long> fldUserID, string fldMacAddress, string fldIPAddress, string fldUserPass)
        {
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldMacAddressParameter = fldMacAddress != null ?
                new ObjectParameter("fldMacAddress", fldMacAddress) :
                new ObjectParameter("fldMacAddress", typeof(string));
    
            var fldIPAddressParameter = fldIPAddress != null ?
                new ObjectParameter("fldIPAddress", fldIPAddress) :
                new ObjectParameter("fldIPAddress", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LogInProgramInsert", fldUserIDParameter, fldMacAddressParameter, fldIPAddressParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_LogInProgramSelect> sp_LogInProgramSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LogInProgramSelect>("sp_LogInProgramSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_LogInProgramUpdate(Nullable<long> fldUserID, string fldMacAddress, string fldIPAddress, string fldUserPass)
        {
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldMacAddressParameter = fldMacAddress != null ?
                new ObjectParameter("fldMacAddress", fldMacAddress) :
                new ObjectParameter("fldMacAddress", typeof(string));
    
            var fldIPAddressParameter = fldIPAddress != null ?
                new ObjectParameter("fldIPAddress", fldIPAddress) :
                new ObjectParameter("fldIPAddress", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LogInProgramUpdate", fldUserIDParameter, fldMacAddressParameter, fldIPAddressParameter, fldUserPassParameter);
        }
    
        public virtual int Sp_MafasaInsert(ObjectParameter fldId, Nullable<long> fldCarId, Nullable<int> fldMunId, byte[] fldImage, Nullable<long> fldUserId, ObjectParameter fldLetterDate, ObjectParameter fldLetterNum)
        {
            var fldCarIdParameter = fldCarId.HasValue ?
                new ObjectParameter("fldCarId", fldCarId) :
                new ObjectParameter("fldCarId", typeof(long));
    
            var fldMunIdParameter = fldMunId.HasValue ?
                new ObjectParameter("fldMunId", fldMunId) :
                new ObjectParameter("fldMunId", typeof(int));
    
            var fldImageParameter = fldImage != null ?
                new ObjectParameter("fldImage", fldImage) :
                new ObjectParameter("fldImage", typeof(byte[]));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_MafasaInsert", fldId, fldCarIdParameter, fldMunIdParameter, fldImageParameter, fldUserIdParameter, fldLetterDate, fldLetterNum);
        }
    
        public virtual ObjectResult<Sp_MafasaSelect> Sp_MafasaSelect(Nullable<long> carId)
        {
            var carIdParameter = carId.HasValue ?
                new ObjectParameter("CarId", carId) :
                new ObjectParameter("CarId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MafasaSelect>("Sp_MafasaSelect", carIdParameter);
        }
    
        public virtual ObjectResult<Sp_MafasaSelect_Image> Sp_MafasaSelect_Image(string fldid)
        {
            var fldidParameter = fldid != null ?
                new ObjectParameter("fldid", fldid) :
                new ObjectParameter("fldid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MafasaSelect_Image>("Sp_MafasaSelect_Image", fldidParameter);
        }
    
        public virtual ObjectResult<Sp_MafasaSelect_Image1> Sp_MafasaSelect_Image1(string fldid)
        {
            var fldidParameter = fldid != null ?
                new ObjectParameter("fldid", fldid) :
                new ObjectParameter("fldid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MafasaSelect_Image1>("Sp_MafasaSelect_Image1", fldidParameter);
        }
    
        public virtual int Sp_MafasaUpdate(string fldId, byte[] fldImage)
        {
            var fldIdParameter = fldId != null ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(string));
    
            var fldImageParameter = fldImage != null ?
                new ObjectParameter("fldImage", fldImage) :
                new ObjectParameter("fldImage", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_MafasaUpdate", fldIdParameter, fldImageParameter);
        }
    
        public virtual ObjectResult<sp_MainSetting_LogSelect> sp_MainSetting_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MainSetting_LogSelect>("sp_MainSetting_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_MainSettingDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MainSettingDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_MainSettingInsert(Nullable<bool> fldLateFine, Nullable<bool> fldTax, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldImplementationDate, Nullable<bool> fldCountryDivisionsTreeApply, Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<bool> fldCarSeriesTreeApply, string fldUserPass, Nullable<bool> fldFineType, Nullable<bool> fldFirstInsurance)
        {
            var fldLateFineParameter = fldLateFine.HasValue ?
                new ObjectParameter("fldLateFine", fldLateFine) :
                new ObjectParameter("fldLateFine", typeof(bool));
    
            var fldTaxParameter = fldTax.HasValue ?
                new ObjectParameter("fldTax", fldTax) :
                new ObjectParameter("fldTax", typeof(bool));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldImplementationDateParameter = fldImplementationDate.HasValue ?
                new ObjectParameter("fldImplementationDate", fldImplementationDate) :
                new ObjectParameter("fldImplementationDate", typeof(System.DateTime));
    
            var fldCountryDivisionsTreeApplyParameter = fldCountryDivisionsTreeApply.HasValue ?
                new ObjectParameter("fldCountryDivisionsTreeApply", fldCountryDivisionsTreeApply) :
                new ObjectParameter("fldCountryDivisionsTreeApply", typeof(bool));
    
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldCarSeriesTreeApplyParameter = fldCarSeriesTreeApply.HasValue ?
                new ObjectParameter("fldCarSeriesTreeApply", fldCarSeriesTreeApply) :
                new ObjectParameter("fldCarSeriesTreeApply", typeof(bool));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldFineTypeParameter = fldFineType.HasValue ?
                new ObjectParameter("fldFineType", fldFineType) :
                new ObjectParameter("fldFineType", typeof(bool));
    
            var fldFirstInsuranceParameter = fldFirstInsurance.HasValue ?
                new ObjectParameter("fldFirstInsurance", fldFirstInsurance) :
                new ObjectParameter("fldFirstInsurance", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MainSettingInsert", fldLateFineParameter, fldTaxParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldUserIDParameter, fldDescParameter, fldImplementationDateParameter, fldCountryDivisionsTreeApplyParameter, fldTypeCarParameter, fldCodeCarParameter, fldCarSeriesTreeApplyParameter, fldUserPassParameter, fldFineTypeParameter, fldFirstInsuranceParameter);
        }
    
        public virtual ObjectResult<sp_MainSettingSelect> sp_MainSettingSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MainSettingSelect>("sp_MainSettingSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_MainSettingUpdate(Nullable<int> fldID, Nullable<bool> fldLateFine, Nullable<bool> fldTax, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldImplementationDate, Nullable<bool> fldCountryDivisionsTreeApply, Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<bool> fldCarSeriesTreeApply, string fldUserPass, Nullable<bool> fldFineType, Nullable<bool> fldFirstInsurance)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldLateFineParameter = fldLateFine.HasValue ?
                new ObjectParameter("fldLateFine", fldLateFine) :
                new ObjectParameter("fldLateFine", typeof(bool));
    
            var fldTaxParameter = fldTax.HasValue ?
                new ObjectParameter("fldTax", fldTax) :
                new ObjectParameter("fldTax", typeof(bool));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldImplementationDateParameter = fldImplementationDate.HasValue ?
                new ObjectParameter("fldImplementationDate", fldImplementationDate) :
                new ObjectParameter("fldImplementationDate", typeof(System.DateTime));
    
            var fldCountryDivisionsTreeApplyParameter = fldCountryDivisionsTreeApply.HasValue ?
                new ObjectParameter("fldCountryDivisionsTreeApply", fldCountryDivisionsTreeApply) :
                new ObjectParameter("fldCountryDivisionsTreeApply", typeof(bool));
    
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldCarSeriesTreeApplyParameter = fldCarSeriesTreeApply.HasValue ?
                new ObjectParameter("fldCarSeriesTreeApply", fldCarSeriesTreeApply) :
                new ObjectParameter("fldCarSeriesTreeApply", typeof(bool));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldFineTypeParameter = fldFineType.HasValue ?
                new ObjectParameter("fldFineType", fldFineType) :
                new ObjectParameter("fldFineType", typeof(bool));
    
            var fldFirstInsuranceParameter = fldFirstInsurance.HasValue ?
                new ObjectParameter("fldFirstInsurance", fldFirstInsurance) :
                new ObjectParameter("fldFirstInsurance", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MainSettingUpdate", fldIDParameter, fldLateFineParameter, fldTaxParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldUserIDParameter, fldDescParameter, fldImplementationDateParameter, fldCountryDivisionsTreeApplyParameter, fldTypeCarParameter, fldCodeCarParameter, fldCarSeriesTreeApplyParameter, fldUserPassParameter, fldFineTypeParameter, fldFirstInsuranceParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxOrderId(Nullable<int> bankId)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxOrderId", bankIdParameter);
        }
    
        public virtual ObjectResult<sp_MonthlyCollectionTipChart> sp_MonthlyCollectionTipChart(Nullable<int> year, Nullable<int> mun)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MonthlyCollectionTipChart>("sp_MonthlyCollectionTipChart", yearParameter, munParameter);
        }
    
        public virtual ObjectResult<sp_Municipality_LogSelect> sp_Municipality_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Municipality_LogSelect>("sp_Municipality_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_MunicipalityDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MunicipalityDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_MunicipalityInsert(ObjectParameter fldId, string fldName, Nullable<int> fldCityID, string fldInformaticesCode, Nullable<byte> fldServiceCode, string fldRWUserName, string fldRWPass, Nullable<long> fldUserID, string fldDesc, byte[] fldImage, string fldUserPass, string fldSamieUser, string fldSamiePass, string fldSamieGUID)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCityIDParameter = fldCityID.HasValue ?
                new ObjectParameter("fldCityID", fldCityID) :
                new ObjectParameter("fldCityID", typeof(int));
    
            var fldInformaticesCodeParameter = fldInformaticesCode != null ?
                new ObjectParameter("fldInformaticesCode", fldInformaticesCode) :
                new ObjectParameter("fldInformaticesCode", typeof(string));
    
            var fldServiceCodeParameter = fldServiceCode.HasValue ?
                new ObjectParameter("fldServiceCode", fldServiceCode) :
                new ObjectParameter("fldServiceCode", typeof(byte));
    
            var fldRWUserNameParameter = fldRWUserName != null ?
                new ObjectParameter("fldRWUserName", fldRWUserName) :
                new ObjectParameter("fldRWUserName", typeof(string));
    
            var fldRWPassParameter = fldRWPass != null ?
                new ObjectParameter("fldRWPass", fldRWPass) :
                new ObjectParameter("fldRWPass", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldImageParameter = fldImage != null ?
                new ObjectParameter("fldImage", fldImage) :
                new ObjectParameter("fldImage", typeof(byte[]));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldSamieUserParameter = fldSamieUser != null ?
                new ObjectParameter("fldSamieUser", fldSamieUser) :
                new ObjectParameter("fldSamieUser", typeof(string));
    
            var fldSamiePassParameter = fldSamiePass != null ?
                new ObjectParameter("fldSamiePass", fldSamiePass) :
                new ObjectParameter("fldSamiePass", typeof(string));
    
            var fldSamieGUIDParameter = fldSamieGUID != null ?
                new ObjectParameter("fldSamieGUID", fldSamieGUID) :
                new ObjectParameter("fldSamieGUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MunicipalityInsert", fldId, fldNameParameter, fldCityIDParameter, fldInformaticesCodeParameter, fldServiceCodeParameter, fldRWUserNameParameter, fldRWPassParameter, fldUserIDParameter, fldDescParameter, fldImageParameter, fldUserPassParameter, fldSamieUserParameter, fldSamiePassParameter, fldSamieGUIDParameter);
        }
    
        public virtual ObjectResult<sp_MunicipalitySelect> sp_MunicipalitySelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MunicipalitySelect>("sp_MunicipalitySelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_MunicipalityUpdate(Nullable<int> fldID, string fldName, Nullable<int> fldCityID, string fldInformaticesCode, Nullable<byte> fldServiceCode, string fldRWUserName, string fldRWPass, Nullable<long> fldUserID, string fldDesc, byte[] fldPic, string fldUserPass, string fldSamieUser, string fldSamiePass, string fldSamieGUID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCityIDParameter = fldCityID.HasValue ?
                new ObjectParameter("fldCityID", fldCityID) :
                new ObjectParameter("fldCityID", typeof(int));
    
            var fldInformaticesCodeParameter = fldInformaticesCode != null ?
                new ObjectParameter("fldInformaticesCode", fldInformaticesCode) :
                new ObjectParameter("fldInformaticesCode", typeof(string));
    
            var fldServiceCodeParameter = fldServiceCode.HasValue ?
                new ObjectParameter("fldServiceCode", fldServiceCode) :
                new ObjectParameter("fldServiceCode", typeof(byte));
    
            var fldRWUserNameParameter = fldRWUserName != null ?
                new ObjectParameter("fldRWUserName", fldRWUserName) :
                new ObjectParameter("fldRWUserName", typeof(string));
    
            var fldRWPassParameter = fldRWPass != null ?
                new ObjectParameter("fldRWPass", fldRWPass) :
                new ObjectParameter("fldRWPass", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldSamieUserParameter = fldSamieUser != null ?
                new ObjectParameter("fldSamieUser", fldSamieUser) :
                new ObjectParameter("fldSamieUser", typeof(string));
    
            var fldSamiePassParameter = fldSamiePass != null ?
                new ObjectParameter("fldSamiePass", fldSamiePass) :
                new ObjectParameter("fldSamiePass", typeof(string));
    
            var fldSamieGUIDParameter = fldSamieGUID != null ?
                new ObjectParameter("fldSamieGUID", fldSamieGUID) :
                new ObjectParameter("fldSamieGUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MunicipalityUpdate", fldIDParameter, fldNameParameter, fldCityIDParameter, fldInformaticesCodeParameter, fldServiceCodeParameter, fldRWUserNameParameter, fldRWPassParameter, fldUserIDParameter, fldDescParameter, fldPicParameter, fldUserPassParameter, fldSamieUserParameter, fldSamiePassParameter, fldSamieGUIDParameter);
        }
    
        public virtual ObjectResult<sp_NameTablesSelect> sp_NameTablesSelect(string fieldName, string value, Nullable<int> h)
        {
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("FieldName", fieldName) :
                new ObjectParameter("FieldName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_NameTablesSelect>("sp_NameTablesSelect", fieldNameParameter, valueParameter, hParameter);
        }
    
        public virtual ObjectResult<sp_News_LogSelect> sp_News_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_LogSelect>("sp_News_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_NewsDelete(Nullable<long> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_NewsDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_NewsInsert(string fldSubject, string fldMemo, Nullable<bool> fldShowStatus, Nullable<int> fldMunicipalityID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldSubjectParameter = fldSubject != null ?
                new ObjectParameter("fldSubject", fldSubject) :
                new ObjectParameter("fldSubject", typeof(string));
    
            var fldMemoParameter = fldMemo != null ?
                new ObjectParameter("fldMemo", fldMemo) :
                new ObjectParameter("fldMemo", typeof(string));
    
            var fldShowStatusParameter = fldShowStatus.HasValue ?
                new ObjectParameter("fldShowStatus", fldShowStatus) :
                new ObjectParameter("fldShowStatus", typeof(bool));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_NewsInsert", fldSubjectParameter, fldMemoParameter, fldShowStatusParameter, fldMunicipalityIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_NewsSelect> sp_NewsSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_NewsSelect>("sp_NewsSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_NewsUpdate(Nullable<long> fldID, string fldSubject, string fldMemo, Nullable<bool> fldShowStatus, Nullable<int> fldMunicipalityID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldSubjectParameter = fldSubject != null ?
                new ObjectParameter("fldSubject", fldSubject) :
                new ObjectParameter("fldSubject", typeof(string));
    
            var fldMemoParameter = fldMemo != null ?
                new ObjectParameter("fldMemo", fldMemo) :
                new ObjectParameter("fldMemo", typeof(string));
    
            var fldShowStatusParameter = fldShowStatus.HasValue ?
                new ObjectParameter("fldShowStatus", fldShowStatus) :
                new ObjectParameter("fldShowStatus", typeof(bool));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_NewsUpdate", fldIDParameter, fldSubjectParameter, fldMemoParameter, fldShowStatusParameter, fldMunicipalityIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Offices_LogSelect> sp_Offices_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Offices_LogSelect>("sp_Offices_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OfficesDelete(Nullable<long> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OfficesDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OfficesInsert(string fldName, string fldAddress, Nullable<byte> fldOfficesTypeID, Nullable<int> fldMunicipalityID, Nullable<long> fldLocalID, Nullable<long> fldAreaID, Nullable<long> fldUserID, string fldDesc, string fldTel, string fldUserPass, string fldExpire)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldAddressParameter = fldAddress != null ?
                new ObjectParameter("fldAddress", fldAddress) :
                new ObjectParameter("fldAddress", typeof(string));
    
            var fldOfficesTypeIDParameter = fldOfficesTypeID.HasValue ?
                new ObjectParameter("fldOfficesTypeID", fldOfficesTypeID) :
                new ObjectParameter("fldOfficesTypeID", typeof(byte));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldLocalIDParameter = fldLocalID.HasValue ?
                new ObjectParameter("fldLocalID", fldLocalID) :
                new ObjectParameter("fldLocalID", typeof(long));
    
            var fldAreaIDParameter = fldAreaID.HasValue ?
                new ObjectParameter("fldAreaID", fldAreaID) :
                new ObjectParameter("fldAreaID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldTelParameter = fldTel != null ?
                new ObjectParameter("fldTel", fldTel) :
                new ObjectParameter("fldTel", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldExpireParameter = fldExpire != null ?
                new ObjectParameter("fldExpire", fldExpire) :
                new ObjectParameter("fldExpire", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OfficesInsert", fldNameParameter, fldAddressParameter, fldOfficesTypeIDParameter, fldMunicipalityIDParameter, fldLocalIDParameter, fldAreaIDParameter, fldUserIDParameter, fldDescParameter, fldTelParameter, fldUserPassParameter, fldExpireParameter);
        }
    
        public virtual ObjectResult<sp_OfficesSelect> sp_OfficesSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OfficesSelect>("sp_OfficesSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_OfficesType_LogSelect> sp_OfficesType_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OfficesType_LogSelect>("sp_OfficesType_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OfficesTypeDelete(Nullable<byte> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(byte));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OfficesTypeDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OfficesTypeInsert(string fldType, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldTypeParameter = fldType != null ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OfficesTypeInsert", fldTypeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_OfficesTypeSelect> sp_OfficesTypeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OfficesTypeSelect>("sp_OfficesTypeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OfficesTypeUpdate(Nullable<byte> fldID, string fldType, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(byte));
    
            var fldTypeParameter = fldType != null ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OfficesTypeUpdate", fldIDParameter, fldTypeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OfficesUpdate(Nullable<long> fldID, string fldName, string fldAddress, Nullable<byte> fldOfficesTypeID, Nullable<int> fldMunicipalityID, Nullable<long> fldLocalID, Nullable<long> fldAreaID, Nullable<long> fldUserID, string fldDesc, string fldTel, string fldUserPass, string fldExpire)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldAddressParameter = fldAddress != null ?
                new ObjectParameter("fldAddress", fldAddress) :
                new ObjectParameter("fldAddress", typeof(string));
    
            var fldOfficesTypeIDParameter = fldOfficesTypeID.HasValue ?
                new ObjectParameter("fldOfficesTypeID", fldOfficesTypeID) :
                new ObjectParameter("fldOfficesTypeID", typeof(byte));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldLocalIDParameter = fldLocalID.HasValue ?
                new ObjectParameter("fldLocalID", fldLocalID) :
                new ObjectParameter("fldLocalID", typeof(long));
    
            var fldAreaIDParameter = fldAreaID.HasValue ?
                new ObjectParameter("fldAreaID", fldAreaID) :
                new ObjectParameter("fldAreaID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldTelParameter = fldTel != null ?
                new ObjectParameter("fldTel", fldTel) :
                new ObjectParameter("fldTel", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldExpireParameter = fldExpire != null ?
                new ObjectParameter("fldExpire", fldExpire) :
                new ObjectParameter("fldExpire", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OfficesUpdate", fldIDParameter, fldNameParameter, fldAddressParameter, fldOfficesTypeIDParameter, fldMunicipalityIDParameter, fldLocalIDParameter, fldAreaIDParameter, fldUserIDParameter, fldDescParameter, fldTelParameter, fldUserPassParameter, fldExpireParameter);
        }
    
        public virtual ObjectResult<sp_OftenInvolved_LogSelect> sp_OftenInvolved_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OftenInvolved_LogSelect>("sp_OftenInvolved_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OftenInvolvedDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OftenInvolvedDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OftenInvolvedInsert(Nullable<long> fldCollectionID, Nullable<System.DateTime> fldActionDate, Nullable<System.DateTime> fldSendDate, string fldIdentityLetter, Nullable<int> fldSendLetterID, string fldSerialTagSend, Nullable<int> fldRecoupmentID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldCollectionIDParameter = fldCollectionID.HasValue ?
                new ObjectParameter("fldCollectionID", fldCollectionID) :
                new ObjectParameter("fldCollectionID", typeof(long));
    
            var fldActionDateParameter = fldActionDate.HasValue ?
                new ObjectParameter("fldActionDate", fldActionDate) :
                new ObjectParameter("fldActionDate", typeof(System.DateTime));
    
            var fldSendDateParameter = fldSendDate.HasValue ?
                new ObjectParameter("fldSendDate", fldSendDate) :
                new ObjectParameter("fldSendDate", typeof(System.DateTime));
    
            var fldIdentityLetterParameter = fldIdentityLetter != null ?
                new ObjectParameter("fldIdentityLetter", fldIdentityLetter) :
                new ObjectParameter("fldIdentityLetter", typeof(string));
    
            var fldSendLetterIDParameter = fldSendLetterID.HasValue ?
                new ObjectParameter("fldSendLetterID", fldSendLetterID) :
                new ObjectParameter("fldSendLetterID", typeof(int));
    
            var fldSerialTagSendParameter = fldSerialTagSend != null ?
                new ObjectParameter("fldSerialTagSend", fldSerialTagSend) :
                new ObjectParameter("fldSerialTagSend", typeof(string));
    
            var fldRecoupmentIDParameter = fldRecoupmentID.HasValue ?
                new ObjectParameter("fldRecoupmentID", fldRecoupmentID) :
                new ObjectParameter("fldRecoupmentID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OftenInvolvedInsert", fldCollectionIDParameter, fldActionDateParameter, fldSendDateParameter, fldIdentityLetterParameter, fldSendLetterIDParameter, fldSerialTagSendParameter, fldRecoupmentIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OftenInvolvedUpdate(Nullable<int> fldID, Nullable<long> fldCollectionID, Nullable<System.DateTime> fldActionDate, Nullable<System.DateTime> fldSendDate, string fldIdentityLetter, Nullable<int> fldSendLetterID, string fldSerialTagSend, Nullable<int> fldRecoupmentID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldCollectionIDParameter = fldCollectionID.HasValue ?
                new ObjectParameter("fldCollectionID", fldCollectionID) :
                new ObjectParameter("fldCollectionID", typeof(long));
    
            var fldActionDateParameter = fldActionDate.HasValue ?
                new ObjectParameter("fldActionDate", fldActionDate) :
                new ObjectParameter("fldActionDate", typeof(System.DateTime));
    
            var fldSendDateParameter = fldSendDate.HasValue ?
                new ObjectParameter("fldSendDate", fldSendDate) :
                new ObjectParameter("fldSendDate", typeof(System.DateTime));
    
            var fldIdentityLetterParameter = fldIdentityLetter != null ?
                new ObjectParameter("fldIdentityLetter", fldIdentityLetter) :
                new ObjectParameter("fldIdentityLetter", typeof(string));
    
            var fldSendLetterIDParameter = fldSendLetterID.HasValue ?
                new ObjectParameter("fldSendLetterID", fldSendLetterID) :
                new ObjectParameter("fldSendLetterID", typeof(int));
    
            var fldSerialTagSendParameter = fldSerialTagSend != null ?
                new ObjectParameter("fldSerialTagSend", fldSerialTagSend) :
                new ObjectParameter("fldSerialTagSend", typeof(string));
    
            var fldRecoupmentIDParameter = fldRecoupmentID.HasValue ?
                new ObjectParameter("fldRecoupmentID", fldRecoupmentID) :
                new ObjectParameter("fldRecoupmentID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OftenInvolvedUpdate", fldIDParameter, fldCollectionIDParameter, fldActionDateParameter, fldSendDateParameter, fldIdentityLetterParameter, fldSendLetterIDParameter, fldSerialTagSendParameter, fldRecoupmentIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_online> sp_online()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_online>("sp_online");
        }
    
        public virtual ObjectResult<sp_OnlinePayments_LogSelect> sp_OnlinePayments_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OnlinePayments_LogSelect>("sp_OnlinePayments_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OnlinePaymentsDelete(Nullable<long> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OnlinePaymentsDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OnlinePaymentsFinalPaymentUpdate(Nullable<long> fldID, Nullable<bool> fldFinalPayment, string fldTrackCode, Nullable<long> fldUserID, Nullable<int> fldGuestUserId, string fldUserPass, string fldDesc)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldFinalPaymentParameter = fldFinalPayment.HasValue ?
                new ObjectParameter("fldFinalPayment", fldFinalPayment) :
                new ObjectParameter("fldFinalPayment", typeof(bool));
    
            var fldTrackCodeParameter = fldTrackCode != null ?
                new ObjectParameter("fldTrackCode", fldTrackCode) :
                new ObjectParameter("fldTrackCode", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldGuestUserIdParameter = fldGuestUserId.HasValue ?
                new ObjectParameter("fldGuestUserId", fldGuestUserId) :
                new ObjectParameter("fldGuestUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OnlinePaymentsFinalPaymentUpdate", fldIDParameter, fldFinalPaymentParameter, fldTrackCodeParameter, fldUserIDParameter, fldGuestUserIdParameter, fldUserPassParameter, fldDescParameter);
        }
    
        public virtual int sp_OnlinePaymentsInsert(ObjectParameter fldId, Nullable<int> fldBankID, Nullable<long> fldPeacockeryID, string fldTemporaryCode, Nullable<bool> fldFinalPayment, string fldTrackCode, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<decimal> fldMony, Nullable<int> fldMunID, Nullable<int> fldGuestUserId)
        {
            var fldBankIDParameter = fldBankID.HasValue ?
                new ObjectParameter("fldBankID", fldBankID) :
                new ObjectParameter("fldBankID", typeof(int));
    
            var fldPeacockeryIDParameter = fldPeacockeryID.HasValue ?
                new ObjectParameter("fldPeacockeryID", fldPeacockeryID) :
                new ObjectParameter("fldPeacockeryID", typeof(long));
    
            var fldTemporaryCodeParameter = fldTemporaryCode != null ?
                new ObjectParameter("fldTemporaryCode", fldTemporaryCode) :
                new ObjectParameter("fldTemporaryCode", typeof(string));
    
            var fldFinalPaymentParameter = fldFinalPayment.HasValue ?
                new ObjectParameter("fldFinalPayment", fldFinalPayment) :
                new ObjectParameter("fldFinalPayment", typeof(bool));
    
            var fldTrackCodeParameter = fldTrackCode != null ?
                new ObjectParameter("fldTrackCode", fldTrackCode) :
                new ObjectParameter("fldTrackCode", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldMonyParameter = fldMony.HasValue ?
                new ObjectParameter("fldMony", fldMony) :
                new ObjectParameter("fldMony", typeof(decimal));
    
            var fldMunIDParameter = fldMunID.HasValue ?
                new ObjectParameter("fldMunID", fldMunID) :
                new ObjectParameter("fldMunID", typeof(int));
    
            var fldGuestUserIdParameter = fldGuestUserId.HasValue ?
                new ObjectParameter("fldGuestUserId", fldGuestUserId) :
                new ObjectParameter("fldGuestUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OnlinePaymentsInsert", fldId, fldBankIDParameter, fldPeacockeryIDParameter, fldTemporaryCodeParameter, fldFinalPaymentParameter, fldTrackCodeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldMonyParameter, fldMunIDParameter, fldGuestUserIdParameter);
        }
    
        public virtual ObjectResult<sp_OnlinePaymentsSelect> sp_OnlinePaymentsSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OnlinePaymentsSelect>("sp_OnlinePaymentsSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OnlinePaymentsUpdate(Nullable<long> fldID, Nullable<int> fldBankID, Nullable<long> fldPeacockeryID, string fldTemporaryCode, Nullable<bool> fldFinalPayment, string fldTrackCode, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<decimal> fldMony, Nullable<int> fldMunID, Nullable<int> fldGuestUserId)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldBankIDParameter = fldBankID.HasValue ?
                new ObjectParameter("fldBankID", fldBankID) :
                new ObjectParameter("fldBankID", typeof(int));
    
            var fldPeacockeryIDParameter = fldPeacockeryID.HasValue ?
                new ObjectParameter("fldPeacockeryID", fldPeacockeryID) :
                new ObjectParameter("fldPeacockeryID", typeof(long));
    
            var fldTemporaryCodeParameter = fldTemporaryCode != null ?
                new ObjectParameter("fldTemporaryCode", fldTemporaryCode) :
                new ObjectParameter("fldTemporaryCode", typeof(string));
    
            var fldFinalPaymentParameter = fldFinalPayment.HasValue ?
                new ObjectParameter("fldFinalPayment", fldFinalPayment) :
                new ObjectParameter("fldFinalPayment", typeof(bool));
    
            var fldTrackCodeParameter = fldTrackCode != null ?
                new ObjectParameter("fldTrackCode", fldTrackCode) :
                new ObjectParameter("fldTrackCode", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldMonyParameter = fldMony.HasValue ?
                new ObjectParameter("fldMony", fldMony) :
                new ObjectParameter("fldMony", typeof(decimal));
    
            var fldMunIDParameter = fldMunID.HasValue ?
                new ObjectParameter("fldMunID", fldMunID) :
                new ObjectParameter("fldMunID", typeof(int));
    
            var fldGuestUserIdParameter = fldGuestUserId.HasValue ?
                new ObjectParameter("fldGuestUserId", fldGuestUserId) :
                new ObjectParameter("fldGuestUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OnlinePaymentsUpdate", fldIDParameter, fldBankIDParameter, fldPeacockeryIDParameter, fldTemporaryCodeParameter, fldFinalPaymentParameter, fldTrackCodeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldMonyParameter, fldMunIDParameter, fldGuestUserIdParameter);
        }
    
        public virtual int sp_OnlineTemporaryCodePaymentsUpdate(Nullable<long> fldID, string fldTemporaryCode, Nullable<decimal> fldMony, Nullable<long> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldTemporaryCodeParameter = fldTemporaryCode != null ?
                new ObjectParameter("fldTemporaryCode", fldTemporaryCode) :
                new ObjectParameter("fldTemporaryCode", typeof(string));
    
            var fldMonyParameter = fldMony.HasValue ?
                new ObjectParameter("fldMony", fldMony) :
                new ObjectParameter("fldMony", typeof(decimal));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OnlineTemporaryCodePaymentsUpdate", fldIDParameter, fldTemporaryCodeParameter, fldMonyParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Organization_LogSelect> sp_Organization_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Organization_LogSelect>("sp_Organization_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OrganizationDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrganizationDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OrganizationInsert(string fldName, string fldPost, string fldAddress, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldPostParameter = fldPost != null ?
                new ObjectParameter("fldPost", fldPost) :
                new ObjectParameter("fldPost", typeof(string));
    
            var fldAddressParameter = fldAddress != null ?
                new ObjectParameter("fldAddress", fldAddress) :
                new ObjectParameter("fldAddress", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrganizationInsert", fldNameParameter, fldPostParameter, fldAddressParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_OrganizationSelect> sp_OrganizationSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OrganizationSelect>("sp_OrganizationSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OrganizationUpdate(Nullable<int> fldID, string fldName, string fldPost, string fldAddress, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldPostParameter = fldPost != null ?
                new ObjectParameter("fldPost", fldPost) :
                new ObjectParameter("fldPost", typeof(string));
    
            var fldAddressParameter = fldAddress != null ?
                new ObjectParameter("fldAddress", fldAddress) :
                new ObjectParameter("fldAddress", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrganizationUpdate", fldIDParameter, fldNameParameter, fldPostParameter, fldAddressParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Owner_LogSelect> sp_Owner_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Owner_LogSelect>("sp_Owner_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OwnerDelete(Nullable<long> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OwnerDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OwnerInsert(string fldName, string fldMelli_EconomicCode, Nullable<byte> fldOwnerType, string fldEmail, string fldMobile, string fldAddress, string fldPostalCode, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<bool> fldType, Nullable<System.DateTime> fldTarikh, Nullable<bool> fldMobileVerify)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldMelli_EconomicCodeParameter = fldMelli_EconomicCode != null ?
                new ObjectParameter("fldMelli_EconomicCode", fldMelli_EconomicCode) :
                new ObjectParameter("fldMelli_EconomicCode", typeof(string));
    
            var fldOwnerTypeParameter = fldOwnerType.HasValue ?
                new ObjectParameter("fldOwnerType", fldOwnerType) :
                new ObjectParameter("fldOwnerType", typeof(byte));
    
            var fldEmailParameter = fldEmail != null ?
                new ObjectParameter("fldEmail", fldEmail) :
                new ObjectParameter("fldEmail", typeof(string));
    
            var fldMobileParameter = fldMobile != null ?
                new ObjectParameter("fldMobile", fldMobile) :
                new ObjectParameter("fldMobile", typeof(string));
    
            var fldAddressParameter = fldAddress != null ?
                new ObjectParameter("fldAddress", fldAddress) :
                new ObjectParameter("fldAddress", typeof(string));
    
            var fldPostalCodeParameter = fldPostalCode != null ?
                new ObjectParameter("fldPostalCode", fldPostalCode) :
                new ObjectParameter("fldPostalCode", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(bool));
    
            var fldTarikhParameter = fldTarikh.HasValue ?
                new ObjectParameter("fldTarikh", fldTarikh) :
                new ObjectParameter("fldTarikh", typeof(System.DateTime));
    
            var fldMobileVerifyParameter = fldMobileVerify.HasValue ?
                new ObjectParameter("fldMobileVerify", fldMobileVerify) :
                new ObjectParameter("fldMobileVerify", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OwnerInsert", fldNameParameter, fldMelli_EconomicCodeParameter, fldOwnerTypeParameter, fldEmailParameter, fldMobileParameter, fldAddressParameter, fldPostalCodeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldTypeParameter, fldTarikhParameter, fldMobileVerifyParameter);
        }
    
        public virtual int sp_OwnerMobileVerify(Nullable<int> ownerId, Nullable<bool> verify, Nullable<int> fldUserID)
        {
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(int));
    
            var verifyParameter = verify.HasValue ?
                new ObjectParameter("verify", verify) :
                new ObjectParameter("verify", typeof(bool));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OwnerMobileVerify", ownerIdParameter, verifyParameter, fldUserIDParameter);
        }
    
        public virtual ObjectResult<sp_OwnerSelect> sp_OwnerSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OwnerSelect>("sp_OwnerSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_OwnerUpdate(Nullable<long> fldID, string fldName, string fldMelli_EconomicCode, Nullable<byte> fldOwnerType, string fldEmail, string fldMobile, string fldAddress, string fldPostalCode, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<System.DateTime> fldTarikh, Nullable<bool> fldType)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldMelli_EconomicCodeParameter = fldMelli_EconomicCode != null ?
                new ObjectParameter("fldMelli_EconomicCode", fldMelli_EconomicCode) :
                new ObjectParameter("fldMelli_EconomicCode", typeof(string));
    
            var fldOwnerTypeParameter = fldOwnerType.HasValue ?
                new ObjectParameter("fldOwnerType", fldOwnerType) :
                new ObjectParameter("fldOwnerType", typeof(byte));
    
            var fldEmailParameter = fldEmail != null ?
                new ObjectParameter("fldEmail", fldEmail) :
                new ObjectParameter("fldEmail", typeof(string));
    
            var fldMobileParameter = fldMobile != null ?
                new ObjectParameter("fldMobile", fldMobile) :
                new ObjectParameter("fldMobile", typeof(string));
    
            var fldAddressParameter = fldAddress != null ?
                new ObjectParameter("fldAddress", fldAddress) :
                new ObjectParameter("fldAddress", typeof(string));
    
            var fldPostalCodeParameter = fldPostalCode != null ?
                new ObjectParameter("fldPostalCode", fldPostalCode) :
                new ObjectParameter("fldPostalCode", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldTarikhParameter = fldTarikh.HasValue ?
                new ObjectParameter("fldTarikh", fldTarikh) :
                new ObjectParameter("fldTarikh", typeof(System.DateTime));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OwnerUpdate", fldIDParameter, fldNameParameter, fldMelli_EconomicCodeParameter, fldOwnerTypeParameter, fldEmailParameter, fldMobileParameter, fldAddressParameter, fldPostalCodeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldTarikhParameter, fldTypeParameter);
        }
    
        public virtual int sp_PageHtmlDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PageHtmlDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_PageHtmlInsert(string fldTitle, string fldMasir, string fldMatnHtml, Nullable<long> fldUserId, string fldDesc)
        {
            var fldTitleParameter = fldTitle != null ?
                new ObjectParameter("fldTitle", fldTitle) :
                new ObjectParameter("fldTitle", typeof(string));
    
            var fldMasirParameter = fldMasir != null ?
                new ObjectParameter("fldMasir", fldMasir) :
                new ObjectParameter("fldMasir", typeof(string));
    
            var fldMatnHtmlParameter = fldMatnHtml != null ?
                new ObjectParameter("fldMatnHtml", fldMatnHtml) :
                new ObjectParameter("fldMatnHtml", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PageHtmlInsert", fldTitleParameter, fldMasirParameter, fldMatnHtmlParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_PageHtmlSelect> sp_PageHtmlSelect(string fieldname, string value, Nullable<int> fldUserId, string fldPass, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldPassParameter = fldPass != null ?
                new ObjectParameter("fldPass", fldPass) :
                new ObjectParameter("fldPass", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PageHtmlSelect>("sp_PageHtmlSelect", fieldnameParameter, valueParameter, fldUserIdParameter, fldPassParameter, hParameter);
        }
    
        public virtual int sp_PageHtmlUpdate(Nullable<int> fldId, string fldMatnHtml, Nullable<long> fldUserId, string fldDesc, string pass)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldMatnHtmlParameter = fldMatnHtml != null ?
                new ObjectParameter("fldMatnHtml", fldMatnHtml) :
                new ObjectParameter("fldMatnHtml", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PageHtmlUpdate", fldIdParameter, fldMatnHtmlParameter, fldUserIdParameter, fldDescParameter, passParameter);
        }
    
        public virtual int sp_PardakhtFileDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PardakhtFileDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_PardakhtFileInsert(ObjectParameter fldID, Nullable<int> fldBankId, string fldFileName, Nullable<System.DateTime> fldDateSendFile, Nullable<long> fldUserId, string fldDesc)
        {
            var fldBankIdParameter = fldBankId.HasValue ?
                new ObjectParameter("fldBankId", fldBankId) :
                new ObjectParameter("fldBankId", typeof(int));
    
            var fldFileNameParameter = fldFileName != null ?
                new ObjectParameter("fldFileName", fldFileName) :
                new ObjectParameter("fldFileName", typeof(string));
    
            var fldDateSendFileParameter = fldDateSendFile.HasValue ?
                new ObjectParameter("fldDateSendFile", fldDateSendFile) :
                new ObjectParameter("fldDateSendFile", typeof(System.DateTime));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PardakhtFileInsert", fldID, fldBankIdParameter, fldFileNameParameter, fldDateSendFileParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int sp_PardakhtFiles_DetailDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PardakhtFiles_DetailDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_PardakhtFiles_DetailInsert(ObjectParameter fldID, string fldShenaseGhabz, string fldShomarePardakht, Nullable<System.DateTime> fldTarikhPardakht, string fldCodeRahgiry, Nullable<int> fldNahvePardakhtId, Nullable<int> fldPardakhtFileId, Nullable<int> fldCountryDivisionId, Nullable<long> fldUserId, string fldDesc)
        {
            var fldShenaseGhabzParameter = fldShenaseGhabz != null ?
                new ObjectParameter("fldShenaseGhabz", fldShenaseGhabz) :
                new ObjectParameter("fldShenaseGhabz", typeof(string));
    
            var fldShomarePardakhtParameter = fldShomarePardakht != null ?
                new ObjectParameter("fldShomarePardakht", fldShomarePardakht) :
                new ObjectParameter("fldShomarePardakht", typeof(string));
    
            var fldTarikhPardakhtParameter = fldTarikhPardakht.HasValue ?
                new ObjectParameter("fldTarikhPardakht", fldTarikhPardakht) :
                new ObjectParameter("fldTarikhPardakht", typeof(System.DateTime));
    
            var fldCodeRahgiryParameter = fldCodeRahgiry != null ?
                new ObjectParameter("fldCodeRahgiry", fldCodeRahgiry) :
                new ObjectParameter("fldCodeRahgiry", typeof(string));
    
            var fldNahvePardakhtIdParameter = fldNahvePardakhtId.HasValue ?
                new ObjectParameter("fldNahvePardakhtId", fldNahvePardakhtId) :
                new ObjectParameter("fldNahvePardakhtId", typeof(int));
    
            var fldPardakhtFileIdParameter = fldPardakhtFileId.HasValue ?
                new ObjectParameter("fldPardakhtFileId", fldPardakhtFileId) :
                new ObjectParameter("fldPardakhtFileId", typeof(int));
    
            var fldCountryDivisionIdParameter = fldCountryDivisionId.HasValue ?
                new ObjectParameter("fldCountryDivisionId", fldCountryDivisionId) :
                new ObjectParameter("fldCountryDivisionId", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PardakhtFiles_DetailInsert", fldID, fldShenaseGhabzParameter, fldShomarePardakhtParameter, fldTarikhPardakhtParameter, fldCodeRahgiryParameter, fldNahvePardakhtIdParameter, fldPardakhtFileIdParameter, fldCountryDivisionIdParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_PardakhtFiles_DetailSelect> sp_PardakhtFiles_DetailSelect(string fieldname, string value, string value2, string azTarikh, string taTarikh, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var value2Parameter = value2 != null ?
                new ObjectParameter("value2", value2) :
                new ObjectParameter("value2", typeof(string));
    
            var azTarikhParameter = azTarikh != null ?
                new ObjectParameter("AzTarikh", azTarikh) :
                new ObjectParameter("AzTarikh", typeof(string));
    
            var taTarikhParameter = taTarikh != null ?
                new ObjectParameter("TaTarikh", taTarikh) :
                new ObjectParameter("TaTarikh", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PardakhtFiles_DetailSelect>("sp_PardakhtFiles_DetailSelect", fieldnameParameter, valueParameter, value2Parameter, azTarikhParameter, taTarikhParameter, hParameter);
        }
    
        public virtual int sp_PardakhtFiles_DetailUpdate(Nullable<int> fldId, string fldShenaseGhabz, string fldShomarePardakht, Nullable<System.DateTime> fldTarikhPardakht, string fldCodeRahgiry, Nullable<int> fldNahvePardakhtId, Nullable<int> fldPardakhtFileId, Nullable<long> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldShenaseGhabzParameter = fldShenaseGhabz != null ?
                new ObjectParameter("fldShenaseGhabz", fldShenaseGhabz) :
                new ObjectParameter("fldShenaseGhabz", typeof(string));
    
            var fldShomarePardakhtParameter = fldShomarePardakht != null ?
                new ObjectParameter("fldShomarePardakht", fldShomarePardakht) :
                new ObjectParameter("fldShomarePardakht", typeof(string));
    
            var fldTarikhPardakhtParameter = fldTarikhPardakht.HasValue ?
                new ObjectParameter("fldTarikhPardakht", fldTarikhPardakht) :
                new ObjectParameter("fldTarikhPardakht", typeof(System.DateTime));
    
            var fldCodeRahgiryParameter = fldCodeRahgiry != null ?
                new ObjectParameter("fldCodeRahgiry", fldCodeRahgiry) :
                new ObjectParameter("fldCodeRahgiry", typeof(string));
    
            var fldNahvePardakhtIdParameter = fldNahvePardakhtId.HasValue ?
                new ObjectParameter("fldNahvePardakhtId", fldNahvePardakhtId) :
                new ObjectParameter("fldNahvePardakhtId", typeof(int));
    
            var fldPardakhtFileIdParameter = fldPardakhtFileId.HasValue ?
                new ObjectParameter("fldPardakhtFileId", fldPardakhtFileId) :
                new ObjectParameter("fldPardakhtFileId", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PardakhtFiles_DetailUpdate", fldIdParameter, fldShenaseGhabzParameter, fldShomarePardakhtParameter, fldTarikhPardakhtParameter, fldCodeRahgiryParameter, fldNahvePardakhtIdParameter, fldPardakhtFileIdParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_PardakhtFileSelect> sp_PardakhtFileSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PardakhtFileSelect>("sp_PardakhtFileSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_PardakhtFileUpdate(Nullable<int> fldId, Nullable<int> fldBankId, string fldFileName, Nullable<System.DateTime> fldDateSendFile, Nullable<long> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldBankIdParameter = fldBankId.HasValue ?
                new ObjectParameter("fldBankId", fldBankId) :
                new ObjectParameter("fldBankId", typeof(int));
    
            var fldFileNameParameter = fldFileName != null ?
                new ObjectParameter("fldFileName", fldFileName) :
                new ObjectParameter("fldFileName", typeof(string));
    
            var fldDateSendFileParameter = fldDateSendFile.HasValue ?
                new ObjectParameter("fldDateSendFile", fldDateSendFile) :
                new ObjectParameter("fldDateSendFile", typeof(System.DateTime));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PardakhtFileUpdate", fldIdParameter, fldBankIdParameter, fldFileNameParameter, fldDateSendFileParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_Pattern_LogSelect> sp_Pattern_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Pattern_LogSelect>("sp_Pattern_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PatternDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PatternDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PatternInsert(Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision, string fldPattern, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            var fldPatternParameter = fldPattern != null ?
                new ObjectParameter("fldPattern", fldPattern) :
                new ObjectParameter("fldPattern", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PatternInsert", fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter, fldPatternParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PatternSelect> sp_PatternSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass, Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PatternSelect>("sp_PatternSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter, fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter);
        }
    
        public virtual int sp_PatternUpdate(Nullable<int> fldID, Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision, string fldPattern, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            var fldPatternParameter = fldPattern != null ?
                new ObjectParameter("fldPattern", fldPattern) :
                new ObjectParameter("fldPattern", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PatternUpdate", fldIDParameter, fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter, fldPatternParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PcPosInfoDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosInfoDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_PcPosInfoInsert(Nullable<int> fldBankId, Nullable<int> fldDivType, Nullable<int> fldDivCode, Nullable<long> fldUserId, string fldDesc)
        {
            var fldBankIdParameter = fldBankId.HasValue ?
                new ObjectParameter("fldBankId", fldBankId) :
                new ObjectParameter("fldBankId", typeof(int));
    
            var fldDivTypeParameter = fldDivType.HasValue ?
                new ObjectParameter("fldDivType", fldDivType) :
                new ObjectParameter("fldDivType", typeof(int));
    
            var fldDivCodeParameter = fldDivCode.HasValue ?
                new ObjectParameter("fldDivCode", fldDivCode) :
                new ObjectParameter("fldDivCode", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosInfoInsert", fldBankIdParameter, fldDivTypeParameter, fldDivCodeParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_PcPosInfoSelect> sp_PcPosInfoSelect(string fieldname, string value, Nullable<int> value1, Nullable<int> value2, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var value1Parameter = value1.HasValue ?
                new ObjectParameter("value1", value1) :
                new ObjectParameter("value1", typeof(int));
    
            var value2Parameter = value2.HasValue ?
                new ObjectParameter("Value2", value2) :
                new ObjectParameter("Value2", typeof(int));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PcPosInfoSelect>("sp_PcPosInfoSelect", fieldnameParameter, valueParameter, value1Parameter, value2Parameter, hParameter);
        }
    
        public virtual int sp_PcPosInfoUpdate(Nullable<int> fldId, Nullable<int> fldBankId, Nullable<int> fldDivType, Nullable<int> fldDivCode, Nullable<long> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldBankIdParameter = fldBankId.HasValue ?
                new ObjectParameter("fldBankId", fldBankId) :
                new ObjectParameter("fldBankId", typeof(int));
    
            var fldDivTypeParameter = fldDivType.HasValue ?
                new ObjectParameter("fldDivType", fldDivType) :
                new ObjectParameter("fldDivType", typeof(int));
    
            var fldDivCodeParameter = fldDivCode.HasValue ?
                new ObjectParameter("fldDivCode", fldDivCode) :
                new ObjectParameter("fldDivCode", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosInfoUpdate", fldIdParameter, fldBankIdParameter, fldDivTypeParameter, fldDivCodeParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int sp_PcPosIPDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosIPDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_PcPosIPInsert(ObjectParameter fldID, Nullable<int> fldPcPosId, string fldIP, string fldSerialNum, Nullable<long> fldUserId, string fldDesc)
        {
            var fldPcPosIdParameter = fldPcPosId.HasValue ?
                new ObjectParameter("fldPcPosId", fldPcPosId) :
                new ObjectParameter("fldPcPosId", typeof(int));
    
            var fldIPParameter = fldIP != null ?
                new ObjectParameter("fldIP", fldIP) :
                new ObjectParameter("fldIP", typeof(string));
    
            var fldSerialNumParameter = fldSerialNum != null ?
                new ObjectParameter("fldSerialNum", fldSerialNum) :
                new ObjectParameter("fldSerialNum", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosIPInsert", fldID, fldPcPosIdParameter, fldIPParameter, fldSerialNumParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_PcPosIPSelect> sp_PcPosIPSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PcPosIPSelect>("sp_PcPosIPSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_PcPosIPUpdate(Nullable<int> fldId, Nullable<int> fldPcPosId, string fldIP, string fldSerialNum, Nullable<long> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldPcPosIdParameter = fldPcPosId.HasValue ?
                new ObjectParameter("fldPcPosId", fldPcPosId) :
                new ObjectParameter("fldPcPosId", typeof(int));
    
            var fldIPParameter = fldIP != null ?
                new ObjectParameter("fldIP", fldIP) :
                new ObjectParameter("fldIP", typeof(string));
    
            var fldSerialNumParameter = fldSerialNum != null ?
                new ObjectParameter("fldSerialNum", fldSerialNum) :
                new ObjectParameter("fldSerialNum", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosIPUpdate", fldIdParameter, fldPcPosIdParameter, fldIPParameter, fldSerialNumParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int sp_PcPosParam_Detail_InfoIdDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosParam_Detail_InfoIdDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_PcPosParam_DetailDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosParam_DetailDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_PcPosParam_DetailInsert(Nullable<int> fldParamId, string fldValue, Nullable<long> fldUserId, string fldDesc, Nullable<int> fldPcPosInfoId)
        {
            var fldParamIdParameter = fldParamId.HasValue ?
                new ObjectParameter("fldParamId", fldParamId) :
                new ObjectParameter("fldParamId", typeof(int));
    
            var fldValueParameter = fldValue != null ?
                new ObjectParameter("fldValue", fldValue) :
                new ObjectParameter("fldValue", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldPcPosInfoIdParameter = fldPcPosInfoId.HasValue ?
                new ObjectParameter("fldPcPosInfoId", fldPcPosInfoId) :
                new ObjectParameter("fldPcPosInfoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosParam_DetailInsert", fldParamIdParameter, fldValueParameter, fldUserIdParameter, fldDescParameter, fldPcPosInfoIdParameter);
        }
    
        public virtual ObjectResult<sp_PcPosParam_DetailSelect> sp_PcPosParam_DetailSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PcPosParam_DetailSelect>("sp_PcPosParam_DetailSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_PcPosParam_DetailUpdate(Nullable<int> fldId, Nullable<int> fldParamId, string fldValue, Nullable<long> fldUserId, string fldDesc, Nullable<int> fldPcPosInfoId)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldParamIdParameter = fldParamId.HasValue ?
                new ObjectParameter("fldParamId", fldParamId) :
                new ObjectParameter("fldParamId", typeof(int));
    
            var fldValueParameter = fldValue != null ?
                new ObjectParameter("fldValue", fldValue) :
                new ObjectParameter("fldValue", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldPcPosInfoIdParameter = fldPcPosInfoId.HasValue ?
                new ObjectParameter("fldPcPosInfoId", fldPcPosInfoId) :
                new ObjectParameter("fldPcPosInfoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosParam_DetailUpdate", fldIdParameter, fldParamIdParameter, fldValueParameter, fldUserIdParameter, fldDescParameter, fldPcPosInfoIdParameter);
        }
    
        public virtual int sp_PcPosParametrDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosParametrDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_PcPosParametrInsert(string fldFaName, string fldEnName, Nullable<int> fldBankId, Nullable<long> fldUserId, string fldDesc)
        {
            var fldFaNameParameter = fldFaName != null ?
                new ObjectParameter("fldFaName", fldFaName) :
                new ObjectParameter("fldFaName", typeof(string));
    
            var fldEnNameParameter = fldEnName != null ?
                new ObjectParameter("fldEnName", fldEnName) :
                new ObjectParameter("fldEnName", typeof(string));
    
            var fldBankIdParameter = fldBankId.HasValue ?
                new ObjectParameter("fldBankId", fldBankId) :
                new ObjectParameter("fldBankId", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosParametrInsert", fldFaNameParameter, fldEnNameParameter, fldBankIdParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_PcPosParametrSelect> sp_PcPosParametrSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PcPosParametrSelect>("sp_PcPosParametrSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_PcPosParametrUpdate(Nullable<int> fldId, string fldFaName, string fldEnName, Nullable<int> fldBankId, Nullable<long> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldFaNameParameter = fldFaName != null ?
                new ObjectParameter("fldFaName", fldFaName) :
                new ObjectParameter("fldFaName", typeof(string));
    
            var fldEnNameParameter = fldEnName != null ?
                new ObjectParameter("fldEnName", fldEnName) :
                new ObjectParameter("fldEnName", typeof(string));
    
            var fldBankIdParameter = fldBankId.HasValue ?
                new ObjectParameter("fldBankId", fldBankId) :
                new ObjectParameter("fldBankId", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosParametrUpdate", fldIdParameter, fldFaNameParameter, fldEnNameParameter, fldBankIdParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int sp_PcPosTransactionDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosTransactionDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_PcPosTransactionInsert(ObjectParameter fldId, Nullable<int> fldCarFileId, Nullable<int> fldPrice, Nullable<bool> fldStatus, string fldTrackingCode, Nullable<long> fldUserId, string fldDesc, string fldShGhabz, string fldShpardakht)
        {
            var fldCarFileIdParameter = fldCarFileId.HasValue ?
                new ObjectParameter("fldCarFileId", fldCarFileId) :
                new ObjectParameter("fldCarFileId", typeof(int));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldStatusParameter = fldStatus.HasValue ?
                new ObjectParameter("fldStatus", fldStatus) :
                new ObjectParameter("fldStatus", typeof(bool));
    
            var fldTrackingCodeParameter = fldTrackingCode != null ?
                new ObjectParameter("fldTrackingCode", fldTrackingCode) :
                new ObjectParameter("fldTrackingCode", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldShGhabzParameter = fldShGhabz != null ?
                new ObjectParameter("fldShGhabz", fldShGhabz) :
                new ObjectParameter("fldShGhabz", typeof(string));
    
            var fldShpardakhtParameter = fldShpardakht != null ?
                new ObjectParameter("fldShpardakht", fldShpardakht) :
                new ObjectParameter("fldShpardakht", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosTransactionInsert", fldId, fldCarFileIdParameter, fldPriceParameter, fldStatusParameter, fldTrackingCodeParameter, fldUserIdParameter, fldDescParameter, fldShGhabzParameter, fldShpardakhtParameter);
        }
    
        public virtual ObjectResult<sp_PcPosTransactionSelect> sp_PcPosTransactionSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PcPosTransactionSelect>("sp_PcPosTransactionSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_PcPosTransactionUpdate(Nullable<int> fldId, Nullable<int> fldCarFileId, Nullable<int> fldPrice, Nullable<bool> fldStatus, string fldTrackingCode, Nullable<long> fldUserId, string fldDesc, Nullable<System.DateTime> fldDate, string fldShGhabz, string fldShpardakht)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldCarFileIdParameter = fldCarFileId.HasValue ?
                new ObjectParameter("fldCarFileId", fldCarFileId) :
                new ObjectParameter("fldCarFileId", typeof(int));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldStatusParameter = fldStatus.HasValue ?
                new ObjectParameter("fldStatus", fldStatus) :
                new ObjectParameter("fldStatus", typeof(bool));
    
            var fldTrackingCodeParameter = fldTrackingCode != null ?
                new ObjectParameter("fldTrackingCode", fldTrackingCode) :
                new ObjectParameter("fldTrackingCode", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldDateParameter = fldDate.HasValue ?
                new ObjectParameter("fldDate", fldDate) :
                new ObjectParameter("fldDate", typeof(System.DateTime));
    
            var fldShGhabzParameter = fldShGhabz != null ?
                new ObjectParameter("fldShGhabz", fldShGhabz) :
                new ObjectParameter("fldShGhabz", typeof(string));
    
            var fldShpardakhtParameter = fldShpardakht != null ?
                new ObjectParameter("fldShpardakht", fldShpardakht) :
                new ObjectParameter("fldShpardakht", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosTransactionUpdate", fldIdParameter, fldCarFileIdParameter, fldPriceParameter, fldStatusParameter, fldTrackingCodeParameter, fldUserIdParameter, fldDescParameter, fldDateParameter, fldShGhabzParameter, fldShpardakhtParameter);
        }
    
        public virtual int sp_PcPosTransactionUpdate_Status(Nullable<int> fldId, string fldTrackingCode, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldTrackingCodeParameter = fldTrackingCode != null ?
                new ObjectParameter("fldTrackingCode", fldTrackingCode) :
                new ObjectParameter("fldTrackingCode", typeof(string));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosTransactionUpdate_Status", fldIdParameter, fldTrackingCodeParameter, fldDescParameter);
        }
    
        public virtual int sp_PcPosUserDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosUserDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_PcPosUserInsert(Nullable<int> fldPosIPId, Nullable<long> fldIdUser, Nullable<long> fldUserId, string fldDesc)
        {
            var fldPosIPIdParameter = fldPosIPId.HasValue ?
                new ObjectParameter("fldPosIPId", fldPosIPId) :
                new ObjectParameter("fldPosIPId", typeof(int));
    
            var fldIdUserParameter = fldIdUser.HasValue ?
                new ObjectParameter("fldIdUser", fldIdUser) :
                new ObjectParameter("fldIdUser", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosUserInsert", fldPosIPIdParameter, fldIdUserParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int sp_PcPosUserPosIPIdDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosUserPosIPIdDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual ObjectResult<sp_PcPosUserSelect> sp_PcPosUserSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PcPosUserSelect>("sp_PcPosUserSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_PcPosUserUpdate(Nullable<int> fldId, Nullable<int> fldPosIPId, Nullable<long> fldIdUser, Nullable<long> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldPosIPIdParameter = fldPosIPId.HasValue ?
                new ObjectParameter("fldPosIPId", fldPosIPId) :
                new ObjectParameter("fldPosIPId", typeof(int));
    
            var fldIdUserParameter = fldIdUser.HasValue ?
                new ObjectParameter("fldIdUser", fldIdUser) :
                new ObjectParameter("fldIdUser", typeof(long));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PcPosUserUpdate", fldIdParameter, fldPosIPIdParameter, fldIdUserParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int Sp_Peacockery_CopyInsert(Nullable<long> fldPeacockeryId, byte[] fldCopy)
        {
            var fldPeacockeryIdParameter = fldPeacockeryId.HasValue ?
                new ObjectParameter("fldPeacockeryId", fldPeacockeryId) :
                new ObjectParameter("fldPeacockeryId", typeof(long));
    
            var fldCopyParameter = fldCopy != null ?
                new ObjectParameter("fldCopy", fldCopy) :
                new ObjectParameter("fldCopy", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Peacockery_CopyInsert", fldPeacockeryIdParameter, fldCopyParameter);
        }
    
        public virtual ObjectResult<Sp_Peacockery_CopySelect> Sp_Peacockery_CopySelect(Nullable<long> fldPeacockeryId)
        {
            var fldPeacockeryIdParameter = fldPeacockeryId.HasValue ?
                new ObjectParameter("fldPeacockeryId", fldPeacockeryId) :
                new ObjectParameter("fldPeacockeryId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Peacockery_CopySelect>("Sp_Peacockery_CopySelect", fldPeacockeryIdParameter);
        }
    
        public virtual ObjectResult<sp_Peacockery_LogSelect> sp_Peacockery_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Peacockery_LogSelect>("sp_Peacockery_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PeacockeryDelete(Nullable<long> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PeacockeryDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PeacockeryInsert(Nullable<long> fldCarFileID, Nullable<System.DateTime> fldIssuanceDate, Nullable<int> fldAccountBankID, string fldPeacockeryCode, Nullable<int> fldMainComplications, Nullable<int> fldFine, Nullable<int> fldValueAdded, Nullable<int> fldOther, Nullable<int> fldShowMoney, Nullable<System.DateTime> fldFromDate, Nullable<System.DateTime> fldToDate, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<int> fldDiscountedAmount, Nullable<int> fldDiscountedValue, Nullable<int> fldDiscountsOther, string fldShGhabz, string fldShPardakht, ObjectParameter fldId, Nullable<int> fldDiscountsFine)
        {
            var fldCarFileIDParameter = fldCarFileID.HasValue ?
                new ObjectParameter("fldCarFileID", fldCarFileID) :
                new ObjectParameter("fldCarFileID", typeof(long));
    
            var fldIssuanceDateParameter = fldIssuanceDate.HasValue ?
                new ObjectParameter("fldIssuanceDate", fldIssuanceDate) :
                new ObjectParameter("fldIssuanceDate", typeof(System.DateTime));
    
            var fldAccountBankIDParameter = fldAccountBankID.HasValue ?
                new ObjectParameter("fldAccountBankID", fldAccountBankID) :
                new ObjectParameter("fldAccountBankID", typeof(int));
    
            var fldPeacockeryCodeParameter = fldPeacockeryCode != null ?
                new ObjectParameter("fldPeacockeryCode", fldPeacockeryCode) :
                new ObjectParameter("fldPeacockeryCode", typeof(string));
    
            var fldMainComplicationsParameter = fldMainComplications.HasValue ?
                new ObjectParameter("fldMainComplications", fldMainComplications) :
                new ObjectParameter("fldMainComplications", typeof(int));
    
            var fldFineParameter = fldFine.HasValue ?
                new ObjectParameter("fldFine", fldFine) :
                new ObjectParameter("fldFine", typeof(int));
    
            var fldValueAddedParameter = fldValueAdded.HasValue ?
                new ObjectParameter("fldValueAdded", fldValueAdded) :
                new ObjectParameter("fldValueAdded", typeof(int));
    
            var fldOtherParameter = fldOther.HasValue ?
                new ObjectParameter("fldOther", fldOther) :
                new ObjectParameter("fldOther", typeof(int));
    
            var fldShowMoneyParameter = fldShowMoney.HasValue ?
                new ObjectParameter("fldShowMoney", fldShowMoney) :
                new ObjectParameter("fldShowMoney", typeof(int));
    
            var fldFromDateParameter = fldFromDate.HasValue ?
                new ObjectParameter("fldFromDate", fldFromDate) :
                new ObjectParameter("fldFromDate", typeof(System.DateTime));
    
            var fldToDateParameter = fldToDate.HasValue ?
                new ObjectParameter("fldToDate", fldToDate) :
                new ObjectParameter("fldToDate", typeof(System.DateTime));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldDiscountedAmountParameter = fldDiscountedAmount.HasValue ?
                new ObjectParameter("fldDiscountedAmount", fldDiscountedAmount) :
                new ObjectParameter("fldDiscountedAmount", typeof(int));
    
            var fldDiscountedValueParameter = fldDiscountedValue.HasValue ?
                new ObjectParameter("fldDiscountedValue", fldDiscountedValue) :
                new ObjectParameter("fldDiscountedValue", typeof(int));
    
            var fldDiscountsOtherParameter = fldDiscountsOther.HasValue ?
                new ObjectParameter("fldDiscountsOther", fldDiscountsOther) :
                new ObjectParameter("fldDiscountsOther", typeof(int));
    
            var fldShGhabzParameter = fldShGhabz != null ?
                new ObjectParameter("fldShGhabz", fldShGhabz) :
                new ObjectParameter("fldShGhabz", typeof(string));
    
            var fldShPardakhtParameter = fldShPardakht != null ?
                new ObjectParameter("fldShPardakht", fldShPardakht) :
                new ObjectParameter("fldShPardakht", typeof(string));
    
            var fldDiscountsFineParameter = fldDiscountsFine.HasValue ?
                new ObjectParameter("fldDiscountsFine", fldDiscountsFine) :
                new ObjectParameter("fldDiscountsFine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PeacockeryInsert", fldCarFileIDParameter, fldIssuanceDateParameter, fldAccountBankIDParameter, fldPeacockeryCodeParameter, fldMainComplicationsParameter, fldFineParameter, fldValueAddedParameter, fldOtherParameter, fldShowMoneyParameter, fldFromDateParameter, fldToDateParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldDiscountedAmountParameter, fldDiscountedValueParameter, fldDiscountsOtherParameter, fldShGhabzParameter, fldShPardakhtParameter, fldId, fldDiscountsFineParameter);
        }
    
        public virtual ObjectResult<sp_PeacockerySelect> sp_PeacockerySelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PeacockerySelect>("sp_PeacockerySelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<Sp_PeacockeryShGhabz_Pardakht> Sp_PeacockeryShGhabz_Pardakht(string value, string value2, Nullable<int> h)
        {
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var value2Parameter = value2 != null ?
                new ObjectParameter("value2", value2) :
                new ObjectParameter("value2", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PeacockeryShGhabz_Pardakht>("Sp_PeacockeryShGhabz_Pardakht", valueParameter, value2Parameter, hParameter);
        }
    
        public virtual int sp_PeacockeryUpdate(Nullable<long> fldID, Nullable<long> fldCarFileID, Nullable<System.DateTime> fldIssuanceDate, Nullable<int> fldAccountBankID, string fldPeacockeryCode, Nullable<int> fldMainComplications, Nullable<int> fldFine, Nullable<int> fldValueAdded, Nullable<int> fldOther, Nullable<int> fldShowMoney, Nullable<System.DateTime> fldFromDate, Nullable<System.DateTime> fldToDate, Nullable<int> fldLastDebt, Nullable<long> fldUserID, string fldDesc, string fldUserPass, Nullable<int> fldDiscountedAmount, Nullable<int> fldDiscountedValue, Nullable<int> fldDiscountsOther, string fldShGhabz, string fldShPardakht, Nullable<int> fldDiscountsFine)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldCarFileIDParameter = fldCarFileID.HasValue ?
                new ObjectParameter("fldCarFileID", fldCarFileID) :
                new ObjectParameter("fldCarFileID", typeof(long));
    
            var fldIssuanceDateParameter = fldIssuanceDate.HasValue ?
                new ObjectParameter("fldIssuanceDate", fldIssuanceDate) :
                new ObjectParameter("fldIssuanceDate", typeof(System.DateTime));
    
            var fldAccountBankIDParameter = fldAccountBankID.HasValue ?
                new ObjectParameter("fldAccountBankID", fldAccountBankID) :
                new ObjectParameter("fldAccountBankID", typeof(int));
    
            var fldPeacockeryCodeParameter = fldPeacockeryCode != null ?
                new ObjectParameter("fldPeacockeryCode", fldPeacockeryCode) :
                new ObjectParameter("fldPeacockeryCode", typeof(string));
    
            var fldMainComplicationsParameter = fldMainComplications.HasValue ?
                new ObjectParameter("fldMainComplications", fldMainComplications) :
                new ObjectParameter("fldMainComplications", typeof(int));
    
            var fldFineParameter = fldFine.HasValue ?
                new ObjectParameter("fldFine", fldFine) :
                new ObjectParameter("fldFine", typeof(int));
    
            var fldValueAddedParameter = fldValueAdded.HasValue ?
                new ObjectParameter("fldValueAdded", fldValueAdded) :
                new ObjectParameter("fldValueAdded", typeof(int));
    
            var fldOtherParameter = fldOther.HasValue ?
                new ObjectParameter("fldOther", fldOther) :
                new ObjectParameter("fldOther", typeof(int));
    
            var fldShowMoneyParameter = fldShowMoney.HasValue ?
                new ObjectParameter("fldShowMoney", fldShowMoney) :
                new ObjectParameter("fldShowMoney", typeof(int));
    
            var fldFromDateParameter = fldFromDate.HasValue ?
                new ObjectParameter("fldFromDate", fldFromDate) :
                new ObjectParameter("fldFromDate", typeof(System.DateTime));
    
            var fldToDateParameter = fldToDate.HasValue ?
                new ObjectParameter("fldToDate", fldToDate) :
                new ObjectParameter("fldToDate", typeof(System.DateTime));
    
            var fldLastDebtParameter = fldLastDebt.HasValue ?
                new ObjectParameter("fldLastDebt", fldLastDebt) :
                new ObjectParameter("fldLastDebt", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldDiscountedAmountParameter = fldDiscountedAmount.HasValue ?
                new ObjectParameter("fldDiscountedAmount", fldDiscountedAmount) :
                new ObjectParameter("fldDiscountedAmount", typeof(int));
    
            var fldDiscountedValueParameter = fldDiscountedValue.HasValue ?
                new ObjectParameter("fldDiscountedValue", fldDiscountedValue) :
                new ObjectParameter("fldDiscountedValue", typeof(int));
    
            var fldDiscountsOtherParameter = fldDiscountsOther.HasValue ?
                new ObjectParameter("fldDiscountsOther", fldDiscountsOther) :
                new ObjectParameter("fldDiscountsOther", typeof(int));
    
            var fldShGhabzParameter = fldShGhabz != null ?
                new ObjectParameter("fldShGhabz", fldShGhabz) :
                new ObjectParameter("fldShGhabz", typeof(string));
    
            var fldShPardakhtParameter = fldShPardakht != null ?
                new ObjectParameter("fldShPardakht", fldShPardakht) :
                new ObjectParameter("fldShPardakht", typeof(string));
    
            var fldDiscountsFineParameter = fldDiscountsFine.HasValue ?
                new ObjectParameter("fldDiscountsFine", fldDiscountsFine) :
                new ObjectParameter("fldDiscountsFine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PeacockeryUpdate", fldIDParameter, fldCarFileIDParameter, fldIssuanceDateParameter, fldAccountBankIDParameter, fldPeacockeryCodeParameter, fldMainComplicationsParameter, fldFineParameter, fldValueAddedParameter, fldOtherParameter, fldShowMoneyParameter, fldFromDateParameter, fldToDateParameter, fldLastDebtParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter, fldDiscountedAmountParameter, fldDiscountedValueParameter, fldDiscountsOtherParameter, fldShGhabzParameter, fldShPardakhtParameter, fldDiscountsFineParameter);
        }
    
        public virtual ObjectResult<sp_Permission_LogSelect> sp_Permission_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Permission_LogSelect>("sp_Permission_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PermissionDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PermissionInsert(Nullable<int> fldUserGroupID, Nullable<int> fldApplicationPartID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldUserGroupIDParameter = fldUserGroupID.HasValue ?
                new ObjectParameter("fldUserGroupID", fldUserGroupID) :
                new ObjectParameter("fldUserGroupID", typeof(int));
    
            var fldApplicationPartIDParameter = fldApplicationPartID.HasValue ?
                new ObjectParameter("fldApplicationPartID", fldApplicationPartID) :
                new ObjectParameter("fldApplicationPartID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionInsert", fldUserGroupIDParameter, fldApplicationPartIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PermissionSelect> sp_PermissionSelect(string fieldName, Nullable<int> fldApplicationPartID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("FieldName", fieldName) :
                new ObjectParameter("FieldName", typeof(string));
    
            var fldApplicationPartIDParameter = fldApplicationPartID.HasValue ?
                new ObjectParameter("fldApplicationPartID", fldApplicationPartID) :
                new ObjectParameter("fldApplicationPartID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PermissionSelect>("sp_PermissionSelect", fieldNameParameter, fldApplicationPartIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PermissionUpdate(Nullable<int> fldID, Nullable<int> fldUserGroupID, Nullable<int> fldApplicationPartID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserGroupIDParameter = fldUserGroupID.HasValue ?
                new ObjectParameter("fldUserGroupID", fldUserGroupID) :
                new ObjectParameter("fldUserGroupID", typeof(int));
    
            var fldApplicationPartIDParameter = fldApplicationPartID.HasValue ?
                new ObjectParameter("fldApplicationPartID", fldApplicationPartID) :
                new ObjectParameter("fldApplicationPartID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionUpdate", fldIDParameter, fldUserGroupIDParameter, fldApplicationPartIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PictureDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PictureDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PictureInsert(byte[] fldPic, Nullable<int> fldMunicipalityPic, Nullable<int> fldBankPic, Nullable<long> fldUserPic, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldMunicipalityPicParameter = fldMunicipalityPic.HasValue ?
                new ObjectParameter("fldMunicipalityPic", fldMunicipalityPic) :
                new ObjectParameter("fldMunicipalityPic", typeof(int));
    
            var fldBankPicParameter = fldBankPic.HasValue ?
                new ObjectParameter("fldBankPic", fldBankPic) :
                new ObjectParameter("fldBankPic", typeof(int));
    
            var fldUserPicParameter = fldUserPic.HasValue ?
                new ObjectParameter("fldUserPic", fldUserPic) :
                new ObjectParameter("fldUserPic", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PictureInsert", fldPicParameter, fldMunicipalityPicParameter, fldBankPicParameter, fldUserPicParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PictureMunicipality_ImageSelect> sp_PictureMunicipality_ImageSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PictureMunicipality_ImageSelect>("sp_PictureMunicipality_ImageSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PictureMunicipalityDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PictureMunicipalityDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PictureMunicipalityImageDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PictureMunicipalityImageDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PictureMunicipalityImageInsert(Nullable<int> fldPictureMunicipalityID, byte[] fldPic, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldPictureMunicipalityIDParameter = fldPictureMunicipalityID.HasValue ?
                new ObjectParameter("fldPictureMunicipalityID", fldPictureMunicipalityID) :
                new ObjectParameter("fldPictureMunicipalityID", typeof(int));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PictureMunicipalityImageInsert", fldPictureMunicipalityIDParameter, fldPicParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PictureMunicipalityImageSelect> sp_PictureMunicipalityImageSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PictureMunicipalityImageSelect>("sp_PictureMunicipalityImageSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PictureMunicipalityImageUpdate(Nullable<int> fldID, Nullable<int> fldPictureMunicipalityID, byte[] fldPic, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldPictureMunicipalityIDParameter = fldPictureMunicipalityID.HasValue ?
                new ObjectParameter("fldPictureMunicipalityID", fldPictureMunicipalityID) :
                new ObjectParameter("fldPictureMunicipalityID", typeof(int));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PictureMunicipalityImageUpdate", fldIDParameter, fldPictureMunicipalityIDParameter, fldPicParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PictureMunicipalityInsert(string fldName, Nullable<bool> fldShowStatus, Nullable<int> fldMunicipalityID, byte[] fldPic, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldShowStatusParameter = fldShowStatus.HasValue ?
                new ObjectParameter("fldShowStatus", fldShowStatus) :
                new ObjectParameter("fldShowStatus", typeof(bool));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PictureMunicipalityInsert", fldNameParameter, fldShowStatusParameter, fldMunicipalityIDParameter, fldPicParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PictureMunicipalitySelect> sp_PictureMunicipalitySelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PictureMunicipalitySelect>("sp_PictureMunicipalitySelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PictureMunicipalityUpdate(Nullable<int> fldID, string fldName, Nullable<bool> fldShowStatus, Nullable<int> fldMunicipalityID, byte[] fldPic, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldShowStatusParameter = fldShowStatus.HasValue ?
                new ObjectParameter("fldShowStatus", fldShowStatus) :
                new ObjectParameter("fldShowStatus", typeof(bool));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PictureMunicipalityUpdate", fldIDParameter, fldNameParameter, fldShowStatusParameter, fldMunicipalityIDParameter, fldPicParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PictureSelect> sp_PictureSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PictureSelect>("sp_PictureSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PictureUpdate(Nullable<int> fldID, byte[] fldPic, Nullable<int> fldMunicipalityPic, Nullable<int> fldBankPic, Nullable<long> fldUserPic, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldMunicipalityPicParameter = fldMunicipalityPic.HasValue ?
                new ObjectParameter("fldMunicipalityPic", fldMunicipalityPic) :
                new ObjectParameter("fldMunicipalityPic", typeof(int));
    
            var fldBankPicParameter = fldBankPic.HasValue ?
                new ObjectParameter("fldBankPic", fldBankPic) :
                new ObjectParameter("fldBankPic", typeof(int));
    
            var fldUserPicParameter = fldUserPic.HasValue ?
                new ObjectParameter("fldUserPic", fldUserPic) :
                new ObjectParameter("fldUserPic", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PictureUpdate", fldIDParameter, fldPicParameter, fldMunicipalityPicParameter, fldBankPicParameter, fldUserPicParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PishkhanPosInsert(ObjectParameter fldId, Nullable<long> fldFishId, Nullable<int> fldPrice, Nullable<byte> fldStatus, string fldSerial, string fldPosString, string fldTermId, string fldTrace, string fldRRN, Nullable<int> fldUserId, Nullable<System.DateTime> fldDate, string fldDesc)
        {
            var fldFishIdParameter = fldFishId.HasValue ?
                new ObjectParameter("fldFishId", fldFishId) :
                new ObjectParameter("fldFishId", typeof(long));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldStatusParameter = fldStatus.HasValue ?
                new ObjectParameter("fldStatus", fldStatus) :
                new ObjectParameter("fldStatus", typeof(byte));
    
            var fldSerialParameter = fldSerial != null ?
                new ObjectParameter("fldSerial", fldSerial) :
                new ObjectParameter("fldSerial", typeof(string));
    
            var fldPosStringParameter = fldPosString != null ?
                new ObjectParameter("fldPosString", fldPosString) :
                new ObjectParameter("fldPosString", typeof(string));
    
            var fldTermIdParameter = fldTermId != null ?
                new ObjectParameter("fldTermId", fldTermId) :
                new ObjectParameter("fldTermId", typeof(string));
    
            var fldTraceParameter = fldTrace != null ?
                new ObjectParameter("fldTrace", fldTrace) :
                new ObjectParameter("fldTrace", typeof(string));
    
            var fldRRNParameter = fldRRN != null ?
                new ObjectParameter("fldRRN", fldRRN) :
                new ObjectParameter("fldRRN", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldDateParameter = fldDate.HasValue ?
                new ObjectParameter("fldDate", fldDate) :
                new ObjectParameter("fldDate", typeof(System.DateTime));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PishkhanPosInsert", fldId, fldFishIdParameter, fldPriceParameter, fldStatusParameter, fldSerialParameter, fldPosStringParameter, fldTermIdParameter, fldTraceParameter, fldRRNParameter, fldUserIdParameter, fldDateParameter, fldDescParameter);
        }
    
        public virtual int sp_PishkhanPosResive(Nullable<int> fldId, Nullable<byte> fldStatus, Nullable<int> fldUserId)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldStatusParameter = fldStatus.HasValue ?
                new ObjectParameter("fldStatus", fldStatus) :
                new ObjectParameter("fldStatus", typeof(byte));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PishkhanPosResive", fldIdParameter, fldStatusParameter, fldUserIdParameter);
        }
    
        public virtual ObjectResult<sp_PishkhanPosSelect> sp_PishkhanPosSelect(string field, string value)
        {
            var fieldParameter = field != null ?
                new ObjectParameter("field", field) :
                new ObjectParameter("field", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PishkhanPosSelect>("sp_PishkhanPosSelect", fieldParameter, valueParameter);
        }
    
        public virtual int sp_PishkhanPosVerify(Nullable<int> fldId, Nullable<byte> fldStatus, string fldTermId, string fldTrace, string fldRRN, Nullable<int> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldStatusParameter = fldStatus.HasValue ?
                new ObjectParameter("fldStatus", fldStatus) :
                new ObjectParameter("fldStatus", typeof(byte));
    
            var fldTermIdParameter = fldTermId != null ?
                new ObjectParameter("fldTermId", fldTermId) :
                new ObjectParameter("fldTermId", typeof(string));
    
            var fldTraceParameter = fldTrace != null ?
                new ObjectParameter("fldTrace", fldTrace) :
                new ObjectParameter("fldTrace", typeof(string));
    
            var fldRRNParameter = fldRRN != null ?
                new ObjectParameter("fldRRN", fldRRN) :
                new ObjectParameter("fldRRN", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PishkhanPosVerify", fldIdParameter, fldStatusParameter, fldTermIdParameter, fldTraceParameter, fldRRNParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_PlaqueCity_LogSelect> sp_PlaqueCity_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PlaqueCity_LogSelect>("sp_PlaqueCity_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PlaqueCityDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PlaqueCityDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PlaqueCityInsert(string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PlaqueCityInsert", fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PlaqueCitySelect> sp_PlaqueCitySelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PlaqueCitySelect>("sp_PlaqueCitySelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PlaqueCityUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PlaqueCityUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PlaqueSerial_LogSelect> sp_PlaqueSerial_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PlaqueSerial_LogSelect>("sp_PlaqueSerial_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PlaqueSerialDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PlaqueSerialDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PlaqueSerialInsert(string fldSerial, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldSerialParameter = fldSerial != null ?
                new ObjectParameter("fldSerial", fldSerial) :
                new ObjectParameter("fldSerial", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PlaqueSerialInsert", fldSerialParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PlaqueSerialSelect> sp_PlaqueSerialSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PlaqueSerialSelect>("sp_PlaqueSerialSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PlaqueSerialUpdate(Nullable<int> fldID, string fldSerial, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldSerialParameter = fldSerial != null ?
                new ObjectParameter("fldSerial", fldSerial) :
                new ObjectParameter("fldSerial", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PlaqueSerialUpdate", fldIDParameter, fldSerialParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PlaqueType_LogSelect> sp_PlaqueType_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PlaqueType_LogSelect>("sp_PlaqueType_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PlaqueTypeDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PlaqueTypeDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PlaqueTypeInsert(string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PlaqueTypeInsert", fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PlaqueTypeSelect> sp_PlaqueTypeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PlaqueTypeSelect>("sp_PlaqueTypeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PlaqueTypeUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PlaqueTypeUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Post_LogSelect> sp_Post_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Post_LogSelect>("sp_Post_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PostDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PostDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PostInsert(string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PostInsert", fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_PostSelect> sp_PostSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PostSelect>("sp_PostSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_PostUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PostUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_RegionTree> sp_RegionTree(Nullable<int> type, Nullable<int> code, Nullable<int> filterType)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            var filterTypeParameter = filterType.HasValue ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RegionTree>("sp_RegionTree", typeParameter, codeParameter, filterTypeParameter);
        }
    
        public virtual int sp_RegisterDetailInsert(Nullable<int> fldRegisterId, string fldName, string fldFamily, string fldCodeMelli, string fldFather, string fldBdate)
        {
            var fldRegisterIdParameter = fldRegisterId.HasValue ?
                new ObjectParameter("fldRegisterId", fldRegisterId) :
                new ObjectParameter("fldRegisterId", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldFamilyParameter = fldFamily != null ?
                new ObjectParameter("fldFamily", fldFamily) :
                new ObjectParameter("fldFamily", typeof(string));
    
            var fldCodeMelliParameter = fldCodeMelli != null ?
                new ObjectParameter("fldCodeMelli", fldCodeMelli) :
                new ObjectParameter("fldCodeMelli", typeof(string));
    
            var fldFatherParameter = fldFather != null ?
                new ObjectParameter("fldFather", fldFather) :
                new ObjectParameter("fldFather", typeof(string));
    
            var fldBdateParameter = fldBdate != null ?
                new ObjectParameter("fldBdate", fldBdate) :
                new ObjectParameter("fldBdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegisterDetailInsert", fldRegisterIdParameter, fldNameParameter, fldFamilyParameter, fldCodeMelliParameter, fldFatherParameter, fldBdateParameter);
        }
    
        public virtual ObjectResult<sp_RegisterDetailselect> sp_RegisterDetailselect(Nullable<int> fldRegisterId)
        {
            var fldRegisterIdParameter = fldRegisterId.HasValue ?
                new ObjectParameter("fldRegisterId", fldRegisterId) :
                new ObjectParameter("fldRegisterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RegisterDetailselect>("sp_RegisterDetailselect", fldRegisterIdParameter);
        }
    
        public virtual int sp_RegisterDetailUpdate(Nullable<int> fldid, Nullable<int> fldRegisterId, string fldName, string fldFamily, string fldCodeMelli, string fldFather, string fldBdate)
        {
            var fldidParameter = fldid.HasValue ?
                new ObjectParameter("fldid", fldid) :
                new ObjectParameter("fldid", typeof(int));
    
            var fldRegisterIdParameter = fldRegisterId.HasValue ?
                new ObjectParameter("fldRegisterId", fldRegisterId) :
                new ObjectParameter("fldRegisterId", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldFamilyParameter = fldFamily != null ?
                new ObjectParameter("fldFamily", fldFamily) :
                new ObjectParameter("fldFamily", typeof(string));
    
            var fldCodeMelliParameter = fldCodeMelli != null ?
                new ObjectParameter("fldCodeMelli", fldCodeMelli) :
                new ObjectParameter("fldCodeMelli", typeof(string));
    
            var fldFatherParameter = fldFather != null ?
                new ObjectParameter("fldFather", fldFather) :
                new ObjectParameter("fldFather", typeof(string));
    
            var fldBdateParameter = fldBdate != null ?
                new ObjectParameter("fldBdate", fldBdate) :
                new ObjectParameter("fldBdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegisterDetailUpdate", fldidParameter, fldRegisterIdParameter, fldNameParameter, fldFamilyParameter, fldCodeMelliParameter, fldFatherParameter, fldBdateParameter);
        }
    
        public virtual int Sp_RegisterInsert(ObjectParameter fldId, Nullable<int> fldCodeDaftar, string fldAddress, string fldTel, Nullable<int> fldMunId, Nullable<long> fldLocalId, Nullable<long> fldAreaId, Nullable<bool> fldState, string fldModirDaftar, string fldmodirFamily, string fldcodeMeli, string fldCodeEghtesadi, string fldSh_Sabt, Nullable<bool> fldTypePerson, string fldMobile, string fldExpireDate)
        {
            var fldCodeDaftarParameter = fldCodeDaftar.HasValue ?
                new ObjectParameter("fldCodeDaftar", fldCodeDaftar) :
                new ObjectParameter("fldCodeDaftar", typeof(int));
    
            var fldAddressParameter = fldAddress != null ?
                new ObjectParameter("fldAddress", fldAddress) :
                new ObjectParameter("fldAddress", typeof(string));
    
            var fldTelParameter = fldTel != null ?
                new ObjectParameter("fldTel", fldTel) :
                new ObjectParameter("fldTel", typeof(string));
    
            var fldMunIdParameter = fldMunId.HasValue ?
                new ObjectParameter("fldMunId", fldMunId) :
                new ObjectParameter("fldMunId", typeof(int));
    
            var fldLocalIdParameter = fldLocalId.HasValue ?
                new ObjectParameter("fldLocalId", fldLocalId) :
                new ObjectParameter("fldLocalId", typeof(long));
    
            var fldAreaIdParameter = fldAreaId.HasValue ?
                new ObjectParameter("fldAreaId", fldAreaId) :
                new ObjectParameter("fldAreaId", typeof(long));
    
            var fldStateParameter = fldState.HasValue ?
                new ObjectParameter("fldState", fldState) :
                new ObjectParameter("fldState", typeof(bool));
    
            var fldModirDaftarParameter = fldModirDaftar != null ?
                new ObjectParameter("fldModirDaftar", fldModirDaftar) :
                new ObjectParameter("fldModirDaftar", typeof(string));
    
            var fldmodirFamilyParameter = fldmodirFamily != null ?
                new ObjectParameter("fldmodirFamily", fldmodirFamily) :
                new ObjectParameter("fldmodirFamily", typeof(string));
    
            var fldcodeMeliParameter = fldcodeMeli != null ?
                new ObjectParameter("fldcodeMeli", fldcodeMeli) :
                new ObjectParameter("fldcodeMeli", typeof(string));
    
            var fldCodeEghtesadiParameter = fldCodeEghtesadi != null ?
                new ObjectParameter("fldCodeEghtesadi", fldCodeEghtesadi) :
                new ObjectParameter("fldCodeEghtesadi", typeof(string));
    
            var fldSh_SabtParameter = fldSh_Sabt != null ?
                new ObjectParameter("fldSh_Sabt", fldSh_Sabt) :
                new ObjectParameter("fldSh_Sabt", typeof(string));
    
            var fldTypePersonParameter = fldTypePerson.HasValue ?
                new ObjectParameter("fldTypePerson", fldTypePerson) :
                new ObjectParameter("fldTypePerson", typeof(bool));
    
            var fldMobileParameter = fldMobile != null ?
                new ObjectParameter("fldMobile", fldMobile) :
                new ObjectParameter("fldMobile", typeof(string));
    
            var fldExpireDateParameter = fldExpireDate != null ?
                new ObjectParameter("fldExpireDate", fldExpireDate) :
                new ObjectParameter("fldExpireDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_RegisterInsert", fldId, fldCodeDaftarParameter, fldAddressParameter, fldTelParameter, fldMunIdParameter, fldLocalIdParameter, fldAreaIdParameter, fldStateParameter, fldModirDaftarParameter, fldmodirFamilyParameter, fldcodeMeliParameter, fldCodeEghtesadiParameter, fldSh_SabtParameter, fldTypePersonParameter, fldMobileParameter, fldExpireDateParameter);
        }
    
        public virtual ObjectResult<Sp_RegisterSelect> Sp_RegisterSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_RegisterSelect>("Sp_RegisterSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int Sp_RegisterUpdate(Nullable<long> fldId, Nullable<bool> fldState)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(long));
    
            var fldStateParameter = fldState.HasValue ?
                new ObjectParameter("fldState", fldState) :
                new ObjectParameter("fldState", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_RegisterUpdate", fldIdParameter, fldStateParameter);
        }
    
        public virtual ObjectResult<sp_Report_CountryDivition_LogSelect> sp_Report_CountryDivition_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_CountryDivition_LogSelect>("sp_Report_CountryDivition_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_Report_CountryDivitionDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_CountryDivitionDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_Report_CountryDivitionInsert(Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<int> fldReportsID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldReportsIDParameter = fldReportsID.HasValue ?
                new ObjectParameter("fldReportsID", fldReportsID) :
                new ObjectParameter("fldReportsID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_CountryDivitionInsert", fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldReportsIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Report_CountryDivitionSelect> sp_Report_CountryDivitionSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_CountryDivitionSelect>("sp_Report_CountryDivitionSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_Report_CountryDivitionUpdate(Nullable<int> fldID, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<int> fldReportsID, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldDate, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldReportsIDParameter = fldReportsID.HasValue ?
                new ObjectParameter("fldReportsID", fldReportsID) :
                new ObjectParameter("fldReportsID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldDateParameter = fldDate.HasValue ?
                new ObjectParameter("fldDate", fldDate) :
                new ObjectParameter("fldDate", typeof(System.DateTime));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_CountryDivitionUpdate", fldIDParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldReportsIDParameter, fldUserIDParameter, fldDescParameter, fldDateParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Reports_LogSelect> sp_Reports_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Reports_LogSelect>("sp_Reports_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ReportsDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ReportsDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ReportsInsert(Nullable<int> fldReportTypeId, byte[] fldReportPic, byte[] fldReport, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldReportTypeIdParameter = fldReportTypeId.HasValue ?
                new ObjectParameter("fldReportTypeId", fldReportTypeId) :
                new ObjectParameter("fldReportTypeId", typeof(int));
    
            var fldReportPicParameter = fldReportPic != null ?
                new ObjectParameter("fldReportPic", fldReportPic) :
                new ObjectParameter("fldReportPic", typeof(byte[]));
    
            var fldReportParameter = fldReport != null ?
                new ObjectParameter("fldReport", fldReport) :
                new ObjectParameter("fldReport", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ReportsInsert", fldReportTypeIdParameter, fldReportPicParameter, fldReportParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ReportsSelect> sp_ReportsSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReportsSelect>("sp_ReportsSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ReportsUpdate(Nullable<int> fldID, Nullable<int> fldReportTypeId, byte[] fldReportPic, byte[] fldReport, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldReportTypeIdParameter = fldReportTypeId.HasValue ?
                new ObjectParameter("fldReportTypeId", fldReportTypeId) :
                new ObjectParameter("fldReportTypeId", typeof(int));
    
            var fldReportPicParameter = fldReportPic != null ?
                new ObjectParameter("fldReportPic", fldReportPic) :
                new ObjectParameter("fldReportPic", typeof(byte[]));
    
            var fldReportParameter = fldReport != null ?
                new ObjectParameter("fldReport", fldReport) :
                new ObjectParameter("fldReport", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ReportsUpdate", fldIDParameter, fldReportTypeIdParameter, fldReportPicParameter, fldReportParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ReportType_LogSelect> sp_ReportType_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReportType_LogSelect>("sp_ReportType_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ReportTypeDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ReportTypeDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ReportTypeInsert(string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ReportTypeInsert", fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ReportTypeSelect> sp_ReportTypeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReportTypeSelect>("sp_ReportTypeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ReportTypeUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ReportTypeUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_Round_LogSelect> sp_Round_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Round_LogSelect>("sp_Round_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_RoundDelete(Nullable<byte> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(byte));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RoundDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_RoundInsert(Nullable<byte> fldRound, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldRoundParameter = fldRound.HasValue ?
                new ObjectParameter("fldRound", fldRound) :
                new ObjectParameter("fldRound", typeof(byte));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RoundInsert", fldRoundParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_RoundSelect> sp_RoundSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RoundSelect>("sp_RoundSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_RoundUpdate(Nullable<byte> fldID, Nullable<byte> fldRound, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(byte));
    
            var fldRoundParameter = fldRound.HasValue ?
                new ObjectParameter("fldRound", fldRound) :
                new ObjectParameter("fldRound", typeof(byte));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RoundUpdate", fldIDParameter, fldRoundParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_rptBudgetByMonth> sp_rptBudgetByMonth(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rptBudgetByMonth>("sp_rptBudgetByMonth", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual ObjectResult<sp_RptCarExperience_File> sp_RptCarExperience_File(Nullable<int> userId, string tarikh)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var tarikhParameter = tarikh != null ?
                new ObjectParameter("Tarikh", tarikh) :
                new ObjectParameter("Tarikh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptCarExperience_File>("sp_RptCarExperience_File", userIdParameter, tarikhParameter);
        }
    
        public virtual ObjectResult<sp_RptCarFile_Scan> sp_RptCarFile_Scan(Nullable<System.DateTime> azTarikh, Nullable<System.DateTime> taTarikh, Nullable<int> userid, string fieldName, string value)
        {
            var azTarikhParameter = azTarikh.HasValue ?
                new ObjectParameter("AzTarikh", azTarikh) :
                new ObjectParameter("AzTarikh", typeof(System.DateTime));
    
            var taTarikhParameter = taTarikh.HasValue ?
                new ObjectParameter("TaTarikh", taTarikh) :
                new ObjectParameter("TaTarikh", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("FieldName", fieldName) :
                new ObjectParameter("FieldName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptCarFile_Scan>("sp_RptCarFile_Scan", azTarikhParameter, taTarikhParameter, useridParameter, fieldNameParameter, valueParameter);
        }
    
        public virtual ObjectResult<sp_RptChart> sp_RptChart(Nullable<System.DateTime> srart, Nullable<System.DateTime> end, Nullable<int> mun)
        {
            var srartParameter = srart.HasValue ?
                new ObjectParameter("Srart", srart) :
                new ObjectParameter("Srart", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptChart>("sp_RptChart", srartParameter, endParameter, munParameter);
        }
    
        public virtual ObjectResult<sp_RptCollection> sp_RptCollection(Nullable<int> mun, Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> reportType, Nullable<int> treeId, Nullable<int> settleTypeId)
        {
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var reportTypeParameter = reportType.HasValue ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(int));
    
            var treeIdParameter = treeId.HasValue ?
                new ObjectParameter("treeId", treeId) :
                new ObjectParameter("treeId", typeof(int));
    
            var settleTypeIdParameter = settleTypeId.HasValue ?
                new ObjectParameter("SettleTypeId", settleTypeId) :
                new ObjectParameter("SettleTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptCollection>("sp_RptCollection", munParameter, startParameter, endParameter, reportTypeParameter, treeIdParameter, settleTypeIdParameter);
        }
    
        public virtual int sp_RptCollection_old(Nullable<int> mun, Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> reportType, Nullable<int> treeId, Nullable<int> settleTypeId)
        {
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var reportTypeParameter = reportType.HasValue ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(int));
    
            var treeIdParameter = treeId.HasValue ?
                new ObjectParameter("treeId", treeId) :
                new ObjectParameter("treeId", typeof(int));
    
            var settleTypeIdParameter = settleTypeId.HasValue ?
                new ObjectParameter("SettleTypeId", settleTypeId) :
                new ObjectParameter("SettleTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RptCollection_old", munParameter, startParameter, endParameter, reportTypeParameter, treeIdParameter, settleTypeIdParameter);
        }
    
        public virtual ObjectResult<sp_RptCollectionByUser> sp_RptCollectionByUser(Nullable<int> mun, Nullable<int> userId, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptCollectionByUser>("sp_RptCollectionByUser", munParameter, userIdParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<sp_RptCollectionIn2Year> sp_RptCollectionIn2Year(Nullable<int> mun, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptCollectionIn2Year>("sp_RptCollectionIn2Year", munParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<sp_RptCollectionWithDate> sp_RptCollectionWithDate(Nullable<int> mun, Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> reportType, Nullable<int> treeId, Nullable<int> settleTypeId)
        {
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var reportTypeParameter = reportType.HasValue ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(int));
    
            var treeIdParameter = treeId.HasValue ?
                new ObjectParameter("treeId", treeId) :
                new ObjectParameter("treeId", typeof(int));
    
            var settleTypeIdParameter = settleTypeId.HasValue ?
                new ObjectParameter("SettleTypeId", settleTypeId) :
                new ObjectParameter("SettleTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptCollectionWithDate>("sp_RptCollectionWithDate", munParameter, startParameter, endParameter, reportTypeParameter, treeIdParameter, settleTypeIdParameter);
        }
    
        public virtual ObjectResult<sp_RptCountMafasa> sp_RptCountMafasa(string tarikh)
        {
            var tarikhParameter = tarikh != null ?
                new ObjectParameter("Tarikh", tarikh) :
                new ObjectParameter("Tarikh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptCountMafasa>("sp_RptCountMafasa", tarikhParameter);
        }
    
        public virtual ObjectResult<sp_RptCountPaid_NotPaid> sp_RptCountPaid_NotPaid(string sal, string fieldName)
        {
            var salParameter = sal != null ?
                new ObjectParameter("Sal", sal) :
                new ObjectParameter("Sal", typeof(string));
    
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("fieldName", fieldName) :
                new ObjectParameter("fieldName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptCountPaid_NotPaid>("sp_RptCountPaid_NotPaid", salParameter, fieldNameParameter);
        }
    
        public virtual ObjectResult<sp_RptLogCarFile> sp_RptLogCarFile(Nullable<int> userID, Nullable<System.DateTime> azTarikh, Nullable<System.DateTime> taTarikh)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var azTarikhParameter = azTarikh.HasValue ?
                new ObjectParameter("AzTarikh", azTarikh) :
                new ObjectParameter("AzTarikh", typeof(System.DateTime));
    
            var taTarikhParameter = taTarikh.HasValue ?
                new ObjectParameter("TaTarikh", taTarikh) :
                new ObjectParameter("TaTarikh", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptLogCarFile>("sp_RptLogCarFile", userIDParameter, azTarikhParameter, taTarikhParameter);
        }
    
        public virtual ObjectResult<sp_RptMonthlyChart> sp_RptMonthlyChart(Nullable<int> year, Nullable<int> mun)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptMonthlyChart>("sp_RptMonthlyChart", yearParameter, munParameter);
        }
    
        public virtual ObjectResult<sp_RptMonthlyChart_Count> sp_RptMonthlyChart_Count(Nullable<int> year, Nullable<int> mun)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptMonthlyChart_Count>("sp_RptMonthlyChart_Count", yearParameter, munParameter);
        }
    
        public virtual ObjectResult<sp_RptMonthlyUser_Count> sp_RptMonthlyUser_Count(Nullable<int> year, Nullable<int> mun)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptMonthlyUser_Count>("sp_RptMonthlyUser_Count", yearParameter, munParameter);
        }
    
        public virtual ObjectResult<sp_RptMonthlyUser_CountWithDate> sp_RptMonthlyUser_CountWithDate(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> mun)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptMonthlyUser_CountWithDate>("sp_RptMonthlyUser_CountWithDate", startDateParameter, endDateParameter, munParameter);
        }
    
        public virtual ObjectResult<sp_RptMonthlyUser_CountWithDate_NotPay> sp_RptMonthlyUser_CountWithDate_NotPay(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> mun)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptMonthlyUser_CountWithDate_NotPay>("sp_RptMonthlyUser_CountWithDate_NotPay", startDateParameter, endDateParameter, munParameter);
        }
    
        public virtual ObjectResult<Sp_RptPaid_NotPaid_Month> Sp_RptPaid_NotPaid_Month(string fieldname, string sal)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var salParameter = sal != null ?
                new ObjectParameter("Sal", sal) :
                new ObjectParameter("Sal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_RptPaid_NotPaid_Month>("Sp_RptPaid_NotPaid_Month", fieldnameParameter, salParameter);
        }
    
        public virtual ObjectResult<sp_RptPeacockery> sp_RptPeacockery(string fieldname, Nullable<int> mun, Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> userid)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptPeacockery>("sp_RptPeacockery", fieldnameParameter, munParameter, startParameter, endParameter, useridParameter);
        }
    
        public virtual ObjectResult<sp_RptPeacockery2> sp_RptPeacockery2(string fieldname, Nullable<int> mun, Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> userid)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptPeacockery2>("sp_RptPeacockery2", fieldnameParameter, munParameter, startParameter, endParameter, useridParameter);
        }
    
        public virtual ObjectResult<sp_SearchClass> sp_SearchClass(string value, Nullable<int> top, string filedName)
        {
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            var filedNameParameter = filedName != null ?
                new ObjectParameter("filedName", filedName) :
                new ObjectParameter("filedName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchClass>("sp_SearchClass", valueParameter, topParameter, filedNameParameter);
        }
    
        public virtual ObjectResult<sp_selectAccountBank> sp_selectAccountBank(Nullable<int> userID, Nullable<bool> type)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAccountBank>("sp_selectAccountBank", userIDParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_SelectCalculations> sp_SelectCalculations(Nullable<int> divisionType, Nullable<int> divisionCode, Nullable<System.DateTime> getdate, Nullable<System.DateTime> fldFromYear, Nullable<System.DateTime> fldToYear, Nullable<int> fldCarFileID)
        {
            var divisionTypeParameter = divisionType.HasValue ?
                new ObjectParameter("DivisionType", divisionType) :
                new ObjectParameter("DivisionType", typeof(int));
    
            var divisionCodeParameter = divisionCode.HasValue ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(int));
    
            var getdateParameter = getdate.HasValue ?
                new ObjectParameter("Getdate", getdate) :
                new ObjectParameter("Getdate", typeof(System.DateTime));
    
            var fldFromYearParameter = fldFromYear.HasValue ?
                new ObjectParameter("fldFromYear", fldFromYear) :
                new ObjectParameter("fldFromYear", typeof(System.DateTime));
    
            var fldToYearParameter = fldToYear.HasValue ?
                new ObjectParameter("fldToYear", fldToYear) :
                new ObjectParameter("fldToYear", typeof(System.DateTime));
    
            var fldCarFileIDParameter = fldCarFileID.HasValue ?
                new ObjectParameter("fldCarFileID", fldCarFileID) :
                new ObjectParameter("fldCarFileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectCalculations>("sp_SelectCalculations", divisionTypeParameter, divisionCodeParameter, getdateParameter, fldFromYearParameter, fldToYearParameter, fldCarFileIDParameter);
        }
    
        public virtual ObjectResult<sp_SelectCalculationsTheFingers> sp_SelectCalculationsTheFingers(Nullable<int> fldCarSeriesType, Nullable<int> fldCarSeriesCode, Nullable<System.DateTime> fromYear, Nullable<System.DateTime> toYear, string model, Nullable<int> divisionType, Nullable<int> divisionCode, Nullable<System.DateTime> firstInsurseDate, Nullable<System.DateTime> getdate)
        {
            var fldCarSeriesTypeParameter = fldCarSeriesType.HasValue ?
                new ObjectParameter("fldCarSeriesType", fldCarSeriesType) :
                new ObjectParameter("fldCarSeriesType", typeof(int));
    
            var fldCarSeriesCodeParameter = fldCarSeriesCode.HasValue ?
                new ObjectParameter("fldCarSeriesCode", fldCarSeriesCode) :
                new ObjectParameter("fldCarSeriesCode", typeof(int));
    
            var fromYearParameter = fromYear.HasValue ?
                new ObjectParameter("FromYear", fromYear) :
                new ObjectParameter("FromYear", typeof(System.DateTime));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(System.DateTime));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            var divisionTypeParameter = divisionType.HasValue ?
                new ObjectParameter("DivisionType", divisionType) :
                new ObjectParameter("DivisionType", typeof(int));
    
            var divisionCodeParameter = divisionCode.HasValue ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(int));
    
            var firstInsurseDateParameter = firstInsurseDate.HasValue ?
                new ObjectParameter("FirstInsurseDate", firstInsurseDate) :
                new ObjectParameter("FirstInsurseDate", typeof(System.DateTime));
    
            var getdateParameter = getdate.HasValue ?
                new ObjectParameter("Getdate", getdate) :
                new ObjectParameter("Getdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectCalculationsTheFingers>("sp_SelectCalculationsTheFingers", fldCarSeriesTypeParameter, fldCarSeriesCodeParameter, fromYearParameter, toYearParameter, modelParameter, divisionTypeParameter, divisionCodeParameter, firstInsurseDateParameter, getdateParameter);
        }
    
        public virtual ObjectResult<sp_SelectCar_TypeEntezami> sp_SelectCar_TypeEntezami(Nullable<int> carFileId)
        {
            var carFileIdParameter = carFileId.HasValue ?
                new ObjectParameter("CarFileId", carFileId) :
                new ObjectParameter("CarFileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectCar_TypeEntezami>("sp_SelectCar_TypeEntezami", carFileIdParameter);
        }
    
        public virtual ObjectResult<sp_SelectCarDetils> sp_SelectCarDetils(Nullable<long> fldCarID)
        {
            var fldCarIDParameter = fldCarID.HasValue ?
                new ObjectParameter("fldCarID", fldCarID) :
                new ObjectParameter("fldCarID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectCarDetils>("sp_SelectCarDetils", fldCarIDParameter);
        }
    
        public virtual ObjectResult<sp_SelectCarDetilsByCarFileID> sp_SelectCarDetilsByCarFileID(Nullable<long> fldCarFileID)
        {
            var fldCarFileIDParameter = fldCarFileID.HasValue ?
                new ObjectParameter("fldCarFileID", fldCarFileID) :
                new ObjectParameter("fldCarFileID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectCarDetilsByCarFileID>("sp_SelectCarDetilsByCarFileID", fldCarFileIDParameter);
        }
    
        public virtual int sp_SelectCarFile_UplaodFile(Nullable<int> fldBargSabzFileId, Nullable<int> fldCartFileId, Nullable<int> fldSanadForoshFileId, Nullable<int> fldCartBackFileId, Nullable<int> fldid)
        {
            var fldBargSabzFileIdParameter = fldBargSabzFileId.HasValue ?
                new ObjectParameter("fldBargSabzFileId", fldBargSabzFileId) :
                new ObjectParameter("fldBargSabzFileId", typeof(int));
    
            var fldCartFileIdParameter = fldCartFileId.HasValue ?
                new ObjectParameter("fldCartFileId", fldCartFileId) :
                new ObjectParameter("fldCartFileId", typeof(int));
    
            var fldSanadForoshFileIdParameter = fldSanadForoshFileId.HasValue ?
                new ObjectParameter("fldSanadForoshFileId", fldSanadForoshFileId) :
                new ObjectParameter("fldSanadForoshFileId", typeof(int));
    
            var fldCartBackFileIdParameter = fldCartBackFileId.HasValue ?
                new ObjectParameter("fldCartBackFileId", fldCartBackFileId) :
                new ObjectParameter("fldCartBackFileId", typeof(int));
    
            var fldidParameter = fldid.HasValue ?
                new ObjectParameter("fldid", fldid) :
                new ObjectParameter("fldid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SelectCarFile_UplaodFile", fldBargSabzFileIdParameter, fldCartFileIdParameter, fldSanadForoshFileIdParameter, fldCartBackFileIdParameter, fldidParameter);
        }
    
        public virtual ObjectResult<sp_SelectCountryDivTemp> sp_SelectCountryDivTemp(Nullable<int> type, Nullable<int> code)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectCountryDivTemp>("sp_SelectCountryDivTemp", typeParameter, codeParameter);
        }
    
        public virtual ObjectResult<sp_selectDownTreeCarSeries> sp_selectDownTreeCarSeries(Nullable<int> fldIDTree, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDTreeParameter = fldIDTree.HasValue ?
                new ObjectParameter("fldIDTree", fldIDTree) :
                new ObjectParameter("fldIDTree", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectDownTreeCarSeries>("sp_selectDownTreeCarSeries", fldIDTreeParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SelectDownTreeCountryDivisions> sp_SelectDownTreeCountryDivisions(Nullable<int> fldIDTree, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDTreeParameter = fldIDTree.HasValue ?
                new ObjectParameter("fldIDTree", fldIDTree) :
                new ObjectParameter("fldIDTree", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectDownTreeCountryDivisions>("sp_SelectDownTreeCountryDivisions", fldIDTreeParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SelectExistPeacockery> sp_SelectExistPeacockery(Nullable<long> carId, Nullable<int> showMoney)
        {
            var carIdParameter = carId.HasValue ?
                new ObjectParameter("CarId", carId) :
                new ObjectParameter("CarId", typeof(long));
    
            var showMoneyParameter = showMoney.HasValue ?
                new ObjectParameter("ShowMoney", showMoney) :
                new ObjectParameter("ShowMoney", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectExistPeacockery>("sp_SelectExistPeacockery", carIdParameter, showMoneyParameter);
        }
    
        public virtual ObjectResult<sp_SelectFullCarForSetMony> sp_SelectFullCarForSetMony(Nullable<int> type, Nullable<int> value, Nullable<bool> cheak, string year, Nullable<int> typeDivision, Nullable<int> codeDivision)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(int));
    
            var cheakParameter = cheak.HasValue ?
                new ObjectParameter("cheak", cheak) :
                new ObjectParameter("cheak", typeof(bool));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeDivisionParameter = typeDivision.HasValue ?
                new ObjectParameter("TypeDivision", typeDivision) :
                new ObjectParameter("TypeDivision", typeof(int));
    
            var codeDivisionParameter = codeDivision.HasValue ?
                new ObjectParameter("CodeDivision", codeDivision) :
                new ObjectParameter("CodeDivision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectFullCarForSetMony>("sp_SelectFullCarForSetMony", typeParameter, valueParameter, cheakParameter, yearParameter, typeDivisionParameter, codeDivisionParameter);
        }
    
        public virtual ObjectResult<sp_SelectFullCarForSetMonyFullNotNull> sp_SelectFullCarForSetMonyFullNotNull(Nullable<int> typeCarSeries, Nullable<int> codeCarSeries, string year, Nullable<int> typeDivision, Nullable<int> codeDivision, Nullable<int> fldUserID)
        {
            var typeCarSeriesParameter = typeCarSeries.HasValue ?
                new ObjectParameter("TypeCarSeries", typeCarSeries) :
                new ObjectParameter("TypeCarSeries", typeof(int));
    
            var codeCarSeriesParameter = codeCarSeries.HasValue ?
                new ObjectParameter("CodeCarSeries", codeCarSeries) :
                new ObjectParameter("CodeCarSeries", typeof(int));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var typeDivisionParameter = typeDivision.HasValue ?
                new ObjectParameter("TypeDivision", typeDivision) :
                new ObjectParameter("TypeDivision", typeof(int));
    
            var codeDivisionParameter = codeDivision.HasValue ?
                new ObjectParameter("CodeDivision", codeDivision) :
                new ObjectParameter("CodeDivision", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectFullCarForSetMonyFullNotNull>("sp_SelectFullCarForSetMonyFullNotNull", typeCarSeriesParameter, codeCarSeriesParameter, yearParameter, typeDivisionParameter, codeDivisionParameter, fldUserIDParameter);
        }
    
        public virtual int sp_SelectFullCarForSetMonyInsertYear(Nullable<int> type, Nullable<int> value, Nullable<bool> cheak, Nullable<int> fromDate, Nullable<int> toDate)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(int));
    
            var cheakParameter = cheak.HasValue ?
                new ObjectParameter("cheak", cheak) :
                new ObjectParameter("cheak", typeof(bool));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(int));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SelectFullCarForSetMonyInsertYear", typeParameter, valueParameter, cheakParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_SelectNameBankAndMunForBankInformation> sp_SelectNameBankAndMunForBankInformation(Nullable<int> countryCode, Nullable<int> countrytype)
        {
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            var countrytypeParameter = countrytype.HasValue ?
                new ObjectParameter("countrytype", countrytype) :
                new ObjectParameter("countrytype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectNameBankAndMunForBankInformation>("sp_SelectNameBankAndMunForBankInformation", countryCodeParameter, countrytypeParameter);
        }
    
        public virtual ObjectResult<sp_SelectPishkhanPos> sp_SelectPishkhanPos(string fieldName, Nullable<int> userId, Nullable<int> fldId)
        {
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("FieldName", fieldName) :
                new ObjectParameter("FieldName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectPishkhanPos>("sp_SelectPishkhanPos", fieldNameParameter, userIdParameter, fldIdParameter);
        }
    
        public virtual ObjectResult<sp_selectPishkhanResipt> sp_selectPishkhanResipt(string fieldName, Nullable<int> userId, Nullable<int> fldId)
        {
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("FieldName", fieldName) :
                new ObjectParameter("FieldName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectPishkhanResipt>("sp_selectPishkhanResipt", fieldNameParameter, userIdParameter, fldIdParameter);
        }
    
        public virtual int sp_SelectPositionUser(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SelectPositionUser", iDParameter);
        }
    
        public virtual ObjectResult<sp_SelectSubSetting> sp_SelectSubSetting(Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision, Nullable<System.DateTime> date)
        {
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectSubSetting>("sp_SelectSubSetting", fldTypeCarParameter, fldCodeCarParameter, fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter, dateParameter);
        }
    
        public virtual ObjectResult<sp_SelectTreeNodeID> sp_SelectTreeNodeID(Nullable<int> fldUserID)
        {
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectTreeNodeID>("sp_SelectTreeNodeID", fldUserIDParameter);
        }
    
        public virtual ObjectResult<sp_SelectUpTreeCarSeries> sp_SelectUpTreeCarSeries(Nullable<int> fldIDTree, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDTreeParameter = fldIDTree.HasValue ?
                new ObjectParameter("fldIDTree", fldIDTree) :
                new ObjectParameter("fldIDTree", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectUpTreeCarSeries>("sp_SelectUpTreeCarSeries", fldIDTreeParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SelectUpTreeCountryDivisions> sp_SelectUpTreeCountryDivisions(Nullable<int> fldIDTree, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDTreeParameter = fldIDTree.HasValue ?
                new ObjectParameter("fldIDTree", fldIDTree) :
                new ObjectParameter("fldIDTree", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectUpTreeCountryDivisions>("sp_SelectUpTreeCountryDivisions", fldIDTreeParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SelectUserByUserId> sp_SelectUserByUserId(string fieldname, string value, Nullable<int> h, string pass, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectUserByUserId>("sp_SelectUserByUserId", fieldnameParameter, valueParameter, hParameter, passParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SendLetter_LogSelect> sp_SendLetter_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SendLetter_LogSelect>("sp_SendLetter_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SendLetterDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SendLetterDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SendLetterInsert(string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SendLetterInsert", fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SendLetterSelect> sp_SendLetterSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SendLetterSelect>("sp_SendLetterSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SendLetterUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SendLetterUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SettleType_LogSelect> sp_SettleType_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SettleType_LogSelect>("sp_SettleType_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SettleTypeDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SettleTypeDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SettleTypeInsert(string fldName, Nullable<byte> fldCode, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCodeParameter = fldCode.HasValue ?
                new ObjectParameter("fldCode", fldCode) :
                new ObjectParameter("fldCode", typeof(byte));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SettleTypeInsert", fldNameParameter, fldCodeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SettleTypeSelect> sp_SettleTypeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SettleTypeSelect>("sp_SettleTypeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SettleTypeUpdate(Nullable<int> fldID, string fldName, Nullable<byte> fldCode, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCodeParameter = fldCode.HasValue ?
                new ObjectParameter("fldCode", fldCode) :
                new ObjectParameter("fldCode", typeof(byte));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SettleTypeUpdate", fldIDParameter, fldNameParameter, fldCodeParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ShortTermCountry_LogSelect> sp_ShortTermCountry_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ShortTermCountry_LogSelect>("sp_ShortTermCountry_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ShortTermCountryDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShortTermCountryDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ShortTermCountryInsert(string fldEnglishName, string fldPersianName, string fldSymbol, byte[] fldIcon, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldEnglishNameParameter = fldEnglishName != null ?
                new ObjectParameter("fldEnglishName", fldEnglishName) :
                new ObjectParameter("fldEnglishName", typeof(string));
    
            var fldPersianNameParameter = fldPersianName != null ?
                new ObjectParameter("fldPersianName", fldPersianName) :
                new ObjectParameter("fldPersianName", typeof(string));
    
            var fldSymbolParameter = fldSymbol != null ?
                new ObjectParameter("fldSymbol", fldSymbol) :
                new ObjectParameter("fldSymbol", typeof(string));
    
            var fldIconParameter = fldIcon != null ?
                new ObjectParameter("fldIcon", fldIcon) :
                new ObjectParameter("fldIcon", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShortTermCountryInsert", fldEnglishNameParameter, fldPersianNameParameter, fldSymbolParameter, fldIconParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ShortTermCountrySelect> sp_ShortTermCountrySelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ShortTermCountrySelect>("sp_ShortTermCountrySelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ShortTermCountryUpdate(Nullable<int> fldID, string fldEnglishName, string fldPersianName, string fldSymbol, byte[] fldIcon, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldEnglishNameParameter = fldEnglishName != null ?
                new ObjectParameter("fldEnglishName", fldEnglishName) :
                new ObjectParameter("fldEnglishName", typeof(string));
    
            var fldPersianNameParameter = fldPersianName != null ?
                new ObjectParameter("fldPersianName", fldPersianName) :
                new ObjectParameter("fldPersianName", typeof(string));
    
            var fldSymbolParameter = fldSymbol != null ?
                new ObjectParameter("fldSymbol", fldSymbol) :
                new ObjectParameter("fldSymbol", typeof(string));
    
            var fldIconParameter = fldIcon != null ?
                new ObjectParameter("fldIcon", fldIcon) :
                new ObjectParameter("fldIcon", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShortTermCountryUpdate", fldIDParameter, fldEnglishNameParameter, fldPersianNameParameter, fldSymbolParameter, fldIconParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ShowDigitalArchive> sp_ShowDigitalArchive(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> id)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ShowDigitalArchive>("sp_ShowDigitalArchive", startParameter, endParameter, idParameter);
        }
    
        public virtual ObjectResult<sp_SignerEmployee_LogSelect> sp_SignerEmployee_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SignerEmployee_LogSelect>("sp_SignerEmployee_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SignerEmployeeDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SignerEmployeeDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SignerEmployeeInsert(string fldName, string fldFamily, string fldMelliCode, Nullable<int> fldPostID, Nullable<int> fldMunicipalityID, Nullable<long> fldLocalID, Nullable<long> fldAreaID, Nullable<long> fldOfficesID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldFamilyParameter = fldFamily != null ?
                new ObjectParameter("fldFamily", fldFamily) :
                new ObjectParameter("fldFamily", typeof(string));
    
            var fldMelliCodeParameter = fldMelliCode != null ?
                new ObjectParameter("fldMelliCode", fldMelliCode) :
                new ObjectParameter("fldMelliCode", typeof(string));
    
            var fldPostIDParameter = fldPostID.HasValue ?
                new ObjectParameter("fldPostID", fldPostID) :
                new ObjectParameter("fldPostID", typeof(int));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldLocalIDParameter = fldLocalID.HasValue ?
                new ObjectParameter("fldLocalID", fldLocalID) :
                new ObjectParameter("fldLocalID", typeof(long));
    
            var fldAreaIDParameter = fldAreaID.HasValue ?
                new ObjectParameter("fldAreaID", fldAreaID) :
                new ObjectParameter("fldAreaID", typeof(long));
    
            var fldOfficesIDParameter = fldOfficesID.HasValue ?
                new ObjectParameter("fldOfficesID", fldOfficesID) :
                new ObjectParameter("fldOfficesID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SignerEmployeeInsert", fldNameParameter, fldFamilyParameter, fldMelliCodeParameter, fldPostIDParameter, fldMunicipalityIDParameter, fldLocalIDParameter, fldAreaIDParameter, fldOfficesIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SignerEmployeeSelect> sp_SignerEmployeeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SignerEmployeeSelect>("sp_SignerEmployeeSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SignerEmployeeUpdate(Nullable<int> fldID, string fldName, string fldFamily, string fldMelliCode, Nullable<int> fldPostID, Nullable<int> fldMunicipalityID, Nullable<long> fldLocalID, Nullable<long> fldAreaID, Nullable<long> fldOfficesID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldFamilyParameter = fldFamily != null ?
                new ObjectParameter("fldFamily", fldFamily) :
                new ObjectParameter("fldFamily", typeof(string));
    
            var fldMelliCodeParameter = fldMelliCode != null ?
                new ObjectParameter("fldMelliCode", fldMelliCode) :
                new ObjectParameter("fldMelliCode", typeof(string));
    
            var fldPostIDParameter = fldPostID.HasValue ?
                new ObjectParameter("fldPostID", fldPostID) :
                new ObjectParameter("fldPostID", typeof(int));
    
            var fldMunicipalityIDParameter = fldMunicipalityID.HasValue ?
                new ObjectParameter("fldMunicipalityID", fldMunicipalityID) :
                new ObjectParameter("fldMunicipalityID", typeof(int));
    
            var fldLocalIDParameter = fldLocalID.HasValue ?
                new ObjectParameter("fldLocalID", fldLocalID) :
                new ObjectParameter("fldLocalID", typeof(long));
    
            var fldAreaIDParameter = fldAreaID.HasValue ?
                new ObjectParameter("fldAreaID", fldAreaID) :
                new ObjectParameter("fldAreaID", typeof(long));
    
            var fldOfficesIDParameter = fldOfficesID.HasValue ?
                new ObjectParameter("fldOfficesID", fldOfficesID) :
                new ObjectParameter("fldOfficesID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SignerEmployeeUpdate", fldIDParameter, fldNameParameter, fldFamilyParameter, fldMelliCodeParameter, fldPostIDParameter, fldMunicipalityIDParameter, fldLocalIDParameter, fldAreaIDParameter, fldOfficesIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SingleCarfileSelect> sp_SingleCarfileSelect(Nullable<int> fldCarFileId)
        {
            var fldCarFileIdParameter = fldCarFileId.HasValue ?
                new ObjectParameter("fldCarFileId", fldCarFileId) :
                new ObjectParameter("fldCarFileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SingleCarfileSelect>("sp_SingleCarfileSelect", fldCarFileIdParameter);
        }
    
        public virtual ObjectResult<sp_SingleCollectionSelect> sp_SingleCollectionSelect(Nullable<int> fldCarFileID, Nullable<System.DateTime> fldCollectionDate, Nullable<int> fldPrice)
        {
            var fldCarFileIDParameter = fldCarFileID.HasValue ?
                new ObjectParameter("fldCarFileID", fldCarFileID) :
                new ObjectParameter("fldCarFileID", typeof(int));
    
            var fldCollectionDateParameter = fldCollectionDate.HasValue ?
                new ObjectParameter("fldCollectionDate", fldCollectionDate) :
                new ObjectParameter("fldCollectionDate", typeof(System.DateTime));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SingleCollectionSelect>("sp_SingleCollectionSelect", fldCarFileIDParameter, fldCollectionDateParameter, fldPriceParameter);
        }
    
        public virtual int Sp_SmsSendingSettingDelete(Nullable<int> fldId)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_SmsSendingSettingDelete", fldIdParameter);
        }
    
        public virtual int Sp_SmsSendingSettingInsert(string fldText, Nullable<byte> fldType, Nullable<int> type, Nullable<int> code, Nullable<bool> fldState, Nullable<long> fldUserId, string fldDesc)
        {
            var fldTextParameter = fldText != null ?
                new ObjectParameter("fldText", fldText) :
                new ObjectParameter("fldText", typeof(string));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(byte));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            var fldStateParameter = fldState.HasValue ?
                new ObjectParameter("fldState", fldState) :
                new ObjectParameter("fldState", typeof(bool));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_SmsSendingSettingInsert", fldTextParameter, fldTypeParameter, typeParameter, codeParameter, fldStateParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<Sp_SmsSendingSettingSelect> Sp_SmsSendingSettingSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SmsSendingSettingSelect>("Sp_SmsSendingSettingSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int Sp_SmsSendingSettingUpdate(Nullable<int> fldId, string fldText, Nullable<byte> fldType, Nullable<int> type, Nullable<int> code, Nullable<bool> fldState, Nullable<long> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldTextParameter = fldText != null ?
                new ObjectParameter("fldText", fldText) :
                new ObjectParameter("fldText", typeof(string));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(byte));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            var fldStateParameter = fldState.HasValue ?
                new ObjectParameter("fldState", fldState) :
                new ObjectParameter("fldState", typeof(bool));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_SmsSendingSettingUpdate", fldIdParameter, fldTextParameter, fldTypeParameter, typeParameter, codeParameter, fldStateParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int sp_SMSSetting_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SMSSetting_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SMSSettingDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SMSSettingDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SMSSettingInsert(string fldUserName, string fldPassword, string fldLineNumber, Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldUserNameParameter = fldUserName != null ?
                new ObjectParameter("fldUserName", fldUserName) :
                new ObjectParameter("fldUserName", typeof(string));
    
            var fldPasswordParameter = fldPassword != null ?
                new ObjectParameter("fldPassword", fldPassword) :
                new ObjectParameter("fldPassword", typeof(string));
    
            var fldLineNumberParameter = fldLineNumber != null ?
                new ObjectParameter("fldLineNumber", fldLineNumber) :
                new ObjectParameter("fldLineNumber", typeof(string));
    
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SMSSettingInsert", fldUserNameParameter, fldPasswordParameter, fldLineNumberParameter, fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SMSSettingSelect> sp_SMSSettingSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SMSSettingSelect>("sp_SMSSettingSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SMSSettingUpdate(Nullable<int> fldID, string fldUserName, string fldPassword, string fldLineNumber, Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserNameParameter = fldUserName != null ?
                new ObjectParameter("fldUserName", fldUserName) :
                new ObjectParameter("fldUserName", typeof(string));
    
            var fldPasswordParameter = fldPassword != null ?
                new ObjectParameter("fldPassword", fldPassword) :
                new ObjectParameter("fldPassword", typeof(string));
    
            var fldLineNumberParameter = fldLineNumber != null ?
                new ObjectParameter("fldLineNumber", fldLineNumber) :
                new ObjectParameter("fldLineNumber", typeof(string));
    
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SMSSettingUpdate", fldIDParameter, fldUserNameParameter, fldPasswordParameter, fldLineNumberParameter, fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_State_LogSelect> sp_State_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_State_LogSelect>("sp_State_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_StateDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_StateDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_StateInsert(ObjectParameter fldId, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_StateInsert", fldId, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_StateSelect> sp_StateSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StateSelect>("sp_StateSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_StateUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_StateUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_StatusPlaque_LogSelect> sp_StatusPlaque_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StatusPlaque_LogSelect>("sp_StatusPlaque_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_StatusPlaqueDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_StatusPlaqueDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_StatusPlaqueInsert(string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_StatusPlaqueInsert", fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_StatusPlaqueSelect> sp_StatusPlaqueSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StatusPlaqueSelect>("sp_StatusPlaqueSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_StatusPlaqueUpdate(Nullable<int> fldID, string fldName, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_StatusPlaqueUpdate", fldIDParameter, fldNameParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SubSetting_LogSelect> sp_SubSetting_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SubSetting_LogSelect>("sp_SubSetting_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SubSettingDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SubSettingDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SubSettingInsert(Nullable<byte> fldStartCodeBillIdentity, Nullable<byte> fldRoundID, Nullable<bool> fldPrintBill_Payment, Nullable<bool> fldExemptNewProduction, string fldTitleUserReport, Nullable<int> fldLastRespitePayment, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldImplementationDate, Nullable<bool> fldCountryDivisionsTreeApply, Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<bool> fldCarSeriesTreeApply, string fldUserPass, Nullable<bool> fldCalcFromVariz, Nullable<System.DateTime> fldAzAkharinTarikh, Nullable<int> fldDefaultPelakSerial, Nullable<int> fldDefaultPelakChar, Nullable<byte> fldDefaultSearch, Nullable<bool> fldHaveScan, Nullable<bool> fldTaeedSavabegh, Nullable<bool> fldMobileVerify, Nullable<bool> fldExpScan)
        {
            var fldStartCodeBillIdentityParameter = fldStartCodeBillIdentity.HasValue ?
                new ObjectParameter("fldStartCodeBillIdentity", fldStartCodeBillIdentity) :
                new ObjectParameter("fldStartCodeBillIdentity", typeof(byte));
    
            var fldRoundIDParameter = fldRoundID.HasValue ?
                new ObjectParameter("fldRoundID", fldRoundID) :
                new ObjectParameter("fldRoundID", typeof(byte));
    
            var fldPrintBill_PaymentParameter = fldPrintBill_Payment.HasValue ?
                new ObjectParameter("fldPrintBill_Payment", fldPrintBill_Payment) :
                new ObjectParameter("fldPrintBill_Payment", typeof(bool));
    
            var fldExemptNewProductionParameter = fldExemptNewProduction.HasValue ?
                new ObjectParameter("fldExemptNewProduction", fldExemptNewProduction) :
                new ObjectParameter("fldExemptNewProduction", typeof(bool));
    
            var fldTitleUserReportParameter = fldTitleUserReport != null ?
                new ObjectParameter("fldTitleUserReport", fldTitleUserReport) :
                new ObjectParameter("fldTitleUserReport", typeof(string));
    
            var fldLastRespitePaymentParameter = fldLastRespitePayment.HasValue ?
                new ObjectParameter("fldLastRespitePayment", fldLastRespitePayment) :
                new ObjectParameter("fldLastRespitePayment", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldImplementationDateParameter = fldImplementationDate.HasValue ?
                new ObjectParameter("fldImplementationDate", fldImplementationDate) :
                new ObjectParameter("fldImplementationDate", typeof(System.DateTime));
    
            var fldCountryDivisionsTreeApplyParameter = fldCountryDivisionsTreeApply.HasValue ?
                new ObjectParameter("fldCountryDivisionsTreeApply", fldCountryDivisionsTreeApply) :
                new ObjectParameter("fldCountryDivisionsTreeApply", typeof(bool));
    
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldCarSeriesTreeApplyParameter = fldCarSeriesTreeApply.HasValue ?
                new ObjectParameter("fldCarSeriesTreeApply", fldCarSeriesTreeApply) :
                new ObjectParameter("fldCarSeriesTreeApply", typeof(bool));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldCalcFromVarizParameter = fldCalcFromVariz.HasValue ?
                new ObjectParameter("fldCalcFromVariz", fldCalcFromVariz) :
                new ObjectParameter("fldCalcFromVariz", typeof(bool));
    
            var fldAzAkharinTarikhParameter = fldAzAkharinTarikh.HasValue ?
                new ObjectParameter("fldAzAkharinTarikh", fldAzAkharinTarikh) :
                new ObjectParameter("fldAzAkharinTarikh", typeof(System.DateTime));
    
            var fldDefaultPelakSerialParameter = fldDefaultPelakSerial.HasValue ?
                new ObjectParameter("fldDefaultPelakSerial", fldDefaultPelakSerial) :
                new ObjectParameter("fldDefaultPelakSerial", typeof(int));
    
            var fldDefaultPelakCharParameter = fldDefaultPelakChar.HasValue ?
                new ObjectParameter("fldDefaultPelakChar", fldDefaultPelakChar) :
                new ObjectParameter("fldDefaultPelakChar", typeof(int));
    
            var fldDefaultSearchParameter = fldDefaultSearch.HasValue ?
                new ObjectParameter("fldDefaultSearch", fldDefaultSearch) :
                new ObjectParameter("fldDefaultSearch", typeof(byte));
    
            var fldHaveScanParameter = fldHaveScan.HasValue ?
                new ObjectParameter("fldHaveScan", fldHaveScan) :
                new ObjectParameter("fldHaveScan", typeof(bool));
    
            var fldTaeedSavabeghParameter = fldTaeedSavabegh.HasValue ?
                new ObjectParameter("fldTaeedSavabegh", fldTaeedSavabegh) :
                new ObjectParameter("fldTaeedSavabegh", typeof(bool));
    
            var fldMobileVerifyParameter = fldMobileVerify.HasValue ?
                new ObjectParameter("fldMobileVerify", fldMobileVerify) :
                new ObjectParameter("fldMobileVerify", typeof(bool));
    
            var fldExpScanParameter = fldExpScan.HasValue ?
                new ObjectParameter("fldExpScan", fldExpScan) :
                new ObjectParameter("fldExpScan", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SubSettingInsert", fldStartCodeBillIdentityParameter, fldRoundIDParameter, fldPrintBill_PaymentParameter, fldExemptNewProductionParameter, fldTitleUserReportParameter, fldLastRespitePaymentParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldUserIDParameter, fldDescParameter, fldImplementationDateParameter, fldCountryDivisionsTreeApplyParameter, fldTypeCarParameter, fldCodeCarParameter, fldCarSeriesTreeApplyParameter, fldUserPassParameter, fldCalcFromVarizParameter, fldAzAkharinTarikhParameter, fldDefaultPelakSerialParameter, fldDefaultPelakCharParameter, fldDefaultSearchParameter, fldHaveScanParameter, fldTaeedSavabeghParameter, fldMobileVerifyParameter, fldExpScanParameter);
        }
    
        public virtual ObjectResult<sp_SubSettingSelect> sp_SubSettingSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SubSettingSelect>("sp_SubSettingSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SubSettingUpdate(Nullable<int> fldID, Nullable<byte> fldStartCodeBillIdentity, Nullable<byte> fldRoundID, Nullable<bool> fldPrintBill_Payment, Nullable<bool> fldExemptNewProduction, string fldTitleUserReport, Nullable<int> fldLastRespitePayment, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldImplementationDate, Nullable<bool> fldCountryDivisionsTreeApply, Nullable<int> fldTypeCar, Nullable<int> fldCodeCar, Nullable<bool> fldCarSeriesTreeApply, string fldUserPass, Nullable<bool> fldCalcFromVariz, Nullable<System.DateTime> fldAzAkharinTarikh, Nullable<int> fldDefaultPelakSerial, Nullable<int> fldDefaultPelakChar, Nullable<byte> fldDefaultSearch, Nullable<bool> fldHaveScan, Nullable<bool> fldTaeedSavabegh, Nullable<bool> fldMobileVerify, Nullable<bool> fldExpScan)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldStartCodeBillIdentityParameter = fldStartCodeBillIdentity.HasValue ?
                new ObjectParameter("fldStartCodeBillIdentity", fldStartCodeBillIdentity) :
                new ObjectParameter("fldStartCodeBillIdentity", typeof(byte));
    
            var fldRoundIDParameter = fldRoundID.HasValue ?
                new ObjectParameter("fldRoundID", fldRoundID) :
                new ObjectParameter("fldRoundID", typeof(byte));
    
            var fldPrintBill_PaymentParameter = fldPrintBill_Payment.HasValue ?
                new ObjectParameter("fldPrintBill_Payment", fldPrintBill_Payment) :
                new ObjectParameter("fldPrintBill_Payment", typeof(bool));
    
            var fldExemptNewProductionParameter = fldExemptNewProduction.HasValue ?
                new ObjectParameter("fldExemptNewProduction", fldExemptNewProduction) :
                new ObjectParameter("fldExemptNewProduction", typeof(bool));
    
            var fldTitleUserReportParameter = fldTitleUserReport != null ?
                new ObjectParameter("fldTitleUserReport", fldTitleUserReport) :
                new ObjectParameter("fldTitleUserReport", typeof(string));
    
            var fldLastRespitePaymentParameter = fldLastRespitePayment.HasValue ?
                new ObjectParameter("fldLastRespitePayment", fldLastRespitePayment) :
                new ObjectParameter("fldLastRespitePayment", typeof(int));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldImplementationDateParameter = fldImplementationDate.HasValue ?
                new ObjectParameter("fldImplementationDate", fldImplementationDate) :
                new ObjectParameter("fldImplementationDate", typeof(System.DateTime));
    
            var fldCountryDivisionsTreeApplyParameter = fldCountryDivisionsTreeApply.HasValue ?
                new ObjectParameter("fldCountryDivisionsTreeApply", fldCountryDivisionsTreeApply) :
                new ObjectParameter("fldCountryDivisionsTreeApply", typeof(bool));
    
            var fldTypeCarParameter = fldTypeCar.HasValue ?
                new ObjectParameter("fldTypeCar", fldTypeCar) :
                new ObjectParameter("fldTypeCar", typeof(int));
    
            var fldCodeCarParameter = fldCodeCar.HasValue ?
                new ObjectParameter("fldCodeCar", fldCodeCar) :
                new ObjectParameter("fldCodeCar", typeof(int));
    
            var fldCarSeriesTreeApplyParameter = fldCarSeriesTreeApply.HasValue ?
                new ObjectParameter("fldCarSeriesTreeApply", fldCarSeriesTreeApply) :
                new ObjectParameter("fldCarSeriesTreeApply", typeof(bool));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldCalcFromVarizParameter = fldCalcFromVariz.HasValue ?
                new ObjectParameter("fldCalcFromVariz", fldCalcFromVariz) :
                new ObjectParameter("fldCalcFromVariz", typeof(bool));
    
            var fldAzAkharinTarikhParameter = fldAzAkharinTarikh.HasValue ?
                new ObjectParameter("fldAzAkharinTarikh", fldAzAkharinTarikh) :
                new ObjectParameter("fldAzAkharinTarikh", typeof(System.DateTime));
    
            var fldDefaultPelakSerialParameter = fldDefaultPelakSerial.HasValue ?
                new ObjectParameter("fldDefaultPelakSerial", fldDefaultPelakSerial) :
                new ObjectParameter("fldDefaultPelakSerial", typeof(int));
    
            var fldDefaultPelakCharParameter = fldDefaultPelakChar.HasValue ?
                new ObjectParameter("fldDefaultPelakChar", fldDefaultPelakChar) :
                new ObjectParameter("fldDefaultPelakChar", typeof(int));
    
            var fldDefaultSearchParameter = fldDefaultSearch.HasValue ?
                new ObjectParameter("fldDefaultSearch", fldDefaultSearch) :
                new ObjectParameter("fldDefaultSearch", typeof(byte));
    
            var fldHaveScanParameter = fldHaveScan.HasValue ?
                new ObjectParameter("fldHaveScan", fldHaveScan) :
                new ObjectParameter("fldHaveScan", typeof(bool));
    
            var fldTaeedSavabeghParameter = fldTaeedSavabegh.HasValue ?
                new ObjectParameter("fldTaeedSavabegh", fldTaeedSavabegh) :
                new ObjectParameter("fldTaeedSavabegh", typeof(bool));
    
            var fldMobileVerifyParameter = fldMobileVerify.HasValue ?
                new ObjectParameter("fldMobileVerify", fldMobileVerify) :
                new ObjectParameter("fldMobileVerify", typeof(bool));
    
            var fldExpScanParameter = fldExpScan.HasValue ?
                new ObjectParameter("fldExpScan", fldExpScan) :
                new ObjectParameter("fldExpScan", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SubSettingUpdate", fldIDParameter, fldStartCodeBillIdentityParameter, fldRoundIDParameter, fldPrintBill_PaymentParameter, fldExemptNewProductionParameter, fldTitleUserReportParameter, fldLastRespitePaymentParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldUserIDParameter, fldDescParameter, fldImplementationDateParameter, fldCountryDivisionsTreeApplyParameter, fldTypeCarParameter, fldCodeCarParameter, fldCarSeriesTreeApplyParameter, fldUserPassParameter, fldCalcFromVarizParameter, fldAzAkharinTarikhParameter, fldDefaultPelakSerialParameter, fldDefaultPelakCharParameter, fldDefaultSearchParameter, fldHaveScanParameter, fldTaeedSavabeghParameter, fldMobileVerifyParameter, fldExpScanParameter);
        }
    
        public virtual int sp_SupportRateDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SupportRateDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_SupportRateInsert(ObjectParameter fldID, Nullable<int> fldCarClassId, Nullable<int> fldCarModelId, Nullable<int> fldCarSystemId, Nullable<int> fldCabinTypeId, Nullable<int> fldCarAccountTypeId, Nullable<int> fldCarMakeId, string fldYear, Nullable<bool> fldType, Nullable<long> fldUserId, string fldDesc)
        {
            var fldCarClassIdParameter = fldCarClassId.HasValue ?
                new ObjectParameter("fldCarClassId", fldCarClassId) :
                new ObjectParameter("fldCarClassId", typeof(int));
    
            var fldCarModelIdParameter = fldCarModelId.HasValue ?
                new ObjectParameter("fldCarModelId", fldCarModelId) :
                new ObjectParameter("fldCarModelId", typeof(int));
    
            var fldCarSystemIdParameter = fldCarSystemId.HasValue ?
                new ObjectParameter("fldCarSystemId", fldCarSystemId) :
                new ObjectParameter("fldCarSystemId", typeof(int));
    
            var fldCabinTypeIdParameter = fldCabinTypeId.HasValue ?
                new ObjectParameter("fldCabinTypeId", fldCabinTypeId) :
                new ObjectParameter("fldCabinTypeId", typeof(int));
    
            var fldCarAccountTypeIdParameter = fldCarAccountTypeId.HasValue ?
                new ObjectParameter("fldCarAccountTypeId", fldCarAccountTypeId) :
                new ObjectParameter("fldCarAccountTypeId", typeof(int));
    
            var fldCarMakeIdParameter = fldCarMakeId.HasValue ?
                new ObjectParameter("fldCarMakeId", fldCarMakeId) :
                new ObjectParameter("fldCarMakeId", typeof(int));
    
            var fldYearParameter = fldYear != null ?
                new ObjectParameter("fldYear", fldYear) :
                new ObjectParameter("fldYear", typeof(string));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(bool));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SupportRateInsert", fldID, fldCarClassIdParameter, fldCarModelIdParameter, fldCarSystemIdParameter, fldCabinTypeIdParameter, fldCarAccountTypeIdParameter, fldCarMakeIdParameter, fldYearParameter, fldTypeParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_SupportRateSelect> sp_SupportRateSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SupportRateSelect>("sp_SupportRateSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_SupportRateUpdate(Nullable<int> fldId, Nullable<int> fldCarClassId, Nullable<int> fldCarModelId, Nullable<int> fldCarSystemId, Nullable<int> fldCabinTypeId, Nullable<int> fldCarAccountTypeId, Nullable<int> fldCarMakeId, string fldYear, Nullable<bool> fldType, Nullable<long> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldCarClassIdParameter = fldCarClassId.HasValue ?
                new ObjectParameter("fldCarClassId", fldCarClassId) :
                new ObjectParameter("fldCarClassId", typeof(int));
    
            var fldCarModelIdParameter = fldCarModelId.HasValue ?
                new ObjectParameter("fldCarModelId", fldCarModelId) :
                new ObjectParameter("fldCarModelId", typeof(int));
    
            var fldCarSystemIdParameter = fldCarSystemId.HasValue ?
                new ObjectParameter("fldCarSystemId", fldCarSystemId) :
                new ObjectParameter("fldCarSystemId", typeof(int));
    
            var fldCabinTypeIdParameter = fldCabinTypeId.HasValue ?
                new ObjectParameter("fldCabinTypeId", fldCabinTypeId) :
                new ObjectParameter("fldCabinTypeId", typeof(int));
    
            var fldCarAccountTypeIdParameter = fldCarAccountTypeId.HasValue ?
                new ObjectParameter("fldCarAccountTypeId", fldCarAccountTypeId) :
                new ObjectParameter("fldCarAccountTypeId", typeof(int));
    
            var fldCarMakeIdParameter = fldCarMakeId.HasValue ?
                new ObjectParameter("fldCarMakeId", fldCarMakeId) :
                new ObjectParameter("fldCarMakeId", typeof(int));
    
            var fldYearParameter = fldYear != null ?
                new ObjectParameter("fldYear", fldYear) :
                new ObjectParameter("fldYear", typeof(string));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(bool));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SupportRateUpdate", fldIdParameter, fldCarClassIdParameter, fldCarModelIdParameter, fldCarSystemIdParameter, fldCabinTypeIdParameter, fldCarAccountTypeIdParameter, fldCarMakeIdParameter, fldYearParameter, fldTypeParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int sp_SupportRateUpdateType(Nullable<int> fldId, Nullable<int> fldUserId)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SupportRateUpdateType", fldIdParameter, fldUserIdParameter);
        }
    
        public virtual ObjectResult<sp_SystemReport_LogSelect> sp_SystemReport_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SystemReport_LogSelect>("sp_SystemReport_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SystemReportDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SystemReportDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SystemReportInsert(Nullable<int> fldReportTypeID, byte[] fldReportFile, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldReportTypeIDParameter = fldReportTypeID.HasValue ?
                new ObjectParameter("fldReportTypeID", fldReportTypeID) :
                new ObjectParameter("fldReportTypeID", typeof(int));
    
            var fldReportFileParameter = fldReportFile != null ?
                new ObjectParameter("fldReportFile", fldReportFile) :
                new ObjectParameter("fldReportFile", typeof(byte[]));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SystemReportInsert", fldReportTypeIDParameter, fldReportFileParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_SystemReportSelect> sp_SystemReportSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SystemReportSelect>("sp_SystemReportSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_SystemReportUpdate(Nullable<int> fldID, Nullable<int> fldReportTypeID, byte[] fldReportFile, Nullable<int> fldTypeCountryDivisions, Nullable<int> fldCodeCountryDivisions, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldReportTypeIDParameter = fldReportTypeID.HasValue ?
                new ObjectParameter("fldReportTypeID", fldReportTypeID) :
                new ObjectParameter("fldReportTypeID", typeof(int));
    
            var fldReportFileParameter = fldReportFile != null ?
                new ObjectParameter("fldReportFile", fldReportFile) :
                new ObjectParameter("fldReportFile", typeof(byte[]));
    
            var fldTypeCountryDivisionsParameter = fldTypeCountryDivisions.HasValue ?
                new ObjectParameter("fldTypeCountryDivisions", fldTypeCountryDivisions) :
                new ObjectParameter("fldTypeCountryDivisions", typeof(int));
    
            var fldCodeCountryDivisionsParameter = fldCodeCountryDivisions.HasValue ?
                new ObjectParameter("fldCodeCountryDivisions", fldCodeCountryDivisions) :
                new ObjectParameter("fldCodeCountryDivisions", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SystemReportUpdate", fldIDParameter, fldReportTypeIDParameter, fldReportFileParameter, fldTypeCountryDivisionsParameter, fldCodeCountryDivisionsParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_TableTreeCarSelect> sp_TableTreeCarSelect(string fieldname, string value, Nullable<int> h, Nullable<int> type, Nullable<int> code)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TableTreeCarSelect>("sp_TableTreeCarSelect", fieldnameParameter, valueParameter, hParameter, typeParameter, codeParameter);
        }
    
        public virtual ObjectResult<sp_TableTreeSelect> sp_TableTreeSelect(string fieldname, string value, Nullable<int> h, Nullable<int> type, Nullable<int> code)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TableTreeSelect>("sp_TableTreeSelect", fieldnameParameter, valueParameter, hParameter, typeParameter, codeParameter);
        }
    
        public virtual int sp_tblBedehiInsert(Nullable<int> fldMablagh, Nullable<int> fldCarFileID, string fldName, string fldMotorNumber, string fldMobile, string fldPlaqueNumber, string fldModelName, string fldClassName, string fldSystemName, string fldMelli_EconomicCode, string fldShasiNumber, Nullable<int> fldCarID, Nullable<int> fldFishID, Nullable<System.DateTime> fldCollectionDate)
        {
            var fldMablaghParameter = fldMablagh.HasValue ?
                new ObjectParameter("fldMablagh", fldMablagh) :
                new ObjectParameter("fldMablagh", typeof(int));
    
            var fldCarFileIDParameter = fldCarFileID.HasValue ?
                new ObjectParameter("fldCarFileID", fldCarFileID) :
                new ObjectParameter("fldCarFileID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldMotorNumberParameter = fldMotorNumber != null ?
                new ObjectParameter("fldMotorNumber", fldMotorNumber) :
                new ObjectParameter("fldMotorNumber", typeof(string));
    
            var fldMobileParameter = fldMobile != null ?
                new ObjectParameter("fldMobile", fldMobile) :
                new ObjectParameter("fldMobile", typeof(string));
    
            var fldPlaqueNumberParameter = fldPlaqueNumber != null ?
                new ObjectParameter("fldPlaqueNumber", fldPlaqueNumber) :
                new ObjectParameter("fldPlaqueNumber", typeof(string));
    
            var fldModelNameParameter = fldModelName != null ?
                new ObjectParameter("fldModelName", fldModelName) :
                new ObjectParameter("fldModelName", typeof(string));
    
            var fldClassNameParameter = fldClassName != null ?
                new ObjectParameter("fldClassName", fldClassName) :
                new ObjectParameter("fldClassName", typeof(string));
    
            var fldSystemNameParameter = fldSystemName != null ?
                new ObjectParameter("fldSystemName", fldSystemName) :
                new ObjectParameter("fldSystemName", typeof(string));
    
            var fldMelli_EconomicCodeParameter = fldMelli_EconomicCode != null ?
                new ObjectParameter("fldMelli_EconomicCode", fldMelli_EconomicCode) :
                new ObjectParameter("fldMelli_EconomicCode", typeof(string));
    
            var fldShasiNumberParameter = fldShasiNumber != null ?
                new ObjectParameter("fldShasiNumber", fldShasiNumber) :
                new ObjectParameter("fldShasiNumber", typeof(string));
    
            var fldCarIDParameter = fldCarID.HasValue ?
                new ObjectParameter("fldCarID", fldCarID) :
                new ObjectParameter("fldCarID", typeof(int));
    
            var fldFishIDParameter = fldFishID.HasValue ?
                new ObjectParameter("fldFishID", fldFishID) :
                new ObjectParameter("fldFishID", typeof(int));
    
            var fldCollectionDateParameter = fldCollectionDate.HasValue ?
                new ObjectParameter("fldCollectionDate", fldCollectionDate) :
                new ObjectParameter("fldCollectionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblBedehiInsert", fldMablaghParameter, fldCarFileIDParameter, fldNameParameter, fldMotorNumberParameter, fldMobileParameter, fldPlaqueNumberParameter, fldModelNameParameter, fldClassNameParameter, fldSystemNameParameter, fldMelli_EconomicCodeParameter, fldShasiNumberParameter, fldCarIDParameter, fldFishIDParameter, fldCollectionDateParameter);
        }
    
        public virtual int sp_tblDigitalTreeDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblDigitalTreeDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_tblDigitalTreeInsert(string fldName, Nullable<bool> fldAddable, Nullable<int> pId, Nullable<long> fldUserID, string fldDesc)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldAddableParameter = fldAddable.HasValue ?
                new ObjectParameter("fldAddable", fldAddable) :
                new ObjectParameter("fldAddable", typeof(bool));
    
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("PId", pId) :
                new ObjectParameter("PId", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblDigitalTreeInsert", fldNameParameter, fldAddableParameter, pIdParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_tblDigitalTreeSelect> sp_tblDigitalTreeSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblDigitalTreeSelect>("sp_tblDigitalTreeSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_tblDigitalTreeUpdate(Nullable<int> fldId, string fldName, Nullable<bool> fldAddable, Nullable<int> pId, Nullable<long> fldUserID, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldAddableParameter = fldAddable.HasValue ?
                new ObjectParameter("fldAddable", fldAddable) :
                new ObjectParameter("fldAddable", typeof(bool));
    
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("PId", pId) :
                new ObjectParameter("PId", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblDigitalTreeUpdate", fldIdParameter, fldNameParameter, fldAddableParameter, pIdParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual int Sp_tblOfficeReciptInsert(ObjectParameter fldId, ObjectParameter fldTarikh, Nullable<int> fldUserId, Nullable<long> fldCarid, Nullable<int> fldPrice, byte[] fldImage, ObjectParameter fldShomare)
        {
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldCaridParameter = fldCarid.HasValue ?
                new ObjectParameter("fldCarid", fldCarid) :
                new ObjectParameter("fldCarid", typeof(long));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldImageParameter = fldImage != null ?
                new ObjectParameter("fldImage", fldImage) :
                new ObjectParameter("fldImage", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_tblOfficeReciptInsert", fldId, fldTarikh, fldUserIdParameter, fldCaridParameter, fldPriceParameter, fldImageParameter, fldShomare);
        }
    
        public virtual ObjectResult<sp_tblOfficeReciptNerkhSelect> sp_tblOfficeReciptNerkhSelect(Nullable<int> carType, Nullable<int> carCode, Nullable<int> countryType, Nullable<int> countryCode)
        {
            var carTypeParameter = carType.HasValue ?
                new ObjectParameter("carType", carType) :
                new ObjectParameter("carType", typeof(int));
    
            var carCodeParameter = carCode.HasValue ?
                new ObjectParameter("carCode", carCode) :
                new ObjectParameter("carCode", typeof(int));
    
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("countryType", countryType) :
                new ObjectParameter("countryType", typeof(int));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblOfficeReciptNerkhSelect>("sp_tblOfficeReciptNerkhSelect", carTypeParameter, carCodeParameter, countryTypeParameter, countryCodeParameter);
        }
    
        public virtual ObjectResult<Sp_tblOfficeReciptSelect> Sp_tblOfficeReciptSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_tblOfficeReciptSelect>("Sp_tblOfficeReciptSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<Sp_tblOfficeReciptSelect_Image> Sp_tblOfficeReciptSelect_Image(string fldid)
        {
            var fldidParameter = fldid != null ?
                new ObjectParameter("fldid", fldid) :
                new ObjectParameter("fldid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_tblOfficeReciptSelect_Image>("Sp_tblOfficeReciptSelect_Image", fldidParameter);
        }
    
        public virtual int Sp_tblOfficeReciptUpdate(string fldId, byte[] fldImage)
        {
            var fldIdParameter = fldId != null ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(string));
    
            var fldImageParameter = fldImage != null ?
                new ObjectParameter("fldImage", fldImage) :
                new ObjectParameter("fldImage", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_tblOfficeReciptUpdate", fldIdParameter, fldImageParameter);
        }
    
        public virtual ObjectResult<sp_tblPcPos_Param_Value> sp_tblPcPos_Param_Value(Nullable<int> value)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblPcPos_Param_Value>("sp_tblPcPos_Param_Value", valueParameter);
        }
    
        public virtual int Sp_tblPishkhanResiptInsert(ObjectParameter fldId, Nullable<long> fldCarFileId, Nullable<int> fldPrice, string fldDesc, Nullable<long> fldUserId, Nullable<byte> fldStatus, string fldSerial, string fldPosString, string fldTermId, string fldTrace, string fldRRN, string fldPishkhanRahgiri)
        {
            var fldCarFileIdParameter = fldCarFileId.HasValue ?
                new ObjectParameter("fldCarFileId", fldCarFileId) :
                new ObjectParameter("fldCarFileId", typeof(long));
    
            var fldPriceParameter = fldPrice.HasValue ?
                new ObjectParameter("fldPrice", fldPrice) :
                new ObjectParameter("fldPrice", typeof(int));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldStatusParameter = fldStatus.HasValue ?
                new ObjectParameter("fldStatus", fldStatus) :
                new ObjectParameter("fldStatus", typeof(byte));
    
            var fldSerialParameter = fldSerial != null ?
                new ObjectParameter("fldSerial", fldSerial) :
                new ObjectParameter("fldSerial", typeof(string));
    
            var fldPosStringParameter = fldPosString != null ?
                new ObjectParameter("fldPosString", fldPosString) :
                new ObjectParameter("fldPosString", typeof(string));
    
            var fldTermIdParameter = fldTermId != null ?
                new ObjectParameter("fldTermId", fldTermId) :
                new ObjectParameter("fldTermId", typeof(string));
    
            var fldTraceParameter = fldTrace != null ?
                new ObjectParameter("fldTrace", fldTrace) :
                new ObjectParameter("fldTrace", typeof(string));
    
            var fldRRNParameter = fldRRN != null ?
                new ObjectParameter("fldRRN", fldRRN) :
                new ObjectParameter("fldRRN", typeof(string));
    
            var fldPishkhanRahgiriParameter = fldPishkhanRahgiri != null ?
                new ObjectParameter("fldPishkhanRahgiri", fldPishkhanRahgiri) :
                new ObjectParameter("fldPishkhanRahgiri", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_tblPishkhanResiptInsert", fldId, fldCarFileIdParameter, fldPriceParameter, fldDescParameter, fldUserIdParameter, fldStatusParameter, fldSerialParameter, fldPosStringParameter, fldTermIdParameter, fldTraceParameter, fldRRNParameter, fldPishkhanRahgiriParameter);
        }
    
        public virtual int Sp_tblPishkhanResiptResive(Nullable<int> fldId, Nullable<long> fldUserId, Nullable<byte> fldStatus)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldStatusParameter = fldStatus.HasValue ?
                new ObjectParameter("fldStatus", fldStatus) :
                new ObjectParameter("fldStatus", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_tblPishkhanResiptResive", fldIdParameter, fldUserIdParameter, fldStatusParameter);
        }
    
        public virtual ObjectResult<Sp_tblPishkhanResiptSelect> Sp_tblPishkhanResiptSelect(string feild, string value)
        {
            var feildParameter = feild != null ?
                new ObjectParameter("feild", feild) :
                new ObjectParameter("feild", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_tblPishkhanResiptSelect>("Sp_tblPishkhanResiptSelect", feildParameter, valueParameter);
        }
    
        public virtual int Sp_tblPishkhanResiptVerify(Nullable<int> fldId, string fldDesc, Nullable<long> fldUserId, Nullable<byte> fldStatus, string fldTermId, string fldTrace, string fldRRN, string fldPishkhanRahgiri)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldStatusParameter = fldStatus.HasValue ?
                new ObjectParameter("fldStatus", fldStatus) :
                new ObjectParameter("fldStatus", typeof(byte));
    
            var fldTermIdParameter = fldTermId != null ?
                new ObjectParameter("fldTermId", fldTermId) :
                new ObjectParameter("fldTermId", typeof(string));
    
            var fldTraceParameter = fldTrace != null ?
                new ObjectParameter("fldTrace", fldTrace) :
                new ObjectParameter("fldTrace", typeof(string));
    
            var fldRRNParameter = fldRRN != null ?
                new ObjectParameter("fldRRN", fldRRN) :
                new ObjectParameter("fldRRN", typeof(string));
    
            var fldPishkhanRahgiriParameter = fldPishkhanRahgiri != null ?
                new ObjectParameter("fldPishkhanRahgiri", fldPishkhanRahgiri) :
                new ObjectParameter("fldPishkhanRahgiri", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_tblPishkhanResiptVerify", fldIdParameter, fldDescParameter, fldUserIdParameter, fldStatusParameter, fldTermIdParameter, fldTraceParameter, fldRRNParameter, fldPishkhanRahgiriParameter);
        }
    
        public virtual int Sp_tblWebServiceFactorInsert(Nullable<int> fldMablagh, string fldType, Nullable<short> fldYear, ObjectParameter fldOrder)
        {
            var fldMablaghParameter = fldMablagh.HasValue ?
                new ObjectParameter("fldMablagh", fldMablagh) :
                new ObjectParameter("fldMablagh", typeof(int));
    
            var fldTypeParameter = fldType != null ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(string));
    
            var fldYearParameter = fldYear.HasValue ?
                new ObjectParameter("fldYear", fldYear) :
                new ObjectParameter("fldYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_tblWebServiceFactorInsert", fldMablaghParameter, fldTypeParameter, fldYearParameter, fldOrder);
        }
    
        public virtual int sp_TempArchiveDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TempArchiveDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_TempArchiveInsert(Nullable<long> fldCarFileId, byte[] fldPic, Nullable<long> fldUserID, string fldDesc)
        {
            var fldCarFileIdParameter = fldCarFileId.HasValue ?
                new ObjectParameter("fldCarFileId", fldCarFileId) :
                new ObjectParameter("fldCarFileId", typeof(long));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TempArchiveInsert", fldCarFileIdParameter, fldPicParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<sp_TempArchiveSelect> sp_TempArchiveSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TempArchiveSelect>("sp_TempArchiveSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_TempArchiveUpdate(Nullable<int> fldId, Nullable<long> fldCarFileId, byte[] fldPic, Nullable<long> fldUserID, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldCarFileIdParameter = fldCarFileId.HasValue ?
                new ObjectParameter("fldCarFileId", fldCarFileId) :
                new ObjectParameter("fldCarFileId", typeof(long));
    
            var fldPicParameter = fldPic != null ?
                new ObjectParameter("fldPic", fldPic) :
                new ObjectParameter("fldPic", typeof(byte[]));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TempArchiveUpdate", fldIdParameter, fldCarFileIdParameter, fldPicParameter, fldUserIDParameter, fldDescParameter);
        }
    
        public virtual int sp_TransactionInfDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TransactionInfDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int sp_TransactionInfInsert(string fldUserName, Nullable<int> fldDivType, Nullable<int> fldDivCode, string fldPass, Nullable<long> fldUserId, string fldDesc, Nullable<bool> fldInherit)
        {
            var fldUserNameParameter = fldUserName != null ?
                new ObjectParameter("fldUserName", fldUserName) :
                new ObjectParameter("fldUserName", typeof(string));
    
            var fldDivTypeParameter = fldDivType.HasValue ?
                new ObjectParameter("fldDivType", fldDivType) :
                new ObjectParameter("fldDivType", typeof(int));
    
            var fldDivCodeParameter = fldDivCode.HasValue ?
                new ObjectParameter("fldDivCode", fldDivCode) :
                new ObjectParameter("fldDivCode", typeof(int));
    
            var fldPassParameter = fldPass != null ?
                new ObjectParameter("fldPass", fldPass) :
                new ObjectParameter("fldPass", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldInheritParameter = fldInherit.HasValue ?
                new ObjectParameter("fldInherit", fldInherit) :
                new ObjectParameter("fldInherit", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TransactionInfInsert", fldUserNameParameter, fldDivTypeParameter, fldDivCodeParameter, fldPassParameter, fldUserIdParameter, fldDescParameter, fldInheritParameter);
        }
    
        public virtual ObjectResult<sp_TransactionInfSelect> sp_TransactionInfSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TransactionInfSelect>("sp_TransactionInfSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int sp_TransactionInfUpdate(Nullable<int> fldId, string fldUserName, Nullable<int> fldDivType, Nullable<int> fldDivCode, string fldPass, Nullable<long> fldUserId, string fldDesc, Nullable<bool> fldInherit)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldUserNameParameter = fldUserName != null ?
                new ObjectParameter("fldUserName", fldUserName) :
                new ObjectParameter("fldUserName", typeof(string));
    
            var fldDivTypeParameter = fldDivType.HasValue ?
                new ObjectParameter("fldDivType", fldDivType) :
                new ObjectParameter("fldDivType", typeof(int));
    
            var fldDivCodeParameter = fldDivCode.HasValue ?
                new ObjectParameter("fldDivCode", fldDivCode) :
                new ObjectParameter("fldDivCode", typeof(int));
    
            var fldPassParameter = fldPass != null ?
                new ObjectParameter("fldPass", fldPass) :
                new ObjectParameter("fldPass", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldInheritParameter = fldInherit.HasValue ?
                new ObjectParameter("fldInherit", fldInherit) :
                new ObjectParameter("fldInherit", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TransactionInfUpdate", fldIdParameter, fldUserNameParameter, fldDivTypeParameter, fldDivCodeParameter, fldPassParameter, fldUserIdParameter, fldDescParameter, fldInheritParameter);
        }
    
        public virtual ObjectResult<sp_UpAccountBankSelect> sp_UpAccountBankSelect(Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision)
        {
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpAccountBankSelect>("sp_UpAccountBankSelect", fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter);
        }
    
        public virtual int sp_UpdateCar_CarFile(Nullable<long> fldID, string fldMotorNumber, string fldShasiNumber, string fldVIN, Nullable<int> fldCarModelID, Nullable<int> fldCarClassID, Nullable<int> fldCarColorID, Nullable<short> fldModel, Nullable<System.DateTime> fldStartDateInsurance, string fldDescCar, Nullable<int> fldCarPlaqueID, Nullable<System.DateTime> fldDatePlaque, Nullable<long> fldUserID, string fldDescCarFile, string fldUserPass, Nullable<int> fldBargSabzFileId, Nullable<int> fldCartFileId, Nullable<int> fldSanadForoshFileId, Nullable<int> fldCartBackFileId, Nullable<bool> fldTypeEntezami, Nullable<bool> fldMotabeghBaShasi)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldMotorNumberParameter = fldMotorNumber != null ?
                new ObjectParameter("fldMotorNumber", fldMotorNumber) :
                new ObjectParameter("fldMotorNumber", typeof(string));
    
            var fldShasiNumberParameter = fldShasiNumber != null ?
                new ObjectParameter("fldShasiNumber", fldShasiNumber) :
                new ObjectParameter("fldShasiNumber", typeof(string));
    
            var fldVINParameter = fldVIN != null ?
                new ObjectParameter("fldVIN", fldVIN) :
                new ObjectParameter("fldVIN", typeof(string));
    
            var fldCarModelIDParameter = fldCarModelID.HasValue ?
                new ObjectParameter("fldCarModelID", fldCarModelID) :
                new ObjectParameter("fldCarModelID", typeof(int));
    
            var fldCarClassIDParameter = fldCarClassID.HasValue ?
                new ObjectParameter("fldCarClassID", fldCarClassID) :
                new ObjectParameter("fldCarClassID", typeof(int));
    
            var fldCarColorIDParameter = fldCarColorID.HasValue ?
                new ObjectParameter("fldCarColorID", fldCarColorID) :
                new ObjectParameter("fldCarColorID", typeof(int));
    
            var fldModelParameter = fldModel.HasValue ?
                new ObjectParameter("fldModel", fldModel) :
                new ObjectParameter("fldModel", typeof(short));
    
            var fldStartDateInsuranceParameter = fldStartDateInsurance.HasValue ?
                new ObjectParameter("fldStartDateInsurance", fldStartDateInsurance) :
                new ObjectParameter("fldStartDateInsurance", typeof(System.DateTime));
    
            var fldDescCarParameter = fldDescCar != null ?
                new ObjectParameter("fldDescCar", fldDescCar) :
                new ObjectParameter("fldDescCar", typeof(string));
    
            var fldCarPlaqueIDParameter = fldCarPlaqueID.HasValue ?
                new ObjectParameter("fldCarPlaqueID", fldCarPlaqueID) :
                new ObjectParameter("fldCarPlaqueID", typeof(int));
    
            var fldDatePlaqueParameter = fldDatePlaque.HasValue ?
                new ObjectParameter("fldDatePlaque", fldDatePlaque) :
                new ObjectParameter("fldDatePlaque", typeof(System.DateTime));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescCarFileParameter = fldDescCarFile != null ?
                new ObjectParameter("fldDescCarFile", fldDescCarFile) :
                new ObjectParameter("fldDescCarFile", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldBargSabzFileIdParameter = fldBargSabzFileId.HasValue ?
                new ObjectParameter("fldBargSabzFileId", fldBargSabzFileId) :
                new ObjectParameter("fldBargSabzFileId", typeof(int));
    
            var fldCartFileIdParameter = fldCartFileId.HasValue ?
                new ObjectParameter("fldCartFileId", fldCartFileId) :
                new ObjectParameter("fldCartFileId", typeof(int));
    
            var fldSanadForoshFileIdParameter = fldSanadForoshFileId.HasValue ?
                new ObjectParameter("fldSanadForoshFileId", fldSanadForoshFileId) :
                new ObjectParameter("fldSanadForoshFileId", typeof(int));
    
            var fldCartBackFileIdParameter = fldCartBackFileId.HasValue ?
                new ObjectParameter("fldCartBackFileId", fldCartBackFileId) :
                new ObjectParameter("fldCartBackFileId", typeof(int));
    
            var fldTypeEntezamiParameter = fldTypeEntezami.HasValue ?
                new ObjectParameter("fldTypeEntezami", fldTypeEntezami) :
                new ObjectParameter("fldTypeEntezami", typeof(bool));
    
            var fldMotabeghBaShasiParameter = fldMotabeghBaShasi.HasValue ?
                new ObjectParameter("fldMotabeghBaShasi", fldMotabeghBaShasi) :
                new ObjectParameter("fldMotabeghBaShasi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCar_CarFile", fldIDParameter, fldMotorNumberParameter, fldShasiNumberParameter, fldVINParameter, fldCarModelIDParameter, fldCarClassIDParameter, fldCarColorIDParameter, fldModelParameter, fldStartDateInsuranceParameter, fldDescCarParameter, fldCarPlaqueIDParameter, fldDatePlaqueParameter, fldUserIDParameter, fldDescCarFileParameter, fldUserPassParameter, fldBargSabzFileIdParameter, fldCartFileIdParameter, fldSanadForoshFileIdParameter, fldCartBackFileIdParameter, fldTypeEntezamiParameter, fldMotabeghBaShasiParameter);
        }
    
        public virtual int sp_UpdateCar_TypeEntezami(Nullable<long> fldID, string fldMotorNumber, string fldShasiNumber, string fldVIN, Nullable<int> fldCarModelID, Nullable<int> fldCarClassID, Nullable<int> fldCarColorID, Nullable<short> fldModel, Nullable<System.DateTime> fldStartDateInsurance, Nullable<bool> fldTypeEntezami, Nullable<bool> fldMotabeghBaShasi, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldMotorNumberParameter = fldMotorNumber != null ?
                new ObjectParameter("fldMotorNumber", fldMotorNumber) :
                new ObjectParameter("fldMotorNumber", typeof(string));
    
            var fldShasiNumberParameter = fldShasiNumber != null ?
                new ObjectParameter("fldShasiNumber", fldShasiNumber) :
                new ObjectParameter("fldShasiNumber", typeof(string));
    
            var fldVINParameter = fldVIN != null ?
                new ObjectParameter("fldVIN", fldVIN) :
                new ObjectParameter("fldVIN", typeof(string));
    
            var fldCarModelIDParameter = fldCarModelID.HasValue ?
                new ObjectParameter("fldCarModelID", fldCarModelID) :
                new ObjectParameter("fldCarModelID", typeof(int));
    
            var fldCarClassIDParameter = fldCarClassID.HasValue ?
                new ObjectParameter("fldCarClassID", fldCarClassID) :
                new ObjectParameter("fldCarClassID", typeof(int));
    
            var fldCarColorIDParameter = fldCarColorID.HasValue ?
                new ObjectParameter("fldCarColorID", fldCarColorID) :
                new ObjectParameter("fldCarColorID", typeof(int));
    
            var fldModelParameter = fldModel.HasValue ?
                new ObjectParameter("fldModel", fldModel) :
                new ObjectParameter("fldModel", typeof(short));
    
            var fldStartDateInsuranceParameter = fldStartDateInsurance.HasValue ?
                new ObjectParameter("fldStartDateInsurance", fldStartDateInsurance) :
                new ObjectParameter("fldStartDateInsurance", typeof(System.DateTime));
    
            var fldTypeEntezamiParameter = fldTypeEntezami.HasValue ?
                new ObjectParameter("fldTypeEntezami", fldTypeEntezami) :
                new ObjectParameter("fldTypeEntezami", typeof(bool));
    
            var fldMotabeghBaShasiParameter = fldMotabeghBaShasi.HasValue ?
                new ObjectParameter("fldMotabeghBaShasi", fldMotabeghBaShasi) :
                new ObjectParameter("fldMotabeghBaShasi", typeof(bool));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCar_TypeEntezami", fldIDParameter, fldMotorNumberParameter, fldShasiNumberParameter, fldVINParameter, fldCarModelIDParameter, fldCarClassIDParameter, fldCarColorIDParameter, fldModelParameter, fldStartDateInsuranceParameter, fldTypeEntezamiParameter, fldMotabeghBaShasiParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int Sp_UpdateCarPlaque_Owner(Nullable<int> fldOwnerID, Nullable<int> id)
        {
            var fldOwnerIDParameter = fldOwnerID.HasValue ?
                new ObjectParameter("fldOwnerID", fldOwnerID) :
                new ObjectParameter("fldOwnerID", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateCarPlaque_Owner", fldOwnerIDParameter, idParameter);
        }
    
        public virtual int sp_UpdatePassGuestUser(string pass, Nullable<int> id)
        {
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePassGuestUser", passParameter, idParameter);
        }
    
        public virtual ObjectResult<sp_UpPishkhanServiceSelect> sp_UpPishkhanServiceSelect(Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision)
        {
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpPishkhanServiceSelect>("sp_UpPishkhanServiceSelect", fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter);
        }
    
        public virtual ObjectResult<sp_UpReportSelect> sp_UpReportSelect(Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision)
        {
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpReportSelect>("sp_UpReportSelect", fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter);
        }
    
        public virtual ObjectResult<sp_UpSubSettingSelect> sp_UpSubSettingSelect(Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision)
        {
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpSubSettingSelect>("sp_UpSubSettingSelect", fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter);
        }
    
        public virtual ObjectResult<sp_UsePattern_LogSelect> sp_UsePattern_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UsePattern_LogSelect>("sp_UsePattern_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_UsePatternDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UsePatternDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_UsePatternInsert(Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision, string fldNumber, Nullable<int> fldNo, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            var fldNumberParameter = fldNumber != null ?
                new ObjectParameter("fldNumber", fldNumber) :
                new ObjectParameter("fldNumber", typeof(string));
    
            var fldNoParameter = fldNo.HasValue ?
                new ObjectParameter("fldNo", fldNo) :
                new ObjectParameter("fldNo", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UsePatternInsert", fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter, fldNumberParameter, fldNoParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_UsePatternSelect> sp_UsePatternSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass, Nullable<bool> fldUserType)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldUserTypeParameter = fldUserType.HasValue ?
                new ObjectParameter("fldUserType", fldUserType) :
                new ObjectParameter("fldUserType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UsePatternSelect>("sp_UsePatternSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter, fldUserTypeParameter);
        }
    
        public virtual int sp_UsePatternUpdate(Nullable<int> fldID, Nullable<int> fldTypeCountryDivision, Nullable<int> fldCodeCountryDivision, string fldNumber, Nullable<int> fldNo, Nullable<long> fldUserID, string fldDesc, Nullable<System.DateTime> fldDate, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldTypeCountryDivisionParameter = fldTypeCountryDivision.HasValue ?
                new ObjectParameter("fldTypeCountryDivision", fldTypeCountryDivision) :
                new ObjectParameter("fldTypeCountryDivision", typeof(int));
    
            var fldCodeCountryDivisionParameter = fldCodeCountryDivision.HasValue ?
                new ObjectParameter("fldCodeCountryDivision", fldCodeCountryDivision) :
                new ObjectParameter("fldCodeCountryDivision", typeof(int));
    
            var fldNumberParameter = fldNumber != null ?
                new ObjectParameter("fldNumber", fldNumber) :
                new ObjectParameter("fldNumber", typeof(string));
    
            var fldNoParameter = fldNo.HasValue ?
                new ObjectParameter("fldNo", fldNo) :
                new ObjectParameter("fldNo", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldDateParameter = fldDate.HasValue ?
                new ObjectParameter("fldDate", fldDate) :
                new ObjectParameter("fldDate", typeof(System.DateTime));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UsePatternUpdate", fldIDParameter, fldTypeCountryDivisionParameter, fldCodeCountryDivisionParameter, fldNumberParameter, fldNoParameter, fldUserIDParameter, fldDescParameter, fldDateParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_User_Group_LogSelect> sp_User_Group_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_Group_LogSelect>("sp_User_Group_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_User_GroupDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_GroupDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_User_GroupInsert(Nullable<int> fldUserGroupID, Nullable<long> fldUserSelectID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldUserGroupIDParameter = fldUserGroupID.HasValue ?
                new ObjectParameter("fldUserGroupID", fldUserGroupID) :
                new ObjectParameter("fldUserGroupID", typeof(int));
    
            var fldUserSelectIDParameter = fldUserSelectID.HasValue ?
                new ObjectParameter("fldUserSelectID", fldUserSelectID) :
                new ObjectParameter("fldUserSelectID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_GroupInsert", fldUserGroupIDParameter, fldUserSelectIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_User_GroupSelect> sp_User_GroupSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_GroupSelect>("sp_User_GroupSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_User_GroupUpdate(Nullable<int> fldID, Nullable<int> fldUserGroupID, Nullable<long> fldUserSelectID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserGroupIDParameter = fldUserGroupID.HasValue ?
                new ObjectParameter("fldUserGroupID", fldUserGroupID) :
                new ObjectParameter("fldUserGroupID", typeof(int));
    
            var fldUserSelectIDParameter = fldUserSelectID.HasValue ?
                new ObjectParameter("fldUserSelectID", fldUserSelectID) :
                new ObjectParameter("fldUserSelectID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_GroupUpdate", fldIDParameter, fldUserGroupIDParameter, fldUserSelectIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_User_LogSelect> sp_User_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_LogSelect>("sp_User_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_UserDelete(Nullable<long> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_UserGroup_LogSelect> sp_UserGroup_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserGroup_LogSelect>("sp_UserGroup_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_UserGroupDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserGroupDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_UserGroupInsert(string fldTitle, string fldDec, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldTitleParameter = fldTitle != null ?
                new ObjectParameter("fldTitle", fldTitle) :
                new ObjectParameter("fldTitle", typeof(string));
    
            var fldDecParameter = fldDec != null ?
                new ObjectParameter("fldDec", fldDec) :
                new ObjectParameter("fldDec", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserGroupInsert", fldTitleParameter, fldDecParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_UserGroupSelect> sp_UserGroupSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserID, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserGroupSelect>("sp_UserGroupSelect", fieldnameParameter, valueParameter, hParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_UserGroupUpdate(Nullable<int> fldID, string fldTitle, string fldDec, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldTitleParameter = fldTitle != null ?
                new ObjectParameter("fldTitle", fldTitle) :
                new ObjectParameter("fldTitle", typeof(string));
    
            var fldDecParameter = fldDec != null ?
                new ObjectParameter("fldDec", fldDec) :
                new ObjectParameter("fldDec", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserGroupUpdate", fldIDParameter, fldTitleParameter, fldDecParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual int sp_UserInsert(ObjectParameter fldId, string fldName, string fldFamily, Nullable<bool> fldStatus, string fldPassword, string fldUserName, string fldMelliCode, string fldEmail, string fldNumberAgoTel, string fldTel, string fldMobile, Nullable<System.DateTime> fldStartDate, Nullable<int> fldtype, Nullable<int> fldCode, Nullable<long> fldUserID, string fldDesc, byte[] fldImage, string fldOfficeUserKey, string fldUserPass, Nullable<bool> fldUserType)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldFamilyParameter = fldFamily != null ?
                new ObjectParameter("fldFamily", fldFamily) :
                new ObjectParameter("fldFamily", typeof(string));
    
            var fldStatusParameter = fldStatus.HasValue ?
                new ObjectParameter("fldStatus", fldStatus) :
                new ObjectParameter("fldStatus", typeof(bool));
    
            var fldPasswordParameter = fldPassword != null ?
                new ObjectParameter("fldPassword", fldPassword) :
                new ObjectParameter("fldPassword", typeof(string));
    
            var fldUserNameParameter = fldUserName != null ?
                new ObjectParameter("fldUserName", fldUserName) :
                new ObjectParameter("fldUserName", typeof(string));
    
            var fldMelliCodeParameter = fldMelliCode != null ?
                new ObjectParameter("fldMelliCode", fldMelliCode) :
                new ObjectParameter("fldMelliCode", typeof(string));
    
            var fldEmailParameter = fldEmail != null ?
                new ObjectParameter("fldEmail", fldEmail) :
                new ObjectParameter("fldEmail", typeof(string));
    
            var fldNumberAgoTelParameter = fldNumberAgoTel != null ?
                new ObjectParameter("fldNumberAgoTel", fldNumberAgoTel) :
                new ObjectParameter("fldNumberAgoTel", typeof(string));
    
            var fldTelParameter = fldTel != null ?
                new ObjectParameter("fldTel", fldTel) :
                new ObjectParameter("fldTel", typeof(string));
    
            var fldMobileParameter = fldMobile != null ?
                new ObjectParameter("fldMobile", fldMobile) :
                new ObjectParameter("fldMobile", typeof(string));
    
            var fldStartDateParameter = fldStartDate.HasValue ?
                new ObjectParameter("fldStartDate", fldStartDate) :
                new ObjectParameter("fldStartDate", typeof(System.DateTime));
    
            var fldtypeParameter = fldtype.HasValue ?
                new ObjectParameter("fldtype", fldtype) :
                new ObjectParameter("fldtype", typeof(int));
    
            var fldCodeParameter = fldCode.HasValue ?
                new ObjectParameter("fldCode", fldCode) :
                new ObjectParameter("fldCode", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldImageParameter = fldImage != null ?
                new ObjectParameter("fldImage", fldImage) :
                new ObjectParameter("fldImage", typeof(byte[]));
    
            var fldOfficeUserKeyParameter = fldOfficeUserKey != null ?
                new ObjectParameter("fldOfficeUserKey", fldOfficeUserKey) :
                new ObjectParameter("fldOfficeUserKey", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldUserTypeParameter = fldUserType.HasValue ?
                new ObjectParameter("fldUserType", fldUserType) :
                new ObjectParameter("fldUserType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserInsert", fldId, fldNameParameter, fldFamilyParameter, fldStatusParameter, fldPasswordParameter, fldUserNameParameter, fldMelliCodeParameter, fldEmailParameter, fldNumberAgoTelParameter, fldTelParameter, fldMobileParameter, fldStartDateParameter, fldtypeParameter, fldCodeParameter, fldUserIDParameter, fldDescParameter, fldImageParameter, fldOfficeUserKeyParameter, fldUserPassParameter, fldUserTypeParameter);
        }
    
        public virtual int sp_UserPassUpdate(Nullable<int> id, string pass)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserPassUpdate", idParameter, passParameter);
        }
    
        public virtual ObjectResult<sp_UserSelect> sp_UserSelect(string fieldname, string value, Nullable<int> h, string pass, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserSelect>("sp_UserSelect", fieldnameParameter, valueParameter, hParameter, passParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_UserUpdate(Nullable<long> fldID, string fldName, string fldFamily, Nullable<bool> fldStatus, string fldPassword, string fldUserName, string fldMelliCode, string fldEmail, string fldNumberAgoTel, string fldTel, string fldMobile, Nullable<System.DateTime> fldStartDate, Nullable<int> fldtype, Nullable<int> fldCode, Nullable<long> fldUserID, string fldDesc, byte[] fldpic, string fldOfficeUserKey, string fldUserPass, Nullable<bool> fldUserType)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(long));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldFamilyParameter = fldFamily != null ?
                new ObjectParameter("fldFamily", fldFamily) :
                new ObjectParameter("fldFamily", typeof(string));
    
            var fldStatusParameter = fldStatus.HasValue ?
                new ObjectParameter("fldStatus", fldStatus) :
                new ObjectParameter("fldStatus", typeof(bool));
    
            var fldPasswordParameter = fldPassword != null ?
                new ObjectParameter("fldPassword", fldPassword) :
                new ObjectParameter("fldPassword", typeof(string));
    
            var fldUserNameParameter = fldUserName != null ?
                new ObjectParameter("fldUserName", fldUserName) :
                new ObjectParameter("fldUserName", typeof(string));
    
            var fldMelliCodeParameter = fldMelliCode != null ?
                new ObjectParameter("fldMelliCode", fldMelliCode) :
                new ObjectParameter("fldMelliCode", typeof(string));
    
            var fldEmailParameter = fldEmail != null ?
                new ObjectParameter("fldEmail", fldEmail) :
                new ObjectParameter("fldEmail", typeof(string));
    
            var fldNumberAgoTelParameter = fldNumberAgoTel != null ?
                new ObjectParameter("fldNumberAgoTel", fldNumberAgoTel) :
                new ObjectParameter("fldNumberAgoTel", typeof(string));
    
            var fldTelParameter = fldTel != null ?
                new ObjectParameter("fldTel", fldTel) :
                new ObjectParameter("fldTel", typeof(string));
    
            var fldMobileParameter = fldMobile != null ?
                new ObjectParameter("fldMobile", fldMobile) :
                new ObjectParameter("fldMobile", typeof(string));
    
            var fldStartDateParameter = fldStartDate.HasValue ?
                new ObjectParameter("fldStartDate", fldStartDate) :
                new ObjectParameter("fldStartDate", typeof(System.DateTime));
    
            var fldtypeParameter = fldtype.HasValue ?
                new ObjectParameter("fldtype", fldtype) :
                new ObjectParameter("fldtype", typeof(int));
    
            var fldCodeParameter = fldCode.HasValue ?
                new ObjectParameter("fldCode", fldCode) :
                new ObjectParameter("fldCode", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldpicParameter = fldpic != null ?
                new ObjectParameter("fldpic", fldpic) :
                new ObjectParameter("fldpic", typeof(byte[]));
    
            var fldOfficeUserKeyParameter = fldOfficeUserKey != null ?
                new ObjectParameter("fldOfficeUserKey", fldOfficeUserKey) :
                new ObjectParameter("fldOfficeUserKey", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            var fldUserTypeParameter = fldUserType.HasValue ?
                new ObjectParameter("fldUserType", fldUserType) :
                new ObjectParameter("fldUserType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserUpdate", fldIDParameter, fldNameParameter, fldFamilyParameter, fldStatusParameter, fldPasswordParameter, fldUserNameParameter, fldMelliCodeParameter, fldEmailParameter, fldNumberAgoTelParameter, fldTelParameter, fldMobileParameter, fldStartDateParameter, fldtypeParameter, fldCodeParameter, fldUserIDParameter, fldDescParameter, fldpicParameter, fldOfficeUserKeyParameter, fldUserPassParameter, fldUserTypeParameter);
        }
    
        public virtual int sp_UserUpdate_OfficeUserKey(Nullable<int> fldid, Nullable<int> userkey)
        {
            var fldidParameter = fldid.HasValue ?
                new ObjectParameter("fldid", fldid) :
                new ObjectParameter("fldid", typeof(int));
    
            var userkeyParameter = userkey.HasValue ?
                new ObjectParameter("userkey", userkey) :
                new ObjectParameter("userkey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserUpdate_OfficeUserKey", fldidParameter, userkeyParameter);
        }
    
        public virtual ObjectResult<sp_VariziHa> sp_VariziHa(Nullable<int> mun, string sal)
        {
            var munParameter = mun.HasValue ?
                new ObjectParameter("mun", mun) :
                new ObjectParameter("mun", typeof(int));
    
            var salParameter = sal != null ?
                new ObjectParameter("sal", sal) :
                new ObjectParameter("sal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VariziHa>("sp_VariziHa", munParameter, salParameter);
        }
    
        public virtual int sp_WebTransactionInsert(Nullable<int> fldMablagh, ObjectParameter fldCodeTarakonesh, string fldType)
        {
            var fldMablaghParameter = fldMablagh.HasValue ?
                new ObjectParameter("fldMablagh", fldMablagh) :
                new ObjectParameter("fldMablagh", typeof(int));
    
            var fldTypeParameter = fldType != null ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_WebTransactionInsert", fldMablaghParameter, fldCodeTarakonesh, fldTypeParameter);
        }
    
        public virtual ObjectResult<sp_WebTransactionSelect> sp_WebTransactionSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WebTransactionSelect>("sp_WebTransactionSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual ObjectResult<sp_YearBudget_TafriqSelect> sp_YearBudget_TafriqSelect(Nullable<int> sal, Nullable<int> mun)
        {
            var salParameter = sal.HasValue ?
                new ObjectParameter("sal", sal) :
                new ObjectParameter("sal", typeof(int));
    
            var munParameter = mun.HasValue ?
                new ObjectParameter("Mun", mun) :
                new ObjectParameter("Mun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_YearBudget_TafriqSelect>("sp_YearBudget_TafriqSelect", salParameter, munParameter);
        }
    
        public virtual ObjectResult<sp_Zone_LogSelect> sp_Zone_LogSelect(string startDate, string endDate, Nullable<int> fldUserID, string fldUserPass)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Zone_LogSelect>("sp_Zone_LogSelect", startDateParameter, endDateParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ZoneDelete(Nullable<int> fldID, Nullable<int> fldUserID, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ZoneDelete", fldIDParameter, fldUserIDParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ZoneInsert(ObjectParameter fldId, string fldName, Nullable<int> fldCountyID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCountyIDParameter = fldCountyID.HasValue ?
                new ObjectParameter("fldCountyID", fldCountyID) :
                new ObjectParameter("fldCountyID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ZoneInsert", fldId, fldNameParameter, fldCountyIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<sp_ZoneSelect> sp_ZoneSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ZoneSelect>("sp_ZoneSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual int sp_ZoneUpdate(Nullable<int> fldID, string fldName, Nullable<int> fldCountyID, Nullable<long> fldUserID, string fldDesc, string fldUserPass)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldNameParameter = fldName != null ?
                new ObjectParameter("fldName", fldName) :
                new ObjectParameter("fldName", typeof(string));
    
            var fldCountyIDParameter = fldCountyID.HasValue ?
                new ObjectParameter("fldCountyID", fldCountyID) :
                new ObjectParameter("fldCountyID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ZoneUpdate", fldIDParameter, fldNameParameter, fldCountyIDParameter, fldUserIDParameter, fldDescParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<spr_peacocary> spr_peacocary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spr_peacocary>("spr_peacocary");
        }
    
        public virtual ObjectResult<prs_newCarCalc> prs_newCarCalc(Nullable<System.DateTime> calcDate, Nullable<int> countryType, Nullable<int> countryCode, Nullable<int> userId, Nullable<int> fromYear, Nullable<int> toYear, Nullable<int> fldModel, Nullable<System.DateTime> fldStartDateInsurance, Nullable<int> fldCarClassId)
        {
            var calcDateParameter = calcDate.HasValue ?
                new ObjectParameter("CalcDate", calcDate) :
                new ObjectParameter("CalcDate", typeof(System.DateTime));
    
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("countryType", countryType) :
                new ObjectParameter("countryType", typeof(int));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromYearParameter = fromYear.HasValue ?
                new ObjectParameter("fromYear", fromYear) :
                new ObjectParameter("fromYear", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(int));
    
            var fldModelParameter = fldModel.HasValue ?
                new ObjectParameter("fldModel", fldModel) :
                new ObjectParameter("fldModel", typeof(int));
    
            var fldStartDateInsuranceParameter = fldStartDateInsurance.HasValue ?
                new ObjectParameter("fldStartDateInsurance", fldStartDateInsurance) :
                new ObjectParameter("fldStartDateInsurance", typeof(System.DateTime));
    
            var fldCarClassIdParameter = fldCarClassId.HasValue ?
                new ObjectParameter("fldCarClassId", fldCarClassId) :
                new ObjectParameter("fldCarClassId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prs_newCarCalc>("prs_newCarCalc", calcDateParameter, countryTypeParameter, countryCodeParameter, userIdParameter, fromYearParameter, toYearParameter, fldModelParameter, fldStartDateInsuranceParameter, fldCarClassIdParameter);
        }
    
        public virtual ObjectResult<prs_newCarFileCalc> prs_newCarFileCalc(Nullable<System.DateTime> calcDate, Nullable<int> countryType, Nullable<int> countryCode, string carIdIn, Nullable<int> userId)
        {
            var calcDateParameter = calcDate.HasValue ?
                new ObjectParameter("CalcDate", calcDate) :
                new ObjectParameter("CalcDate", typeof(System.DateTime));
    
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("countryType", countryType) :
                new ObjectParameter("countryType", typeof(int));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            var carIdInParameter = carIdIn != null ?
                new ObjectParameter("CarIdIn", carIdIn) :
                new ObjectParameter("CarIdIn", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prs_newCarFileCalc>("prs_newCarFileCalc", calcDateParameter, countryTypeParameter, countryCodeParameter, carIdInParameter, userIdParameter);
        }
    
        public virtual ObjectResult<prs_newCarFileCalcForMafasa_Varizi> prs_newCarFileCalcForMafasa_Varizi(Nullable<System.DateTime> calcDate, Nullable<int> countryType, Nullable<int> countryCode, string carIdIn, Nullable<int> userId)
        {
            var calcDateParameter = calcDate.HasValue ?
                new ObjectParameter("CalcDate", calcDate) :
                new ObjectParameter("CalcDate", typeof(System.DateTime));
    
            var countryTypeParameter = countryType.HasValue ?
                new ObjectParameter("countryType", countryType) :
                new ObjectParameter("countryType", typeof(int));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("countryCode", countryCode) :
                new ObjectParameter("countryCode", typeof(int));
    
            var carIdInParameter = carIdIn != null ?
                new ObjectParameter("CarIdIn", carIdIn) :
                new ObjectParameter("CarIdIn", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prs_newCarFileCalcForMafasa_Varizi>("prs_newCarFileCalcForMafasa_Varizi", calcDateParameter, countryTypeParameter, countryCodeParameter, carIdInParameter, userIdParameter);
        }
    
        public virtual int prs_tblPishkhanServiceDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblPishkhanServiceDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int prs_tblPishkhanServiceInsert(Nullable<int> fldServiceId, Nullable<int> fldtype, Nullable<int> fldCode, Nullable<long> fldUserId, string fldDesc)
        {
            var fldServiceIdParameter = fldServiceId.HasValue ?
                new ObjectParameter("fldServiceId", fldServiceId) :
                new ObjectParameter("fldServiceId", typeof(int));
    
            var fldtypeParameter = fldtype.HasValue ?
                new ObjectParameter("fldtype", fldtype) :
                new ObjectParameter("fldtype", typeof(int));
    
            var fldCodeParameter = fldCode.HasValue ?
                new ObjectParameter("fldCode", fldCode) :
                new ObjectParameter("fldCode", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblPishkhanServiceInsert", fldServiceIdParameter, fldtypeParameter, fldCodeParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<prs_tblPishkhanServiceSelect> prs_tblPishkhanServiceSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prs_tblPishkhanServiceSelect>("prs_tblPishkhanServiceSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual int prs_tblPishkhanServiceUpdate(Nullable<int> fldId, Nullable<int> fldServiceId, Nullable<int> fldtype, Nullable<int> fldCode, Nullable<long> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldServiceIdParameter = fldServiceId.HasValue ?
                new ObjectParameter("fldServiceId", fldServiceId) :
                new ObjectParameter("fldServiceId", typeof(int));
    
            var fldtypeParameter = fldtype.HasValue ?
                new ObjectParameter("fldtype", fldtype) :
                new ObjectParameter("fldtype", typeof(int));
    
            var fldCodeParameter = fldCode.HasValue ?
                new ObjectParameter("fldCode", fldCode) :
                new ObjectParameter("fldCode", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(long));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblPishkhanServiceUpdate", fldIdParameter, fldServiceIdParameter, fldtypeParameter, fldCodeParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int prs_tblTicketCategoryDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblTicketCategoryDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int prs_tblTicketCategoryInsert(string fldTitle, Nullable<bool> fldType, string fldIP, Nullable<int> fldUserId, string fldDesc)
        {
            var fldTitleParameter = fldTitle != null ?
                new ObjectParameter("fldTitle", fldTitle) :
                new ObjectParameter("fldTitle", typeof(string));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(bool));
    
            var fldIPParameter = fldIP != null ?
                new ObjectParameter("fldIP", fldIP) :
                new ObjectParameter("fldIP", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblTicketCategoryInsert", fldTitleParameter, fldTypeParameter, fldIPParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<prs_tblTicketCategorySelect> prs_tblTicketCategorySelect(string fieldname, string value, string value2, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var value2Parameter = value2 != null ?
                new ObjectParameter("value2", value2) :
                new ObjectParameter("value2", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prs_tblTicketCategorySelect>("prs_tblTicketCategorySelect", fieldnameParameter, valueParameter, value2Parameter, hParameter);
        }
    
        public virtual int prs_tblTicketCategoryUpdate(Nullable<int> fldId, string fldTitle, Nullable<bool> fldType, string fldIP, Nullable<int> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldTitleParameter = fldTitle != null ?
                new ObjectParameter("fldTitle", fldTitle) :
                new ObjectParameter("fldTitle", typeof(string));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(bool));
    
            var fldIPParameter = fldIP != null ?
                new ObjectParameter("fldIP", fldIP) :
                new ObjectParameter("fldIP", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblTicketCategoryUpdate", fldIdParameter, fldTitleParameter, fldTypeParameter, fldIPParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int prs_tblTicketDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblTicketDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int prs_tblTicketInsert(ObjectParameter fileId, string fldHTML, Nullable<bool> fldSeen, byte[] fldFile, string pasvand, string fldIP, Nullable<int> fldUserId, string fldDesc, Nullable<int> fldTicketCategoryId, Nullable<int> fldSetadUserId)
        {
            var fldHTMLParameter = fldHTML != null ?
                new ObjectParameter("fldHTML", fldHTML) :
                new ObjectParameter("fldHTML", typeof(string));
    
            var fldSeenParameter = fldSeen.HasValue ?
                new ObjectParameter("fldSeen", fldSeen) :
                new ObjectParameter("fldSeen", typeof(bool));
    
            var fldFileParameter = fldFile != null ?
                new ObjectParameter("fldFile", fldFile) :
                new ObjectParameter("fldFile", typeof(byte[]));
    
            var pasvandParameter = pasvand != null ?
                new ObjectParameter("Pasvand", pasvand) :
                new ObjectParameter("Pasvand", typeof(string));
    
            var fldIPParameter = fldIP != null ?
                new ObjectParameter("fldIP", fldIP) :
                new ObjectParameter("fldIP", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            var fldTicketCategoryIdParameter = fldTicketCategoryId.HasValue ?
                new ObjectParameter("fldTicketCategoryId", fldTicketCategoryId) :
                new ObjectParameter("fldTicketCategoryId", typeof(int));
    
            var fldSetadUserIdParameter = fldSetadUserId.HasValue ?
                new ObjectParameter("fldSetadUserId", fldSetadUserId) :
                new ObjectParameter("fldSetadUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblTicketInsert", fileId, fldHTMLParameter, fldSeenParameter, fldFileParameter, pasvandParameter, fldIPParameter, fldUserIdParameter, fldDescParameter, fldTicketCategoryIdParameter, fldSetadUserIdParameter);
        }
    
        public virtual int prs_tblTicketPermissionDelete(Nullable<int> fldID, Nullable<int> fldUserID)
        {
            var fldIDParameter = fldID.HasValue ?
                new ObjectParameter("fldID", fldID) :
                new ObjectParameter("fldID", typeof(int));
    
            var fldUserIDParameter = fldUserID.HasValue ?
                new ObjectParameter("fldUserID", fldUserID) :
                new ObjectParameter("fldUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblTicketPermissionDelete", fldIDParameter, fldUserIDParameter);
        }
    
        public virtual int prs_tblTicketPermissionInsert(Nullable<int> fldCategoryId, Nullable<int> fldTicketUserId, Nullable<bool> fldSee, Nullable<bool> fldAnswer, Nullable<int> fldUserId, string fldDesc)
        {
            var fldCategoryIdParameter = fldCategoryId.HasValue ?
                new ObjectParameter("fldCategoryId", fldCategoryId) :
                new ObjectParameter("fldCategoryId", typeof(int));
    
            var fldTicketUserIdParameter = fldTicketUserId.HasValue ?
                new ObjectParameter("fldTicketUserId", fldTicketUserId) :
                new ObjectParameter("fldTicketUserId", typeof(int));
    
            var fldSeeParameter = fldSee.HasValue ?
                new ObjectParameter("fldSee", fldSee) :
                new ObjectParameter("fldSee", typeof(bool));
    
            var fldAnswerParameter = fldAnswer.HasValue ?
                new ObjectParameter("fldAnswer", fldAnswer) :
                new ObjectParameter("fldAnswer", typeof(bool));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblTicketPermissionInsert", fldCategoryIdParameter, fldTicketUserIdParameter, fldSeeParameter, fldAnswerParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<prs_tblTicketPermissionSelect> prs_tblTicketPermissionSelect(string fieldname, string value, string value2, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var value2Parameter = value2 != null ?
                new ObjectParameter("Value2", value2) :
                new ObjectParameter("Value2", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prs_tblTicketPermissionSelect>("prs_tblTicketPermissionSelect", fieldnameParameter, valueParameter, value2Parameter, hParameter);
        }
    
        public virtual int prs_tblTicketPermissionUpdate(Nullable<int> fldId, Nullable<int> fldCategoryId, Nullable<int> fldTicketUserId, Nullable<bool> fldSee, Nullable<bool> fldAnswer, Nullable<int> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldCategoryIdParameter = fldCategoryId.HasValue ?
                new ObjectParameter("fldCategoryId", fldCategoryId) :
                new ObjectParameter("fldCategoryId", typeof(int));
    
            var fldTicketUserIdParameter = fldTicketUserId.HasValue ?
                new ObjectParameter("fldTicketUserId", fldTicketUserId) :
                new ObjectParameter("fldTicketUserId", typeof(int));
    
            var fldSeeParameter = fldSee.HasValue ?
                new ObjectParameter("fldSee", fldSee) :
                new ObjectParameter("fldSee", typeof(bool));
    
            var fldAnswerParameter = fldAnswer.HasValue ?
                new ObjectParameter("fldAnswer", fldAnswer) :
                new ObjectParameter("fldAnswer", typeof(bool));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblTicketPermissionUpdate", fldIdParameter, fldCategoryIdParameter, fldTicketUserIdParameter, fldSeeParameter, fldAnswerParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual ObjectResult<prs_tblTicketSelect> prs_tblTicketSelect(string fieldname, string value, string value2, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var value2Parameter = value2 != null ?
                new ObjectParameter("Value2", value2) :
                new ObjectParameter("Value2", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prs_tblTicketSelect>("prs_tblTicketSelect", fieldnameParameter, valueParameter, value2Parameter, hParameter);
        }
    
        public virtual int prs_tblTicketUpdate(Nullable<int> fldId, string fldHTML, Nullable<int> fldUserId, string fldDesc)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(int));
    
            var fldHTMLParameter = fldHTML != null ?
                new ObjectParameter("fldHTML", fldHTML) :
                new ObjectParameter("fldHTML", typeof(string));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldDescParameter = fldDesc != null ?
                new ObjectParameter("fldDesc", fldDesc) :
                new ObjectParameter("fldDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblTicketUpdate", fldIdParameter, fldHTMLParameter, fldUserIdParameter, fldDescParameter);
        }
    
        public virtual int prs_tblTicketUpdateBySetadUserId(Nullable<int> value, Nullable<int> value2, Nullable<bool> fldSeen, string fieldName)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(int));
    
            var value2Parameter = value2.HasValue ?
                new ObjectParameter("value2", value2) :
                new ObjectParameter("value2", typeof(int));
    
            var fldSeenParameter = fldSeen.HasValue ?
                new ObjectParameter("fldSeen", fldSeen) :
                new ObjectParameter("fldSeen", typeof(bool));
    
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("fieldName", fieldName) :
                new ObjectParameter("fieldName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prs_tblTicketUpdateBySetadUserId", valueParameter, value2Parameter, fldSeenParameter, fieldNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prs_TblWebSrvUser(string user, string pass)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prs_TblWebSrvUser", userParameter, passParameter);
        }
    
        public virtual ObjectResult<sp_tblBedehiSelect> sp_tblBedehiSelect(string fieldName, string value, Nullable<int> h)
        {
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("fieldName", fieldName) :
                new ObjectParameter("fieldName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblBedehiSelect>("sp_tblBedehiSelect", fieldNameParameter, valueParameter, hParameter);
        }
    
        public virtual ObjectResult<sp_tblBudgetByMonthSelect> sp_tblBudgetByMonthSelect(string fieldname, string value, Nullable<int> h)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblBudgetByMonthSelect>("sp_tblBudgetByMonthSelect", fieldnameParameter, valueParameter, hParameter);
        }
    
        public virtual ObjectResult<rpt_Receipt> rpt_Receipt(Nullable<long> fldId, Nullable<int> fldType)
        {
            var fldIdParameter = fldId.HasValue ?
                new ObjectParameter("fldId", fldId) :
                new ObjectParameter("fldId", typeof(long));
    
            var fldTypeParameter = fldType.HasValue ?
                new ObjectParameter("fldType", fldType) :
                new ObjectParameter("fldType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_Receipt>("rpt_Receipt", fldIdParameter, fldTypeParameter);
        }
    
        public virtual ObjectResult<rpt_UserSelect_Result> rpt_UserSelect(string fieldname, string value, Nullable<int> h, Nullable<int> fldUserId, string fldUserPass)
        {
            var fieldnameParameter = fieldname != null ?
                new ObjectParameter("fieldname", fieldname) :
                new ObjectParameter("fieldname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("h", h) :
                new ObjectParameter("h", typeof(int));
    
            var fldUserIdParameter = fldUserId.HasValue ?
                new ObjectParameter("fldUserId", fldUserId) :
                new ObjectParameter("fldUserId", typeof(int));
    
            var fldUserPassParameter = fldUserPass != null ?
                new ObjectParameter("fldUserPass", fldUserPass) :
                new ObjectParameter("fldUserPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_UserSelect_Result>("rpt_UserSelect", fieldnameParameter, valueParameter, hParameter, fldUserIdParameter, fldUserPassParameter);
        }
    
        public virtual ObjectResult<prs_MobileCount> prs_MobileCount(string mobile)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prs_MobileCount>("prs_MobileCount", mobileParameter);
        }
    
        public virtual ObjectResult<prs_CheckTicketPermission> prs_CheckTicketPermission(string fieldName, Nullable<int> ticketUserId, Nullable<int> fldCategoryId)
        {
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("fieldName", fieldName) :
                new ObjectParameter("fieldName", typeof(string));
    
            var ticketUserIdParameter = ticketUserId.HasValue ?
                new ObjectParameter("TicketUserId", ticketUserId) :
                new ObjectParameter("TicketUserId", typeof(int));
    
            var fldCategoryIdParameter = fldCategoryId.HasValue ?
                new ObjectParameter("fldCategoryId", fldCategoryId) :
                new ObjectParameter("fldCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prs_CheckTicketPermission>("prs_CheckTicketPermission", fieldNameParameter, ticketUserIdParameter, fldCategoryIdParameter);
        }
    }
}
