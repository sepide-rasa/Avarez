//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Avarez.Supporter {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SendToSuporterSoap", Namespace="http://tempuri.org/")]
    public partial class SendToSuporter : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertInSupportOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertOfficeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SendToSuporter() {
            this.Url = global::Avarez.Properties.Settings.Default.Avarez_Supporter_SendToSuporter;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertInSupportCompletedEventHandler InsertInSupportCompleted;
        
        /// <remarks/>
        public event insertOfficeCompletedEventHandler insertOfficeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertInSupport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertInSupport(string Year, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldCarClassId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldCarModelId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldCarSystemId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldCabinTypeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldCarAccountTypeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldCarMakeId, string Desc) {
            object[] results = this.Invoke("InsertInSupport", new object[] {
                        Year,
                        fldCarClassId,
                        fldCarModelId,
                        fldCarSystemId,
                        fldCabinTypeId,
                        fldCarAccountTypeId,
                        fldCarMakeId,
                        Desc});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertInSupportAsync(string Year, System.Nullable<int> fldCarClassId, System.Nullable<int> fldCarModelId, System.Nullable<int> fldCarSystemId, System.Nullable<int> fldCabinTypeId, System.Nullable<int> fldCarAccountTypeId, System.Nullable<int> fldCarMakeId, string Desc) {
            this.InsertInSupportAsync(Year, fldCarClassId, fldCarModelId, fldCarSystemId, fldCabinTypeId, fldCarAccountTypeId, fldCarMakeId, Desc, null);
        }
        
        /// <remarks/>
        public void InsertInSupportAsync(string Year, System.Nullable<int> fldCarClassId, System.Nullable<int> fldCarModelId, System.Nullable<int> fldCarSystemId, System.Nullable<int> fldCabinTypeId, System.Nullable<int> fldCarAccountTypeId, System.Nullable<int> fldCarMakeId, string Desc, object userState) {
            if ((this.InsertInSupportOperationCompleted == null)) {
                this.InsertInSupportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInSupportOperationCompleted);
            }
            this.InvokeAsync("InsertInSupport", new object[] {
                        Year,
                        fldCarClassId,
                        fldCarModelId,
                        fldCarSystemId,
                        fldCabinTypeId,
                        fldCarAccountTypeId,
                        fldCarMakeId,
                        Desc}, this.InsertInSupportOperationCompleted, userState);
        }
        
        private void OnInsertInSupportOperationCompleted(object arg) {
            if ((this.InsertInSupportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInSupportCompleted(this, new InsertInSupportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertOffice(string fldCodeDaftar, string fldAddress, int fldMunId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLocalId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldAreaId, string fldTel, string expire) {
            object[] results = this.Invoke("insertOffice", new object[] {
                        fldCodeDaftar,
                        fldAddress,
                        fldMunId,
                        fldLocalId,
                        fldAreaId,
                        fldTel,
                        expire});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertOfficeAsync(string fldCodeDaftar, string fldAddress, int fldMunId, System.Nullable<long> fldLocalId, System.Nullable<long> fldAreaId, string fldTel, string expire) {
            this.insertOfficeAsync(fldCodeDaftar, fldAddress, fldMunId, fldLocalId, fldAreaId, fldTel, expire, null);
        }
        
        /// <remarks/>
        public void insertOfficeAsync(string fldCodeDaftar, string fldAddress, int fldMunId, System.Nullable<long> fldLocalId, System.Nullable<long> fldAreaId, string fldTel, string expire, object userState) {
            if ((this.insertOfficeOperationCompleted == null)) {
                this.insertOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertOfficeOperationCompleted);
            }
            this.InvokeAsync("insertOffice", new object[] {
                        fldCodeDaftar,
                        fldAddress,
                        fldMunId,
                        fldLocalId,
                        fldAreaId,
                        fldTel,
                        expire}, this.insertOfficeOperationCompleted, userState);
        }
        
        private void OninsertOfficeOperationCompleted(object arg) {
            if ((this.insertOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertOfficeCompleted(this, new insertOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertInSupportCompletedEventHandler(object sender, InsertInSupportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInSupportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInSupportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void insertOfficeCompletedEventHandler(object sender, insertOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591