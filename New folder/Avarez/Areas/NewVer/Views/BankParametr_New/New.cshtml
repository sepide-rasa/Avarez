@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
    .Resizable(false)
    .Width(390)
    .Height(266)
    .Title("ثبت پارامترهای بانکها")
    .Layout(LayoutType.Fit)
        .ID("NewBankParametr")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                .Listeners(l => l.Click.Handler = "SaveBankParametr();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
                .OnClientClick("App.NewBankParametr.destroy();"))
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .Border(false)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .PaddingSpec("15px 0 0 0")
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.FieldSet()
                            .Border(true)
                            .Height(170)
                            .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .Title("مشخصات پارامترهای بانک")
                            .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                            .Items(
                                X.Hidden()
                                    .ItemID("fldId"),
                                X.Label("نام بانک:"),
                                X.ComboBox()
                                    .ItemID("cboBankName")
                                    .EmptyText("نام بانک...")
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نام بانک را انتخاب نمایید.")
                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .Editable(true)
                                    .Width(190)
                                    .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldName")
                                        .ValueField("fldID")
                                    .Store(X.Store()
                                        .Model(X.Model()
                                                .IDProperty("fldID")
                                            .Fields(
                                                        new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                                )
                                        .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetCascadeBank"))
                                            .Reader(X.JsonReader().Root("data")))
                                            .Listeners(li => li.Load.Handler = "LoadBankParametr();")
                                        ),
                                       X.Label("نام خاصیت(انگلیسی):"),
                                    X.TextField()
                                            .ItemID("txtEnProp")
                                        .Width(190)
                                        .MaxLength(50)
                                        .EnforceMaxLength(true)
                                        .EnableKeyEvents(true)
                                        .Listeners(l => l.KeyUp.Fn = "onInitializeToEn")
                                        .AllowBlank(false)
                                            .BlankText("لطفا نام خاصیت(انگلیسی) را وارد نمایید.")
                                        .MsgTarget(Ext.Net.MessageTarget.Side),
                                        X.Label("نام خاصیت(فارسی):"),
                                    X.TextField()
                                            .ItemID("txtFaProp")
                                        .Width(190)
                                        .MaxLength(50)
                                        .EnforceMaxLength(true)
                                        .EnableKeyEvents(true)
                                        .Listeners(l => l.KeyUp.Fn = "onInitializeToFN")
                                        .AllowBlank(false)
                                            .BlankText("لطفا نام خاصیت(فارسی) را وارد نمایید.")
                                        .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("توضیحات:"),
                                X.TextArea()
                                    .ItemID("txtDesc")
                                    .ColSpan(3)
                                    .Width(190)
                            )
                )
            )
        )
)

<script type="text/javascript">
    var onInitializeToEn = function () {
        var tt = App.NewBankParametr.queryById('txtEnProp');
        changeLagToEn(tt);
    };

    var onInitializeToFN = function () {
        var tt = App.NewBankParametr.queryById('txtFaProp');
        changeLagToFa(tt);
    };
    function LoadBankParametr() {
        if ('@ViewBag.Id' != '0') {
            App.NewBankParametr.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/BankParametr_New/Details',
                params: {
                    Id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    else {
                        var Id = App.NewBankParametr.queryById('fldId');
                        Id.setValue(data.fldId);
                        var cboBankName = App.NewBankParametr.queryById('cboBankName');
                        cboBankName.setValue(String(data.fldBankId));
                        var txtEnProp = App.NewBankParametr.queryById('txtEnProp');
                        txtEnProp.setValue(data.fldEnProp);
                        var txtFaProp = App.NewBankParametr.queryById('txtFaProp');
                        txtFaProp.setValue(data.fldFaProp);
                        var txtDesc = App.NewBankParametr.queryById('txtDesc');
                        txtDesc.setValue(data.fldDesc);
                    }
                    App.NewBankParametr.body.mask().hide();
                }
            });
        }
        else {
            App.NewBankParametr.queryById('cboBankName').validate();
            App.NewBankParametr.queryById('txtEnProp').validate();
            App.NewBankParametr.queryById('txtFaProp').validate();
        }
    }

    function SaveBankParametr() {
        var cboBankName = App.NewBankParametr.queryById('cboBankName');
        var txtEnProp = App.NewBankParametr.queryById('txtEnProp');
        var txtFaProp = App.NewBankParametr.queryById('txtFaProp');
        var txtDesc = App.NewBankParametr.queryById('txtDesc');
        var fldId = App.NewBankParametr.queryById('fldId');

        var er = false;

        if (cboBankName.validate() == false) {
            er = true;
        }

        if (txtEnProp.validate() == false) {
            er = true;
        }

        if (txtFaProp.validate() == false) {
            er = true;
        }

        if (er == true)
            return;

        App.NewBankParametr.body.mask("در حال ذخیره سازی...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/BankParametr_New/Save',
            params: {
                fldId: fldId.getValue(),
                fldBankID: cboBankName.getValue(),
                fldPropertyNameEN: txtEnProp.getValue(),
                fldPropertyNameFA: txtFaProp.getValue(),
                fldDesc: txtDesc.getValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.BankParametr.queryById('GridBankParametr').store.load();
                if (data.Er == 0) {
                    ClearBankParametr();
                }
                App.NewBankParametr.body.mask().hide();
            }
        });
    }

    function ClearBankParametr() {
        App.NewBankParametr.queryById('cboBankName').setValue("");
        App.NewBankParametr.queryById('txtEnProp').setValue("");
        App.NewBankParametr.queryById('txtFaProp').setValue("");
        App.NewBankParametr.queryById('txtDesc').setValue("");
        App.NewBankParametr.queryById('fldId').setValue(0);
    }

  /*  function EnterNext() {
        var keyfield = App.NewBankParametr.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }*/

</script>