@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}


@(Html.X().Window().Modal(true)//.Listeners(li => li.AfterRender.Handler = "LoadSigner_New();")
    .Width(600)//.Height(300)
    .Resizable(false)
    .Title("تعریف اشخاص صاحب امضا")
         .ID("NewSigner_New")
        .Closable(true).ButtonAlign(Ext.Net.Alignment.Center)
    .CloseAction(Ext.Net.CloseAction.Destroy)
                   .Buttons(X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk)//.ToolTip("کلید میانبر F8")
                               .Listeners(l =>
                               {
                                   l.Click.Handler = "SaveSigner_New();";

                               })
                               .ItemID("btnSave")
                                ,
                                X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)//.ToolTip("کلید میانبر Esc")
                                       .OnClientClick("App.NewSigner_New.destroy()"))
    .Items(
        X.FormPanel().Border(false)
        .Border(false)
            .Margin(5)
            .DefaultButton("btn")
        .TitleAlign(Ext.Net.TitleAlign.Center)


                .Items(
                X.Panel()
                .Border(false)
                .PaddingSpec("10px 0 0 0")
            .Items(
                X.FieldSet()
                    .Border(true)
                                .Title("مشخصات")
               // .Center()
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                .Defaults(new { Margin = 2 })
                    .Layout(LayoutType.Table)
                .Items(
                X.Hidden().ItemID("fldId"),
                                X.Label("استان:"),
                             X.ComboBox()
                                .ItemID("CboState")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .Editable(false)
                            .TypeAhead(true)
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .TriggerAction(TriggerAction.All)
                                .DisplayField("Name")
                                .ValueField("ID")
                            .EmptyText("استان...")
                            .Width(190)
                            //.Listeners(ls =>
                            //ls.Select.Handler = "App.NewSigner_New.queryById('CboState').clearValue(); App.NewSigner_New.queryById('CboState').getStore().load()"
                            //    )
                            .Listeners(ls =>
                                            ls.Select.Handler = " App.NewSigner_New.queryById('CboMuni').getStore().load();"
                                                    )

                                    .Store(X.Store()//.AutoLoad(false)
                                .Model(X.Model()
                                            .IDProperty("fldStateId")
                                    .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" }
                                    )
                                )
                                .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetCascadeState"))
                                    .Reader(X.JsonReader().Root("data"))
                                )
                                    .Listeners(li => li.Load.Handler = "LoadSigner_New();")
                        )
                            .AllowBlank(false)
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                            .BlankText("لطفا استان را انتخاب نمایید.."),
       
                        X.Label("شهرداری:"),
                                 X.ComboBox()
                                            .ItemID("CboMuni")
                                .EmptyText("شهرداری...")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                .TypeAhead(true)
                                .Editable(false)
                                    .AllowBlank(false)
                                        .BlankText("لطفا شهرداری مورد نظر را انتخاب نمایید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .Width(190)
                                .Listeners(ls =>
                                                    ls.Select.Handler = " App.NewSigner_New.queryById('CboLocal').getStore().load();App.NewSigner_New.queryById('CboArea').getStore().load();App.NewSigner_New.queryById('CboOffice').getStore().load();"
                                            )
                                .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                            .Store(X.Store().AutoLoad(false)
                                    .Model(X.Model()
                                    .IDProperty("fldMuniId")
                                        .Fields(
                                            new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                            new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                            )
                                    .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetCascadeMunicipality"))
                                        .Reader(X.JsonReader().Root("data")))
                                                        .Parameters(ps => ps.Add(new StoreParameter("ID", "App.NewSigner_New.queryById('CboState').getValue()", ParameterMode.Raw)))
                                                    ),
                         X.Label(" منطقه:"),
                                     X.ComboBox()
                                                    .ItemID("CboLocal")
                                    .EmptyText("منطقه...")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .TypeAhead(true)
                                    .Editable(false)
        //.AllowBlank(false)
        //.BlankText("لطفا نام منطقه مورد نظر را انتخاب نمایید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .Width(190)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                    .Store(X.Store().AutoLoad(false)
                                        .Model(X.Model()
                                        .IDProperty("fldLocalId")
                                            .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                                )
                                        .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetCascadeLocal"))
                                            .Reader(X.JsonReader().Root("data")))
                                                        .Parameters(ps => ps.Add(new StoreParameter("ID", "App.NewSigner_New.queryById('CboMuni').getValue()", ParameterMode.Raw)))
                                                        ),
                        X.Label(" ناحیه:"),
                        X.ComboBox()
                        .ItemID("CboArea")
                            .EmptyText("ناحیه...")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .TypeAhead(true)
                        .Editable(false)
        //.AllowBlank(false)
        //    .BlankText("لطفا نام ناحیه مورد نظر را انتخاب نمایید.")
                        .QueryMode(DataLoadMode.Local)
                        .ForceSelection(true)
                        .Width(190)
                        .TriggerAction(TriggerAction.All)
                        .DisplayField("Name")
                        .ValueField("ID")
                        .Store(X.Store().AutoLoad(false)
                        .Model(X.Model()
                        .IDProperty("fldLocalId")
                                .Fields(
                                    new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                    new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                    )
                            .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetCascadeArea"))
                                .Reader(X.JsonReader().Root("data")))
                                            .Parameters(ps => ps.Add(new StoreParameter("ID", "App.NewSigner_New.queryById('CboMuni').getValue()", ParameterMode.Raw)))
                                            ),
                        X.Label("نام دفتر:"),
                            X.ComboBox()
                            .ItemID("CboOffice")
                                .EmptyText("نام دفتر...")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .TypeAhead(true)
                            .Editable(false)
                            .AllowBlank(false)
                                .BlankText("لطفا دفتر مورد نظر را انتخاب نمایید.")
                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .Width(190)
                            .TriggerAction(TriggerAction.All)
                            .DisplayField("Name")
                            .ValueField("ID")
                            .Store(X.Store().AutoLoad(false)
                            .Model(X.Model()
                                    .IDProperty("fldOfficeID")
                                    .Fields(
                                        new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                        new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                        )
                                .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetCascadeOffice"))
                                    .Reader(X.JsonReader().Root("data")))
         .Parameters(ps => ps.Add(new StoreParameter("ID", "App.NewSigner_New.queryById('CboMuni').getValue()", ParameterMode.Raw)))
                                                ),
                     X.Label("نام:"),
                     X.TextField()
                     .EnforceMaxLength(true)
                     .MaxLength(50)
                     .ItemID("txtName")
                    .MaxLength(50)
                    .MsgTarget(Ext.Net.MessageTarget.Side)
                    .AllowBlank(false)
                         .MaskRe("/[ا-ی,ئ,آ, ]/")
                    .Width(190)
                    .BlankText("لطفا نام را وارد نمایید."),
                     X.Label("نام خانوادگی:"),
                     X.TextField()
                         .MaskRe("/[ا-ی,ئ,آ, ]/")
                     .ItemID("txtFamily")
                     .EnforceMaxLength(true)
                     .MaxLength(50)
                    .MsgTarget(Ext.Net.MessageTarget.Side)
                    .Width(190)
                    .AllowBlank(false)
                    .BlankText("لطفا نام خانوادگی را وارد نمایید."),
                    X.Label("کدملی:"),
                    X.TextField()
                    .MaxLength(10)
                    .ItemID("txtMelliCode")
                    .MsgTarget(Ext.Net.MessageTarget.Side)
                    .AllowBlank(false)
                    .BlankText("لطفا کدملی را وارد نمایید.")
                    .Width(190)
                    .MaskRe("/[0-9,/]/"),
                         X.Label("سمت:")
                     //.MarginSpec("0px 0px 40px 0px")
                         ,
                        X.ComboBox()
                        .ItemID("CboPost")
                          //   .PaddingSpec("0 0 50px 0")
                   .LabelAlign(Ext.Net.LabelAlign.Left)
                    .Editable(false)
                    .TypeAhead(true)
                    .QueryMode(DataLoadMode.Local)
                    .ForceSelection(true)
                    .TriggerAction(TriggerAction.All)
                        .DisplayField("Name")
                        .ValueField("ID")
                    .EmptyText("سمت...")
                    .Width(190)
                            .Store(X.Store()//.AutoLoad(false)
                        .Model(X.Model()
                                    .IDProperty("fldPostId")
                            .Fields(
                                        new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                        new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" }
                            )
                        )
                        .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetCascadePost"))
                            .Reader(X.JsonReader().Root("data"))
                        )
                )
                    .AllowBlank(false)
                        .MsgTarget(Ext.Net.MessageTarget.Side)
                    .BlankText("لطفا سمت را انتخاب نمایید.."),
                    X.Label("توضیحات:"),
                    X.TextArea()
                    .ItemID("txtDesc")
                    .Width(190)
                        )

                )
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
            )
        )
)
@(Html.X().KeyMap()
                 .ID("NewSigner_NewMap")
                 .Target("={App.NewSigner_New.getTargetEl()}")
            .Binding(b =>
            {
                b.Add(Html.X().KeyBinding()
                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                .Handler("SaveSigner_New(); ")
                );

            }))
<script type="text/javascript">
    function LoadSigner_New() {
        if ('@ViewBag.Id' != '0') {
            App.NewSigner_New.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/Signer_New/Details',
                params: {
                    Id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 0) {
                        var txtName = App.NewSigner_New.queryById('txtName');
                        txtName.setValue(data.fldName);
                        var CboState = App.NewSigner_New.queryById('CboState');
                        CboState.setValue(data.fldState);
                        App.NewSigner_New.queryById('CboMuni').clearValue(); App.NewSigner_New.queryById('CboMuni').getStore().load();
                        var CboMuni = App.NewSigner_New.queryById('CboMuni');
                        CboMuni.setValue(data.fldMunicipalityID);
                        App.NewSigner_New.queryById('CboLocal').clearValue(); App.NewSigner_New.queryById('CboLocal').getStore().load();
                        App.NewSigner_New.queryById('CboArea').clearValue(); App.NewSigner_New.queryById('CboArea').getStore().load();
                        App.NewSigner_New.queryById('CboOffice').clearValue(); App.NewSigner_New.queryById('CboOffice').getStore().load();
                        var CboArea = App.NewSigner_New.queryById('CboArea');
                        CboArea.setValue(data.fldAreaID);
                        var CboLocal = App.NewSigner_New.queryById('CboLocal');
                        CboLocal.setValue(data.fldLocalID);
                        var CboOffice = App.NewSigner_New.queryById('CboOffice');
                        CboOffice.setValue(data.fldOfficesID);
                        var CboPost = App.NewSigner_New.queryById('CboPost');
                        CboPost.setValue(data.fldPostID);
                        var txtFamily = App.NewSigner_New.queryById('txtFamily');
                        txtFamily.setValue(data.fldFamily);
                        var txtMelliCode = App.NewSigner_New.queryById('txtMelliCode');
                        txtMelliCode.setValue(data.fldMelliCode);
                        var txtDesc = App.NewSigner_New.queryById('txtDesc');
                        txtDesc.setValue(data.fldDesc);
                        var Id = App.NewSigner_New.queryById('fldId');
                        Id.setValue(data.fldId);
                    }
                    else if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    App.NewSigner_New.body.mask().hide();
                }
            });
        }
        else {
            App.NewSigner_New.queryById('txtName').validate();
            App.NewSigner_New.queryById('CboArea').validate();
            App.NewSigner_New.queryById('CboLocal').validate();
            App.NewSigner_New.queryById('CboState').validate();
            App.NewSigner_New.queryById('CboOffice').validate();
            App.NewSigner_New.queryById('CboPost').validate();
            App.NewSigner_New.queryById('CboMuni').validate();
            App.NewSigner_New.queryById('txtMelliCode').validate();
            App.NewSigner_New.queryById('txtFamily').validate();
        }

    }

    function SaveSigner_New() {
        var CboState = App.NewSigner_New.queryById('CboState');
        var txtName = App.NewSigner_New.queryById('txtName');
        var CboMuni = App.NewSigner_New.queryById('CboMuni');
        var CboArea = App.NewSigner_New.queryById('CboArea');
        var CboLocal = App.NewSigner_New.queryById('CboLocal'); 
        var CboOffice = App.NewSigner_New.queryById('CboOffice');
        var CboPost = App.NewSigner_New.queryById('CboPost');
        var txtFamily = App.NewSigner_New.queryById('txtFamily');
        var txtMelliCode = App.NewSigner_New.queryById('txtMelliCode');
        var txtDesc = App.NewSigner_New.queryById('txtDesc');
        var Id = App.NewSigner_New.queryById('fldId');
        var er = false;

        if (txtName.validate() == false) {
            er = true;
        }
        if (CboState.validate() == false) {
            er = true;
        }
        if (CboMuni.validate() == false) {

            er = true;
        } 
        if (CboOffice.validate() == false) {
            er = true;
        }
        if (CboPost.validate() == false) {
            er = true;
        }
        if (er == true)
            return;
        App.NewSigner_New.body.mask("در حال ذخیره سازی...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/Signer_New/Save',
            params: {
                fldId: Id.getValue(),
                fldName: txtName.getValue(),
                fldMelliCode: txtMelliCode.getValue(),
                fldOfficesID: CboOffice.getValue(),
                fldPostID: CboPost.getValue(),
                fldMunicipalityID: CboMuni.getValue(),
                fldLocalID: CboLocal.getValue(),
                fldAreaID: CboArea.getValue(),
                fldFamily:txtFamily.getValue(),
                fldDesc: txtDesc.getValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.Signer_New.queryById('GridSigner_New').store.load();
                if (data.Er != 1)
                    ClearSigner_New();
                App.NewSigner_New.body.mask().hide();
            }

        });
    }
    function ClearSigner_New() {
        App.NewSigner_New.queryById('txtName').setValue("");
        App.NewSigner_New.queryById('txtMelliCode').setValue("");
        App.NewSigner_New.queryById('txtFamily').setValue("");
        App.NewSigner_New.queryById('CboState').setValue("");
        App.NewSigner_New.queryById('CboMuni').setValue("");
        App.NewSigner_New.queryById('CboLocal').setValue(""); 
        App.NewSigner_New.queryById('CboOffice').setValue("");
        App.NewSigner_New.queryById('CboPost').setValue("");
        App.NewSigner_New.queryById('CboArea').setValue("");
        App.NewSigner_New.queryById('txtDesc').setValue("");
        App.NewSigner_New.queryById('fldId').setValue(0);
    }
   /* function EnterNext() {
        var keyfield = App.NewSigner_New.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();

    }*/
</script>