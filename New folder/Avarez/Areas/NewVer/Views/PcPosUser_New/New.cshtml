@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

<style>
    .test{
        height:auto;
        word-wrap: break-word !important;
        text-align:right;
    }
</style>
@(Html.X().Window()
    .Modal(true)
    .Resizable(false)
    .Width(480)
        // .Height(260)
    .Title("تعریف کاربران PcPos")
    .Layout(LayoutType.Fit)
    .ID("NewPcPosUser")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
            .Listeners(l => l.Click.Handler = "SavePcPosUser();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
            .OnClientClick("App.NewPcPosUser.destroy();"))
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .Border(false)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .PaddingSpec("10px 0 0 0")
                    .Items(
        X.FieldSet()
            .Border(false)
           // .Width(685)
                .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
            //.Defaults(new { Margin = 2 })
            .Items(
                                X.FieldSet()
                                        .Border(true).Title("کاربران PcPos")//.PaddingSpec("0 0 10px 0").Width(430)
                                    .Defaults(new { Margin = 2 })
                                    .Layout(LayoutType.Table)
                                    .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                    .Items(
                                        X.Hidden()
                                            .ItemID("fldId"),
                                        X.Label("اطلاعات PcPose:"),
                                        X.ComboBox()
                                            .ItemID("cboPcPos")
                                            .EmptyText("...")
                                            .TypeAhead(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا نام بانک را انتخاب نمایید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .Editable(false)
                                            .Width(280)
                                            .TriggerAction(TriggerAction.All)
                                                .DisplayField("fldName")
                                            .ValueField("fldID")
                                            .Store(X.Store()
                                                .Model(X.Model()
                                                    .IDProperty("fldID")
                                                    .Fields(
                                                        new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                                        )
                                                .Proxy(X.AjaxProxy()
                                                        .Url(Url.Action("GetPcPosInfo"))
                                                    .Reader(X.JsonReader().Root("data")))
                                                .Listeners(li => li.Load.Handler = "LoadPcPosUser();")
                                                    ),

                                                X.FieldSet().Border(false).Layout(LayoutType.Table).ColSpan(2).Defaults(new { Margin = 3 })
                                                .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                                .PaddingSpec("0 0 0 30px")
                                            /*.LayoutConfig(new HBoxLayoutConfig { Align=HBoxAlign.})*/.Items(
                                                X.Button().Text("انتخاب کاربر").Icon(Icon.UserAdd).Listeners(l => l.Click.Handler = "SelectUser()")
                                            ,
                                            X.TextArea().ReadOnly(true).Width(280).Height(50).Cls("test").ItemID("LblUSer").PaddingSpec("0 0 0 10px")/*.Width(200)*/),
                                        X.Label("شماره سریال دستگاه:"),
                                        X.TextField()
                                            .ItemID("txtSerialNum")
                                            .Width(280)
                                            .AllowBlank(false)
                                            .EnforceMaxLength(true)
                                            .MaxLength(50)
                                            .BlankText("لطفا شماره سریال دستگاه را وارد نمایید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side),
                                        X.Label("IP دستگاه:"),
                                        X.TextField()
                                            .ItemID("txtIP")
                                            .MaskRe("/[0-9 , .]/")
                                            .MaxLength(50)
                                            .EnforceMaxLength(true)
                                            .Width(280)
                                            .AllowBlank(false)
                                            .BlankText("لطفا IP دستگاه را وارد نمایید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                    )
          )
                )
            )
        )
)

<script type="text/javascript">
    var UserID = "";
    var USerName = "";
    function LoadPcPosUser() {
        if ('@ViewBag.Id' != '0') {
            App.NewPcPosUser.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/PcPosUser_New/Details',
                params: {
                    Id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    else {
                        var cboPcPos = App.NewPcPosUser.queryById('cboPcPos');
                        cboPcPos.setValue(data.fldPcPosId);
                        var txtSerialNum = App.NewPcPosUser.queryById('txtSerialNum');
                        txtSerialNum.setValue(data.fldSerialNum);
                        var txtIP = App.NewPcPosUser.queryById('txtIP');
                        txtIP.setValue(data.fldIP);
                        var Id = App.NewPcPosUser.queryById('fldId');
                        Id.setValue(data.fldId);
                        var LblUSer = App.NewPcPosUser.queryById('LblUSer');
                        LblUSer.setValue(data.UserName);
                        USerName = data.UserName;
                        UserID = data.UserId;
                    }
                    App.NewPcPosUser.body.mask().hide();
                }
            });
        }
        else {
            App.NewPcPosUser.queryById('cboPcPos').validate();
            App.NewPcPosUser.queryById('txtSerialNum').validate();
            App.NewPcPosUser.queryById('txtIP').validate();
        }
    }

    function SavePcPosUser() {
        var cboPcPos = App.NewPcPosUser.queryById('cboPcPos');
        var Id = App.NewPcPosUser.queryById('fldId');
        var txtSerialNum = App.NewPcPosUser.queryById('txtSerialNum');
        var txtIP = App.NewPcPosUser.queryById('txtIP');

        var er = false;

        if (cboPcPos.validate() == false) {
            er = true;
        }
        if (txtSerialNum.validate() == false) {
            er = true;
        }
        if (txtIP.validate() == false) {
            er = true;
        }

        if (er == true)
            return;

        App.NewPcPosUser.body.mask("در حال ذخیره سازی...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/PcPosUser_New/Save',
            params: {
                fldID: Id.getValue(),
                fldSerialNum: txtSerialNum.getValue(),
                fldIP: txtIP.getValue(),
                fldPcPosId: cboPcPos.getValue(),
                UserID: UserID
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.PcPosUser.queryById('GridPcPosUser').store.load();
                if (data.Er == 0) {
                    ClearPcPosUser();
                }
                App.NewPcPosUser.body.mask().hide();
            }
        });
    }

    function ClearPcPosUser() {
        App.NewPcPosUser.queryById('cboPcPos').setValue("");
        App.NewPcPosUser.queryById('txtSerialNum').setValue("");
        App.NewPcPosUser.queryById('txtIP').setValue("");
        App.NewPcPosUser.queryById('LblUSer').setValue("");
        App.NewPcPosUser.queryById('fldId').setValue(0);
        UserID = "";
    }

  /*  function EnterNext() {
        var keyfield = App.NewPcPosUser.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }*/
    function SelectUser() {
        App.NewPcPosUser.body.mask("در حال بارگذاری...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/SearchUser_New/Index',
            params: {
                state: 1,
                UserIds: UserID
            },
            success: function (data) {
                App.NewPcPosUser.body.mask().hide();
            }
        });
    }
</script>