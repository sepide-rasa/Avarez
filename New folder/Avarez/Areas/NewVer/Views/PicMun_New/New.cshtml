@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
        // .Listeners(li => li.AfterRender.Handler = "Loadpicmun();")
    .Resizable(false)
    .Width(650)
    .Height(400)
        .Title(" تعیین تصاویر")
    .Layout(LayoutType.Fit)
        .ID("Newpicmun")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                .Listeners(l => l.Click.Handler = "Savepicmun();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
                .OnClientClick("App.Newpicmun.destroy();"))
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .Border(false)
        // .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .PaddingSpec("15px 0 0 0")
                         .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.FieldSet()
                           .Border(true)
                               .Width(566)
                                    .Height(150)
                                        .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                                .Title("مشخصات  ")
                            .LayoutConfig(new TableLayoutConfig { Columns = 4 })

                            .Items(
                                X.Hidden()
                                    .ItemID("fldId"),
                            X.Label("استان:"),
                                     X.ComboBox()
                                        .ItemID("CboState")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                        .DisplayField("Name")
                                        .ValueField("ID")
                                    .EmptyText("استان")
                                    .Width(195)
                                    .Listeners(ls =>
                                                        ls.Select.Handler = " App.Newpicmun.queryById('CboMunicipality').getStore().load();"
                                                            )
        //.ValueNotFoundText("استان...")
                                            .Store(X.Store()//.AutoLoad(false)
                                        .Model(X.Model()
                                                    .IDProperty("fldState")
                                            .Fields(
                                                        new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                                        new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetCascadeState"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                                .Listeners(li => li.Load.Handler = "Loadpicmun();")
                                )
                                   // .AllowBlank(false)
                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                    .BlankText("لطفا استان را انتخاب نمایید."),
                            X.Label("شهرداری:"),
                                    X.ComboBox()
                                            .ItemID("CboMunicipality")
                                    .EmptyText("شهرداری...")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .TypeAhead(true)
                                    .Editable(false)
                                  //  .AllowBlank(false)
                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                    .BlankText("لطفا شهرداری مورد نظر را انتخاب نمایید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .Width(195)
                                    .TriggerAction(TriggerAction.All)
                                        .DisplayField("Name")
                                        .ValueField("ID")
                                                .Store(X.Store().AutoLoad(false)
                                        .Model(X.Model()
                                                            .IDProperty("fldMunicipalityID")
                                            .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                                )
                                        .Proxy(X.AjaxProxy()
                                                                .Url(Url.Action("GetCascadeMun"))
                                            .Reader(X.JsonReader().Root("data")))
                                                                .Parameters(ps => ps.Add(new StoreParameter("ID", "App.Newpicmun.queryById('CboState').getValue()", ParameterMode.Raw)))
                                                        ),
                                   X.Label("عنوان تصویر :"),

                                X.TextField()
                                                    .ItemID("txtName")
        //  .MaskRe("/[0-9]/")
                                            .EnforceMaxLength(true)

                                        .MaxLength(50)
                                    .Width(195)

                                    .AllowBlank(false)
                                    .BlankText("لطفا عنوان تصویر را وارد نمایید.")
                                    .MsgTarget(Ext.Net.MessageTarget.Side),



                                                 X.Label("وضعیت:"),
                                      X.ComboBox()
                                        .ItemID("cboStatus")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                    .EmptyText("وضعیت...")
                                    .Width(195)
                                    .Items(
                                                new ListItem("فعال", "1"),
                                                new ListItem("غیر فعال", "0")
                                    )
                                            .SelectedItems(new { Value = "1" })
        //.AllowBlank(false)
                                   ,
                                X.Label("توضیحات:"),
                                X.TextArea()
                                .Width(195)
                                    .ItemID("txtDesc")
                                        .ColSpan(3)
                                    )
                                          , X.FieldSet()
                            .Border(true)
                                .Height(150)
                            .Title("انتخاب عکس(حداکثر حجم مجاز: 100KB)")
                            .Layout(LayoutType.HBox)
                            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle })
        /*.LayoutConfig(new TableLayoutConfig { Columns=3})*/
                                 .Width(566)
        //.Defaults(new { Margin = 2 })
                            .Items(
                                X.FileUploadField()
                                    .ID("FileUploadField1")
        // .MarginSpec("0 2px 0 0")
                                 .MarginSpec("0 10px 0 0")
                                    .Icon(Ext.Net.Icon.DiskUpload)
                                    .ButtonOnly(true)
                                    .ButtonText("انتخاب فایل")
                                    .DirectEvents(l =>
                                    {
                                        l.Change.Action = "Upload";
                                        l.Change.Success = "hideprogresspicmun();";
                                    })
                                    .Listeners(l => l.Change.Fn = "showFile"),
                                X.Container()
                                    .Content(@<div id="fi-button-msg" style="width: 360px; text-align:right;"><b>فایل انتخاب شده:</b></div>),
                               X.Panel()
                                    .Border(false)
                                     .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align=VBoxAlign.Center})
                                    .Items(
                                        X.Label("پیش نمایش"),
                                        X.Panel()
                                            .Frame(true)
                                                 // .MarginSpec("3px 0 0 0")
                                           .Layout(LayoutType.Fit)
                                            .Items(
                                        X.Image()
                                            .ItemID("Image")
                                            .Flex(1)
                                            .ImageUrl("/Content/Blank.jpg")
                                                      .Width(80)
                                                        .Height(80)
                                            //.PaddingSpec("0 0 15px 0")
                                            .Border(true)
                                            .Frame(true)))
                            )

                            )
                )
            )
        )
)

@(Html.X().KeyMap()
                 .ID("NewpicmunMap")
                 .Target("={App.Newpicmun.getTargetEl()}")
            .Binding(b =>
            {
                b.Add(Html.X().KeyBinding()
                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                .Handler("Savepicmun(); ")
                );

            }))
<script type="text/javascript">

    var Mojazpicmun = 0;
    var sizeepicmun = 0;
    var EndUploadpicmun = false;
    var Checkpicmun = setInterval(CheckEndpicmun, 500);

    function CheckEndpicmun() {
        if (EndUploadpicmun == true) {
            Ext.net.DirectMethod.request({
                url: '/NewVer/picmun_New/ShowPic',
                success: function (data) {
                    value = "data:image/gif;base64," + data.image;
                    App.Newpicmun.queryById('Image').setImageUrl(value);
                }
            });

            Ext.MessageBox.hide();
            Ext.Msg.alert('عملیات موفق', 'فایل با موفقیت آپلود شد.');
            clearInterval(CheckEndpicmun);
            EndUploadpicmun = false;
        }
    }
    var showFile = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        var el = Ext.get('fi-button-msg');
        if (v) {
            showProgressBarpicmun();
            if (v.split('.').pop().toLowerCase() == "jpg" || v.split('.').pop().toLowerCase() == "png") {
                Mojazpicmun = 1;
                if (document.getElementById(id).files[0].size <= 102400) {
                    sizeepicmun = 1;
                }
                if (sizeepicmun == 1) {
                    el.update('<b>فایل انتخاب شده:</b> ' + v);
                }
                else {
                    el.update('<b>فایل انتخاب شده:</b> ');
                }

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
            else {
                el.update('<b>فایل انتخاب شده:</b> ');
            }
        }
    };

    function hideprogresspicmun() {
        if (Mojazpicmun == 1 && sizeepicmun == 1) {
            EndUploadpicmun = true;
        }
        Mojazpicmun = 0;
        sizeepicmun = 0;
    }

    function showProgressBarpicmun() {
        Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال آپلود فایل...',
            width: 300,
            wait: true,
            waitConfig:
            {
                interval: 200,
                text: 'در حال آپلود فایل...',
                scope: this
            }
        });
    }


    function Loadpicmun() {
        if ('@ViewBag.Id' != '0') {
            App.Newpicmun.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/picmun_New/Details',
                params: {
                    Id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 0) {
                        var CboState = App.Newpicmun.queryById('CboState');
                        CboState.setValue(data.fldState);
                        App.Newpicmun.queryById('CboMunicipality').clearValue();
                        App.Newpicmun.queryById('CboMunicipality').getStore().load();
                        var CboMunicipality = App.Newpicmun.queryById('CboMunicipality');
                        CboMunicipality.setValue(data.fldMunicipalityID);
                        var cboStatus = App.Newpicmun.queryById('cboStatus');
                        cboStatus.setValue(data.fldShowStatus);
                        var txtName = App.Newpicmun.queryById('txtName');
                        txtName.setValue(data.fldName);
                        var txtDesc = App.Newpicmun.queryById('txtDesc');
                        txtDesc.setValue(data.fldDesc);
                        var Id = App.Newpicmun.queryById('fldId');
                        Id.setValue(data.fldID);
                        value = "data:image/gif;base64," + data.image;
                        App.Newpicmun.queryById('Image').setImageUrl(value);
                    }
                    else if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    App.Newpicmun.body.mask().hide();
                }
            });
        }
        else {
            App.Newpicmun.queryById('txtName').validate();
            App.Newpicmun.queryById('CboState').validate();
            /*App.Newpicmun.queryById('CboMunicipality').validate();*/
            App.Newpicmun.queryById('cboStatus').validate();

        }

    }

    function Savepicmun() {
        var txtName = App.Newpicmun.queryById('txtName');
        var CboMunicipality = App.Newpicmun.queryById('CboMunicipality');
        var CboState = App.Newpicmun.queryById('CboState');
        var cboStatus = App.Newpicmun.queryById('cboStatus');
        var txtDesc = App.Newpicmun.queryById('txtDesc');
        var Id = App.Newpicmun.queryById('fldId');
            var er = false;

            if (txtName.validate() == false) {
                er = true;
            }
           /* if (CboMunicipality.validate() == false) {
                er = true;
            }*/
            if (CboState.validate() == false) {
                er = true;
            }
         
            var ShowStatus = false;
            if (cboStatus.getValue() == "1")
                ShowStatus = true;
            if (er == true)
                return;
            App.Newpicmun.body.mask("در حال ذخیره سازی...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/picmun_New/Save',
                params: {
                    fldID: Id.getValue(),
                    fldName: txtName.getValue(),
                    fldMunicipalityID: CboMunicipality.getValue(),
                    fldShowStatus: ShowStatus,
                    fldDesc: txtDesc.getValue()
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Er == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.Newpicmun.body.mask().hide();
                    App.picmun.queryById('Gridpicmun').store.load();
                    if (data.Er != 1)
                        Clearpicmun();

                }

            });
        }
    function Clearpicmun() {
        App.Newpicmun.queryById('txtName').setValue("");
        App.Newpicmun.queryById('CboMunicipality').setValue("");
        App.Newpicmun.queryById('cboStatus').setValue("");
        App.Newpicmun.queryById('CboState').setValue("");
        App.Newpicmun.queryById('txtDesc').setValue("");
        App.Newpicmun.queryById('fldId').setValue(0);
        var el = Ext.get('fi-button-msg');
        el.update('<b>فایل انتخاب شده:</b> ');
        App.Newpicmun.queryById('Image').setImageUrl("/Content/Blank.jpg");
    }
    /*function EnterNext() {
        var keyfield = App.Newpicmun.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }*/

</script>