@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}


@(Html.X().Window()
    .Modal(true)
    //.Listeners(li => li.AfterRender.Handler = "LoadCarPatternModel();")
    .Resizable(false)
    .Width(575)
   // .Height(235)
    .Title("تعریف الگوی تیپ خودرو")
    .Layout(LayoutType.Fit)
        .ID("NewCarPatternModel")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                .Listeners(l => l.Click.Handler = "SaveCarPatternModel();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
                .OnClientClick("App.NewCarPatternModel.destroy();"))
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .Border(false)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .PaddingSpec("15px 0 0 0")
                         .Layout(LayoutType.VBox)
                                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.FieldSet().Height(170)
                            .Border(true)
                            .Title("الگوی تیپ خودرو")
                            .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 4 })
                            .Items(
                                X.Hidden().ItemID("fldId"),
                                X.Label("نام الگو:"),
                                X.TextField()
                                .ItemID("txtName")
                                .EnforceMaxLength(true)
                                .MaxLength(50)
                                .Width(190)
                                .AllowBlank(false)
                                .BlankText("لطفا نام الگو را وارد نمایید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("تعداد سیلندر:"),
                                X.TextField()
                                .ItemID("txtCylinderNumber")
                                .Width(190)
                                .MaskRe("[0-9]")
                                .EnforceMaxLength(true)
                                .MaxLength(2)
                                .AllowBlank(false)
                                .BlankText("لطفا تعداد سیلندر را وارد نمایید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("تعداد چرخ:"),
                                X.TextField()
                                .MaskRe("[0-9]")
                                .EnforceMaxLength(true)
                                .MaxLength(2)
                                .ItemID("txtWheelNumber")
                                .Width(190)
                                .AllowBlank(false)
                                .BlankText("لطفا تعداد چرخ را وارد نمایید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("تعداد محور:"),
                                X.TextField()
                                .ItemID("txtPivotNumber")
                                    .MaskRe("[0-9]")
                                    .EnforceMaxLength(true)
                                    .MaxLength(2)
                                .Width(190)
                                .AllowBlank(false)
                                .BlankText("لطفا تعداد محور را وارد نمایید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("حجم موتور:"),
                                X.TextField()
                                .ItemID("txtContentMotor")
                                .Width(190)
                                    .MaskRe("[0-9]")
                                    .MaxLength(10)
                                    .EnforceMaxLength(true)
                                .AllowBlank(false)
                                .BlankText("لطفاحجم موتور را وارد نمایید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("نوع سوخت:"),
                                X.ComboBox()
                                .ItemID("cboFuel")
                                .LabelAlign(Ext.Net.LabelAlign.Left)
                                .Editable(false)
                                .TypeAhead(true)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .TriggerAction(TriggerAction.All)
                                .AllowBlank(false)
                                .BlankText("لطفا نوع سوخت را انتخاب نمایید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .DisplayField("fldName")
                                .ValueField("fldID")
                                .EmptyText("نوع سوخت...")
                                .Width(190)
                                .Store(X.Store()//.AutoLoad(false)
                                    .Model(X.Model()
                                    .IDProperty("fldID")
                                    .Fields(
                                        new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                    )
                                    .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetCascadeFuel"))
                                    .Reader(X.JsonReader().Root("data"))
                                           )
                                        .Listeners(li => li.Load.Handler = "LoadCarPatternModel();")
                            ),
                                X.Label("توضیحات:"),
                                X.TextArea()
                                    .ItemID("txtDesc").ColSpan(3)
                                    .Width(455)
                            )
                )
            )
        )
)

<script type="text/javascript">
    function LoadCarPatternModel() {
        if ('@ViewBag.Id' != '0') {
            App.NewCarPatternModel.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/CarPatternModel_New/Details',
                params: {
                    Id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 0) {
                        var txtName = App.NewCarPatternModel.queryById('txtName');
                        txtName.setValue(data.fldName);
                        var txtCylinderNumber = App.NewCarPatternModel.queryById('txtCylinderNumber');
                        txtCylinderNumber.setValue(data.fldCylinderNumber);
                        var txtWheelNumber = App.NewCarPatternModel.queryById('txtWheelNumber');
                        txtWheelNumber.setValue(data.fldWheelNumber);
                        var txtPivotNumber = App.NewCarPatternModel.queryById('txtPivotNumber');
                        txtPivotNumber.setValue(data.fldPivotNumber);
                        var txtContentMotor = App.NewCarPatternModel.queryById('txtContentMotor');
                        txtContentMotor.setValue(data.fldContentMotor);
                        var cboFuel = App.NewCarPatternModel.queryById('cboFuel');
                        cboFuel.setValue(data.fldFuelTypeID);
                        var txtDesc = App.NewCarPatternModel.queryById('txtDesc');
                        txtDesc.setValue(data.fldDesc);
                        var Id = App.NewCarPatternModel.queryById('fldId');
                        Id.setValue(data.fldId);
                    }
                    else if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    App.NewCarPatternModel.body.mask().hide();
                }
            });
        }
        else {
            App.NewCarPatternModel.queryById('txtName').validate();
            App.NewCarPatternModel.queryById('txtCylinderNumber').validate();
            App.NewCarPatternModel.queryById('txtWheelNumber').validate();
            App.NewCarPatternModel.queryById('txtPivotNumber').validate();
            App.NewCarPatternModel.queryById('txtContentMotor').validate();
            App.NewCarPatternModel.queryById('cboFuel').validate();
        }
    }

    function SaveCarPatternModel() {
        var txtName= App.NewCarPatternModel.queryById('txtName');
        var txtCylinderNumber= App.NewCarPatternModel.queryById('txtCylinderNumber');
        var txtWheelNumber= App.NewCarPatternModel.queryById('txtWheelNumber');
        var txtPivotNumber= App.NewCarPatternModel.queryById('txtPivotNumber');
        var txtContentMotor= App.NewCarPatternModel.queryById('txtContentMotor');
        var cboFuel= App.NewCarPatternModel.queryById('cboFuel');
        var Id = App.NewCarPatternModel.queryById('fldId');
        var txtDesc = App.NewCarPatternModel.queryById('txtDesc');

        var er = false;

        if (txtName.validate() == false) {
            er = true;
        }
        if (txtCylinderNumber.validate() == false) {
            er = true;
        }
        if (txtWheelNumber.validate() == false) {
            er = true;
        }
        if (txtPivotNumber.validate() == false) {
            er = true;
        }
        if (txtContentMotor.validate() == false) {
            er = true;
        }
        if (cboFuel.validate() == false) {
            er = true;
        }
        if (er == true)
            return;
        App.NewCarPatternModel.body.mask("در حال ذخیره سازی...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/CarPatternModel_New/Save',
            params: {
                fldID: Id.getValue(),
                fldName: txtName.getValue(),
                fldCylinderNumber: txtCylinderNumber.getValue(),
                fldWheelNumber: txtWheelNumber.getValue(),
                fldPivotNumber: txtPivotNumber.getValue(),
                fldContentMotor: txtContentMotor.getValue(),
                fldFuelTypeID: cboFuel.getValue(),
                fldDesc: txtDesc.getValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.CarPatternModel.queryById('GridCarPatternModel').store.load();
                if (data.Er != 1) {
                    ClearCarPatternModel();
                }
                App.NewCarPatternModel.body.mask().hide();
            }
        });
    }

    function ClearCarPatternModel() {
        App.NewCarPatternModel.queryById('txtDesc').setValue("");
        App.NewCarPatternModel.queryById('txtName').setValue("");
        App.NewCarPatternModel.queryById('txtCylinderNumber').setValue("");
        App.NewCarPatternModel.queryById('txtWheelNumber').setValue("");
        App.NewCarPatternModel.queryById('txtPivotNumber').setValue("");
        App.NewCarPatternModel.queryById('txtContentMotor').setValue("");
        App.NewCarPatternModel.queryById('cboFuel').setValue("");
        App.NewCarPatternModel.queryById('fldId').setValue(0);
    }

  /*  function EnterNext() {
        var keyfield = App.NewCarPatternModel.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }*/

</script>