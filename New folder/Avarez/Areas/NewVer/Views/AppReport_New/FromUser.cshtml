@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
<style>
    .LblStyle {
        height: auto;
    }

    .LblRed {
        color: red;
    }

    .trheight {
        height: 40px;
    }
</style>

@(Html.X().Panel().Border(false)//.Modal(true)
            //.Listeners(l => l.AfterRender.Handler = "SetDefault1()")
        //.Width(500)//.Height(300)
        .Title("گزارش کاربرهای تعریف شده")

                 .ID("FromUser")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.Hidden().ItemID("countryId"),
        X.Hidden().ItemID("countrySID"),
        X.Hidden().ItemID("countryNType"),
                X.TabPanel().Border(false).ID("FromUserTab")
                .Items(

                    X.Panel().Border(false).Title("گزارش کاربرهای تعریف شده")
                    .ButtonAlign(Ext.Net.Alignment.Center)
                .DefaultButton("btn")
            .TitleAlign(Ext.Net.TitleAlign.Center)
                   .Buttons(X.Button().Text("چاپ").Icon(Ext.Net.Icon.Printer).Margin(10)
                               .Listeners(l =>
                               {
                                   l.Click.Handler = "PrintFromUser()";

                               })
                               .ItemID("btnSave")
                                ,
                                X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                                               .OnClientClick("App.FromUser.destroy()"))
                .Items(

                    X.FieldSet().Border(false).PaddingSpec("20px 0 0 0")
                    .Layout(Ext.Net.LayoutType.VBox)
                                 .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
               
              
                .Items(
                    X.Panel()
                                    //.Layout(LayoutType.HBox)
                                    .Border(false)
                                    .Defaults(new { Margin = 5 })
                                    .Items(
                                        X.FieldSet()
                                            .Border(true)
                                            .Title("موقعیت در تقسیمات کشوری")
                                                  .Center().Height(400).Width(515)
                                              .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                                          
                                                          .Items(
                                        X.TreePanel()
                                        .ID("TreeStructureFu")
                                        .AutoScroll(true)
                                        .Width(300)
                                        .Expand(true)
                                        .Height(300)
                                        .UseArrows(true)
                                        .Border(false)
                                            .Listeners(a =>
                                            {
                                                a.Select.Handler = "GetTreeStructureIdFu(record);";
                                                a.AfterRender.Handler = "this.getRootNode().expand();";
                                            })
                                                .Root(Html.X().Node().NodeID("0").Cls("0").DataPath("0").Text("تقسیمات کشوری"))
                                                //.Root(Html.X().Node().NodeID("1").IconFile("/Content/images/0.png").Cls("0").DataPath("0").Text("جمهوری اسلامی ایران"))
                                                    .Listeners(l =>
                                                    {
                                                        l.BeforeLoad.Fn = "nodeLoadTreeStructureFu";
                                                    })
                                        , X.Label()
                                        .Cls("LblRed")
                                        .Text("مورد انتخاب شده: ")
                                        , X.Label()
                                        .Cls("LblStyle")
                                        .ItemID("lblTitle")
                                    )

                )

                       )
                            
                           
                    )

                )
))


<script type="text/javascript">

    function showBargozary() {
        Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال بارگذاری...',
            width: 300,
            wait: true,
            waitConfig:
            {
                /*duration: 10000,*/
                interval: 200,
                /*increment: 15,*/
                text: 'در حال بارگذاری...',
                scope: this
                /*fn: function () {
                    Ext.MessageBox.hide();
                    Ext.Msg.alert('Status', 'Saved successfully!');
                }*/
            }
        });
    }
  
    function SetDefault1() {
        App.TreeStructure.getSelectionModel().select(0);
    }
    var nodeLoadTreeStructureFu = function (store, operation, options) {
        var node = operation.node;
        Ext.net.DirectMethod.request({
            url: '/NewVer/AppReport_New/NodeLoadTreeCountry',
            params: {
                nod: node.getId()
            },
            success: function (result) {
                node.set('loading', false);
                node.set('loaded', true);
                node.appendChild(result);
                node.expand();
            },

            failure: function (errorMsg) {
                Ext.Msg.alert('Failure', errorMsg);
            }
        });

        return false;
    };
    function GetTreeStructureIdFu(record) {
         var path = record.getPath("text");
         var Text = path.split('/').splice(1).join("-->");
         App.FromUser.queryById('countryId').setValue(record.getId());
         App.FromUser.queryById('countrySID').setValue(record.data.cls);
         App.FromUser.queryById('countryNType').setValue(record.data.dataPath);
         if (record.getId() != 0) {
             App.FromUser.queryById('lblTitle').setText(Text);
         }
         else {
             App.FromUser.queryById('lblTitle').setText("");
         }
    }
    function PrintFromUser() {
    
        if (App.FromUser.queryById('countryId').getValue() == 0 || App.FromUser.queryById('countryId').getValue()=="") {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا موقعیت کاربر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            return;
        }
        else {
            showBargozary();
            Ext.net.DirectMethod.request({
                url: '/NewVer/AppReport_New/PrintUser',
                params: {
                    containerId: "FromUserTab",
                    Code: App.FromUser.queryById('countrySID').getValue(),
                    NType: App.FromUser.queryById('countryNType').getValue()

                },
                success: function () {
                    Ext.MessageBox.hide();
                }
            });
        }
        
    }
    
</script>