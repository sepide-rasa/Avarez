@model IEnumerable<Avarez.Models.sp_CarExperienceSelect>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
    Avarez.Models.cartaxEntities Car = new Avarez.Models.cartaxEntities();
    var subSett = Car.sp_SelectSubSetting(0, 0, Convert.ToInt32(Session["CountryType"]), Convert.ToInt32(Session["CountryCode"]), Car.sp_GetDate().FirstOrDefault().CurrentDateTime).FirstOrDefault();
    bool? ForceScan = true;
    if (subSett != null)
    {
        ForceScan = subSett.fldHaveScan;
    }
}
<style>
    .colorlbl {
        color: red;
    }
</style>
@(Html.X().Window()

    .Border(false)
        .ID("EnteghalSavabegh1")
            .Listeners(l => l.AfterRender.Handler = "LoadEnteghalSavabegh1();")
    .Title("انتقال سوابق")
    .AutoScroll(true)
    .Closable(true)
    .CloseAction(CloseAction.Destroy)
    .Height(620)
    .Width(900)
    .Layout(Ext.Net.LayoutType.VBox)
    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
    .Items(
        X.Hidden()
            .ItemID("fldId"),
        X.Panel()
            .KeyMap(
                            Html.X().KeyMap()
                                        .ID("EnteghalSavabegh1Map")
                                .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                                .Binding(b =>
                                {
                                    b.Add(Html.X().KeyBinding()
                                        .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                                        .Handler("SaveEnteghalSavabegh1(); ")
                                    );
                                    b.Add(Html.X().KeyBinding()
                                        .KeysString(((int)Ext.Net.KeyCode.F2).ToString())
                                        .Handler("EditEnteghalSavabegh1(); ")
                                    );
                                    b.Add(Html.X().KeyBinding()
                                        .KeysString(((int)Ext.Net.KeyCode.F4).ToString())
                                        .Handler("DeleteEnteghalSavabegh1(); ")
                                    );

                                }))
            .Border(false)
            .BodyStyle("background-color:transparent;")
            .Layout(LayoutType.Fit)
            .ButtonAlign(Alignment.Center)
            .Buttons(
                X.Button()
                    .Text("ذخیره")
                    .Icon(Ext.Net.Icon.Disk)
                        .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 243))
                    .MarginSpec("10px 0 0 0")
        .ToolTip("کلید میانبر F8")
                    .Listeners(l =>
                    {
                        l.Click.Handler = "SaveEnteghalSavabegh1();";

                    })
                    .ItemID("btnSave"),
                X.Button()
                    .Text("خروج")
                    .Icon(Ext.Net.Icon.DoorOut)
                    .ToolTip("کلید میانبر Esc")
                        .OnClientClick("App.EnteghalSavabegh1.destroy();"))
            .Items(
                X.FieldSet()
                    .Title("سوابق")
                        .AutoScroll(true)
                        //.Width(670)
                        .Height(225)
                        .Defaults(new { Margin = 2 })
                        .Layout(LayoutType.Table)
                        .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                    .Items(
                        X.ComboBox()
                            .ItemID("cboState")
                            .FieldLabel("استان:")
                            .TypeAhead(true)
                            .AutoFocus(true)
                                .ForceSelection(true)
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .TriggerAction(TriggerAction.All)
                                .DisplayField("fldName")
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                .ValueField("fldID")
                            .EmptyText("استان")
                                    .Width(270)
                            .Listeners(ls =>
                                            ls.Select.Handler = "App.EnteghalSavabegh1.queryById('cboMun').clearValue(); App.EnteghalSavabegh1.queryById('cboMun').getStore().load();App.EnteghalSavabegh1.queryById('cboMun').expand();"
                            )
                            .Store(X.Store()//.AutoLoad(false)
                                .Model(X.Model()
                                        .IDProperty("fldID")
                                    .Fields(
                                    new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                    )
                                    )
                                .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetCascadeState"))
                                    .Reader(X.JsonReader().Root("data"))
                    )
            )
                            .AllowBlank(false)
                            .BlankText("لطفا استان را انتخاب نمایید."),
                         X.FieldSet().Border(false)
                             .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                         .Items(
                             X.ComboBox()
                                 .ForceSelection(true)
                                .ItemID("cboMun")
                                    .FieldLabel("شهرداری:")
                                .EmptyText("شهرداری")
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .BlankText("لطفا شهرداری را انتخاب نمایید.")
                                .QueryMode(DataLoadMode.Local)
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .ForceSelection(true)
                                    .Width(270)
                                .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldName")
                                    .ValueField("fldID")
                                .Store(X.Store()
                                    .AutoLoad(false)
                                    .Model(X.Model()
                                            .IDProperty("fldID")
                                        .Fields(
                                                    new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                            )
                                    .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetCascadeCounty"))
                                        .Reader(X.JsonReader().Root("data")))
                                                    .Parameters(ps => ps.Add(new StoreParameter("cboState", "App.EnteghalSavabegh1.queryById('cboState').getValue()", ParameterMode.Raw)))
                                        ),
                                X.Button()
                                .Text("جستجو شهرداری")
                                .Icon(Ext.Net.Icon.Zoom)
                                .Listeners(l => l.Click.Handler = "SearchMun11()")
                         )

                        , X.ComboBox()
                            .ItemID("CboAzSal")
                                .FieldLabel("از سال:")
                            .Editable(false)
                            .TypeAhead(true)
                            .BlankText("لطفا از سال را انتخاب نمایید.")
                            .QueryMode(DataLoadMode.Local)
        //.ForceSelection(true)
                            .TriggerAction(TriggerAction.All)
                            .AllowBlank(false)
                                .DisplayField("fldName")
                                .ValueField("fldID")
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                .Width(270)
                            .EmptyText("از سال")
                            .Listeners(l => l.Change.Handler = "loadcombobox2();")
        //.FieldStyle("direction:ltr;")
                            .Store(X.Store()
        //.Listeners(l => l.Load.Handler = "LoadPreviousExperience();")
                                .Model(X.Model()
                                        .IDProperty("fldID")
                                    .Fields(
                                                new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                    )
                                )
                                .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetSal"))
                                    .Reader(X.JsonReader().Root("data")))
                                                    .Parameters(ps => ps.Add(new StoreParameter("CarId", ViewBag.CarId, ParameterMode.Raw)))
                    ),X.FieldSet().Border(false)
                             .Defaults(new { Margin = 2 }).Items(
                            X.ComboBox()
                                .FieldLabel("تا سال:")
                               .ItemID("CboTaSal")
                                .Editable(false)
                                .TypeAhead(true)
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .BlankText("لطفا تا سال را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .AllowBlank(false)
                                .DisplayField("fldSalP")
                                .ValueField("fldSalP")
                                    .Width(270)
                                .EmptyText("تا سال")
                                .Store(X.Store()
                                    .AutoLoad(false)
                                    .Model(X.Model()
                                        .IDProperty("fldSalP")
                                        .Fields(
                                            new ModelField("fldSalP", ModelFieldType.String) { Mapping = "fldSal" }
                                            )
                                        )
                                    .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetSal2"))
                                        .Reader(X.JsonReader().Root("data")))
                                         .Parameters(ps => ps.Add(new StoreParameter("StartYear", "App.EnteghalSavabegh1.queryById('CboAzSal').getValue()", ParameterMode.Raw)))

                            )),
                        X.TextField()
                                .FieldLabel("شماره نامه:")
                            .Width(270)
                            .ItemID("txtShName")
                            .ReadOnly(false)
                            .AllowBlank(false)
                            .BlankText("لطفا شماره نامه را وارد نمایید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side).ColSpan(2),
                        X.FieldSet()
                            .Border(false)
        //.Layout(LayoutType.HBox)
            .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 4 })
                            .ItemID("pnlUpload")
                            .PaddingSpec("0 0 0 40px")
        //.BodyStyle("background-color:transparent;")
                            .ColSpan(2)
                            .Items(
                            X.Container()
                                    .Content(@<div id="fi-msg" style="border:solid;border-width:10px;display:none; width:300px;height:150px"></div>),
                                    X.Label("تصویر مدرک:").Hidden(!(bool)ForceScan),
                                    X.FileUploadField().Hidden(!(bool)ForceScan)
                                    .ID("FileUploadFieldFish22")
                                    .ButtonOnly(true)
                                    .Icon(Icon.Attach)
                                    .ButtonText("انتخاب فایل")
                                    .DirectEvents(l =>
                                    {
                                        l.Change.Action = "Upload";
                                        l.Change.Success = "hideprogressSavabegh1();";
                                    })
                                         .Listeners(l => l.Change.Fn = "showFile")
                                        , X.Container().Hidden(!(bool)ForceScan)
                                    .Content(@<center><div id="fi-button-msg" style="display: none; width: 450px; height: 25px"></div></center>)
        ),
        X.TextArea()
        .FieldLabel("توضیحات")
        .ItemID("txtDesc")
        .Width(555)
        .ColSpan(2)
        .LabelAlign(LabelAlign.Left)
        )
        ),
        X.Panel()
        .Border(false)
        .Width(800)
        .Layout(LayoutType.Fit)
        .Listeners(l => l.AfterRender.Handler = "setSizeGridSavabegh11()")
        .ID("pnlGridSavabegh1")
        .Items(
        X.GridPanel()
        .TopBar(
        Html.X().Toolbar()
        .Items(
        X.Button()
        .Text("ویرایش")
        .Icon(Ext.Net.Icon.Pencil)
        .ToolTip("کلید میانبر F2")
        .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 245))
        .Listeners(Li => Li.Click.Handler = "EditEnteghalSavabegh1();"),
        X.Button()
        .Text("حذف")
        .Icon(Ext.Net.Icon.Delete)
        .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 244))
        .ToolTip("کلید میانبر F4")
        .Listeners(de =>
        {
            de.Click.Handler = "if (App.EnteghalSavabegh1.queryById('GridSavabegh1').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteEnteghalSavabegh1();";
        })
        )
        )
        .ItemID("GridSavabegh1")
        .BottomBar(X.PagingToolbar())
        .Frame(true)
        .AutoScroll(true)
        .Title("لیست سوابق")
        .Store(
        X.StoreForModel()
        .Parameters(new { CarId = @ViewBag.CarId })
        .Proxy(
        Html.X().AjaxProxy()
        .Url(Url.Action("Read"))
        .Reader(Html.X().JsonReader().Root("data"))
        )
        .PageSize(10)
        .RemoteFilter(true)
        .RemotePaging(true)
        )
        .View(
        Html.X().GridView().LoadingText("در حال بارگذاری...")
        )
        .Plugins(X.FilterHeader().Remote(false))
        .SelectionModel(
        Html.X().RowSelectionModel()
        .Mode(SelectionMode.Single))
        .ColumnModel(
        Html.X().RowNumbererColumn(),
        Html.X().Column().DataIndex(Model, m => m.fldID).Text("کد").Flex(1).Hidden(true).Hideable(false),
        Html.X().Column().DataIndex(Model, m => m.fldName).Text("شهرداری").Wrap(true).Flex(3),
        Html.X().Column().DataIndex(Model, m => m.fldStartDate).Text("از تاریخ").Wrap(true).Flex(4),
        Html.X().Column().DataIndex(Model, m => m.fldEndDate).Text("تا تاریخ").Wrap(true).Flex(4),
        Html.X().Column().DataIndex(Model, m => m.fldLetterNumber).Text("ش. نامه").Wrap(true).Flex(4),
        Html.X().Column().DataIndex(Model, m => m.fldUserName).Text("كاربر").Wrap(true).Flex(4),
        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Wrap(true).Flex(4).Wrap(true)
        , Html.X().ComponentColumn().ItemID("buttonMadrak").Text("").Component(Html.X().Button().ItemID("btnbind").Text("مدرک").Listeners(l => l.Click.Handler = "ShowMadrak();")).Filterable(false)
        //Html.X().Column().DataIndex(Model, m => m.fldName).Text("نام ذینفعان").Flex(6).Wrap(true)

        )
        )
        )
)

    <script type="text/javascript">
        var TaSal = 0;
        var MojazSavabegh2 = 0;
        var sizeeSavabegh2 = 0;
        var EndUploadSavabegh2 = false;
        var carfile = '@ViewBag.CarFileId';
        var carID = '@ViewBag.CarId';
        var fileId = 0;
        function ShowMadrak() {
            var id = App.EnteghalSavabegh1.queryById('buttonMadrak').activeRecord.record.data.fldID;
            Ext.net.DirectMethod.request({
                url: '/NewVer/PreviewFile',
                params: {
                    State: 1,
                    Id: id
                }
            });
        }
        function loadcombobox2() {
            @*if ('@ViewBag.Id' == '0') {*@
            if (App.EnteghalSavabegh1.queryById('CboAzSal').getValue() != "") {
                App.EnteghalSavabegh1.queryById('CboTaSal').setValue("");
                App.EnteghalSavabegh1.queryById('CboTaSal').store.load();
            }
            /*}
            else {
                if (App.EnteghalSavabegh.queryById('CboAzSal').getValue() != "") {
                    App.EnteghalSavabegh.queryById('CboTaSal').setValue(TaSal);
                    App.EnteghalSavabegh.queryById('CboTaSal').store.load();
                }
            }*/
        }
        function SearchMun11() {
            Ext.net.DirectMethod.request({
                url: '/NewVer/MunicipalitySearch?State=3'
            });
        }
        function setSizeGridSavabegh11() {
            App.pnlGridSavabegh1.setSize(App.EnteghalSavabegh1.getWidth() - 10, App.EnteghalSavabegh1.getHeight() - 315);
        }
        function hideprogressSavabegh1() {
            if (MojazSavabegh2 == 1 && sizeeSavabegh2 == 1) {
                EndUploadSavabegh2 = true;
            }
            MojazSavabegh2 = 0;
            sizeeSavabegh2 = 0;
        }
        var CheckExperience2 = setInterval(CheckEndExperience2, 500);

        function CheckEndExperience2() {
            if (EndUploadSavabegh2 == true) {
                Ext.MessageBox.hide();
                Ext.Msg.alert('عملیات موفق', 'فایل با موفقیت آپلود شد.');
                clearInterval(CheckEndExperience2);
                EndUploadSavabegh2 = false;
            }
        }
        var showFile = function (fb, v) {
            var id = fb.fileInputEl.dom.id;
            var el = Ext.get('fi-button-msg');
            if (v) {
                showProgressBarSavabegh2();
                if (v.split('.').pop().toLowerCase() == "jpg" || v.split('.').pop().toLowerCase() == "jpeg") {
                    MojazSavabegh2 = 1;
                    if (document.getElementById(id).files[0].size <= 5242880) {
                        sizeeSavabegh2 = 1;
                    }
                    if (sizeeSavabegh2 == 1) {
                        el.update('<b>فایل انتخاب شده:</b> ' + v);
                    }
                    else {
                        el.update("");
                    }

                    if (!el.isVisible()) {
                        el.slideIn('t', {
                            duration: .2,
                            easing: 'easeIn',
                            callback: function () {
                                el.highlight();
                            }
                        });
                    } else {
                        el.highlight();
                    }
                }
                else {
                    el.update("");
                }
            }
        };
        function showProgressBarSavabegh2() {
            Ext.MessageBox.show({
                msg: 'لطفاً منتظر باشید',
                progressText: 'در حال آپلود فایل...',
                width: 300,
                wait: true,
                waitConfig:
                {
                    interval: 200,
                    text: 'در حال آپلود فایل...',
                    scope: this
                }
            });
        }
        function DeleteEnteghalSavabegh1() {
            var SelectedRow = App.EnteghalSavabegh1.queryById('GridSavabegh1').selModel.getLastSelected();
            if (SelectedRow != null) {
                Ext.MessageBox.show({
                    title: "هشدار",
                    msg: "آیا برای حذف مطمئن هستید؟",
                    icon: Ext.MessageBox.WARNING,
                    buttons: Ext.MessageBox.YESNO,
                    fn: function (btn) {
                        if (btn == 'yes') {
                            Ext.net.DirectMethod.request({
                                url: '/NewVer/EnteghalSavabegh/Delete',
                                params: {
                                    id: SelectedRow.data.fldID
                                },
                                success: function (data) {
                                    var ic = Ext.MessageBox.INFO;
                                    if (data.Er == 1)
                                        ic = Ext.MessageBox.ERROR;
                                    Ext.MessageBox.show({
                                        title: data.MsgTitle,
                                        msg: data.Msg,
                                        icon: ic,
                                        buttons: Ext.MessageBox.OK
                                    });
                                    App.EnteghalSavabegh1.queryById('GridSavabegh1').store.load();
                                    Ext.net.DirectMethod.request({
                                        url: 'NewVer/SelectParvande/ReloadGridSavabegh',
                                        params: {
                                            CarId: '@ViewBag.CarId'
                                        },
                                        success: function (result) {
                                            App.SelectParvande.queryById('GridSavabegh').getStore().loadData(result);

                                            Ext.net.Mask.hide();
                                        }
                                    });
                                }
                            });
                        }
                    }
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا یک سطر را انتخاب کنید.",
                    icon: Ext.net.icon.ERROR,
                    buttons: Ext.MessageBox.Ok
                });
            }
        }
        function EditEnteghalSavabegh1() {
            var SelectedRow = App.EnteghalSavabegh1.queryById('GridSavabegh1').selModel.getLastSelected();
            if (SelectedRow != null) {
                App.EnteghalSavabegh1.body.mask("در حال بارگذاری...");
                Ext.net.DirectMethod.request({
                    url: '/NewVer/EnteghalSavabegh/CheckTaiidSavabegh',
                    params: {
                        id: SelectedRow.data.fldID
                    },
                    success: function (data1) {
                        if (!data1.HaveTaiid || data1.userId == "1") {
                            Ext.net.Mask.show({ msg: 'در حال بارگذاری ...' });
                            Ext.net.DirectMethod.request({
                                url: '/NewVer/EnteghalSavabegh/Details',
                                params: {
                                    Id: SelectedRow.data.fldID
                                },
                                success: function (data) {
                                    if (data.Er != 1) {
                                        var cboState = App.EnteghalSavabegh1.queryById('cboState');
                                        cboState.setValue(data.fldStateId);
                                        var cboMun = App.EnteghalSavabegh1.queryById('cboMun');
                                        cboMun.clearValue(); cboMun.getStore().load();
                                        cboMun.setValue(data.fldMunID);
                                        var CboAzSal = App.EnteghalSavabegh1.queryById('CboAzSal');
                                        CboAzSal.setValue(data.fldFromYear);
                                        var CboTaSal = App.EnteghalSavabegh1.queryById('CboTaSal');
                                        CboTaSal.setValue(data.fldToYear);
                                        var txtShName = App.EnteghalSavabegh1.queryById('txtShName');
                                        txtShName.setValue(data.fldLetterNumber);
                                        var Id = App.EnteghalSavabegh1.queryById('fldId');
                                        Id.setValue(data.fldId);
                                        var txtDesc = App.EnteghalSavabegh1.queryById('txtDesc');
                                        txtDesc.setValue(data.fldDesc);
                                        fileId = data.fldFileId;
                                    }
                                    else {
                                        Ext.MessageBox.show({
                                            title: data.MsgTitle,
                                            msg: data.Msg,
                                            icon: Ext.MessageBox.ERROR,
                                            buttons: Ext.MessageBox.OK
                                        });
                                    }
                                    Ext.net.Mask.hide();
                                }
                            });
                        }
                        else {
                            Ext.MessageBox.show({
                                Name: "خطا",
                                msg: "سابقه موردنظر تایید شده و قادر به ویرایش آن نمی باشید.",
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        App.EnteghalSavabegh1.body.mask().hide();


                    }
                })
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا یک سطر را انتخاب کنید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }

        function LoadEnteghalSavabegh1() {
            App.EnteghalSavabegh1.queryById('cboState').validate();
            App.EnteghalSavabegh1.queryById('cboMun').validate();
            App.EnteghalSavabegh1.queryById('CboAzSal').validate();
            App.EnteghalSavabegh1.queryById('CboTaSal').validate();
            App.EnteghalSavabegh1.queryById('txtShName').validate();
        }



        function SaveEnteghalSavabegh1() {

            var cboState = App.EnteghalSavabegh1.queryById('cboState');
            var cboMun = App.EnteghalSavabegh1.queryById('cboMun');
            var CboAzSal = App.EnteghalSavabegh1.queryById('CboAzSal');
            var CboTaSal = App.EnteghalSavabegh1.queryById('CboTaSal');
            var txtShName = App.EnteghalSavabegh1.queryById('txtShName');
            var Id = App.EnteghalSavabegh1.queryById('fldId');
            var txtDesc = App.EnteghalSavabegh1.queryById('txtDesc');
            var er = false;

            if (cboState.validate() == false) {
                er = true;
            }
            if (cboMun.validate() == false) {
                er = true;
            }
            if (CboAzSal.validate() == false) {
                er = true;
            }
            if (CboTaSal.validate() == false) {
                er = true;
            }
            if (txtShName.validate() == false) {
                er = true;
            }
            if (er == true)
                return;
            Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
            Ext.net.DirectMethod.request({
                url: '/NewVer/EnteghalSavabegh/Save',
                params: {
                    fldCarFileID: carfile,
                    fldId: Id.getValue(),
                    fldMunicipalityID: cboMun.getValue(),
                    fldFromYear: CboAzSal.getValue(),
                    fldToYear: CboTaSal.getValue(),
                    fldLetterNumber: txtShName.getValue(),
                    fldFileId: fileId,
                    fldDesc: txtDesc.getValue()
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Err == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.EnteghalSavabegh1.queryById('GridSavabegh1').store.load();
                    if (data.Err != 1)
                        ClearEnteghalSavabegh1();
                    Ext.net.DirectMethod.request({
                        url: 'NewVer/SelectParvande/ReloadGridSavabegh',
                        params: {
                            CarId: '@ViewBag.CarId'
                        },
                        success: function (result) {
                            App.SelectParvande.queryById('GridSavabegh').getStore().loadData(result);

                            Ext.net.Mask.hide();
                        }
                    });
                    Ext.net.Mask.hide();
                }

            });
        }
        function ClearEnteghalSavabegh1() {
            App.EnteghalSavabegh1.queryById('cboState').setValue("");
            App.EnteghalSavabegh1.queryById('cboMun').setValue("");
            App.EnteghalSavabegh1.queryById('CboAzSal').setValue("");
            App.EnteghalSavabegh1.queryById('CboTaSal').setValue("");
            App.EnteghalSavabegh1.queryById('txtShName').setValue("");
            App.EnteghalSavabegh1.queryById('txtDesc').setValue("");
            App.EnteghalSavabegh1.queryById('fldId').setValue(0);
        }

        function EnterNext() {

            if (App.AvarezTab.activeTab.id == "SearchParvande") {
                if (App.SearchParvande.activeTab.id == "EnteghalSavabegh") {
                    var nextfld;
                    var keyfield = App.EnteghalSavabegh.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    if (keyfield.itemId == "cboState") {
                        nextfld = App.EnteghalSavabegh.queryById("cboMun");
                    }
                    else if (keyfield.itemId == "btnSearchMun") {
                        nextfld = App.EnteghalSavabegh.queryById("CboAzSal");
                    }
                    else if (keyfield.itemId == "cboMun") {
                        nextfld = App.EnteghalSavabegh.queryById("CboAzSal");
                    }
                    else if (keyfield.itemId == "CboAzSal") {
                        nextfld = App.EnteghalSavabegh.queryById("CboTaSal");
                    }
                    else if (keyfield.itemId == "CboTaSal") {
                        nextfld = App.EnteghalSavabegh.queryById("txtShName");
                    }
                    else if (keyfield.itemId == "txtShName") {

                        nextfld = App.EnteghalSavabegh.queryById("txtDesc");
                    }
                    else {
                        nextfld = keyfield.nextSibling();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                    /*var keyfield = App.SabtVarizi.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    /*var nextfld = keyfield.nextSibling();
                    if (nextfld != null) {
                    if (keyfield.itemId == "txtSerial" && keyfield.hidden == true)
                    {
                        nextfld = nextfld.nextSibling();
                        nextfld.focus();
                        nextfld.selectText();
                    }
    
                    else if (nextfld.itemId == "txtMun" && nextfld.hidden == true)
                    {
                        nextfld = nextfld.nextSibling().nextSibling();
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    else if{
                        keyfield.focus();
                        keyfield.selectText();
                    }
                    }*/
                }
                else if (App.SearchParvande.activeTab.id == "SabtVarizi") {
                    var nextfld;
                    var keyfield = App.SabtVarizi.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    if (keyfield.itemId == "cboNoePardakht" && App.SabtVarizi.queryById("cboNoePardakht").getValue() == "1") {
                        nextfld = App.SabtVarizi.queryById("txtSerial");
                    }
                    else if (keyfield.itemId == "cboNoePardakht" && App.SabtVarizi.queryById("cboNoePardakht").getValue() == "2") {
                        nextfld = App.SabtVarizi.queryById("txtMun");
                    }
                    else if (keyfield.itemId == "txtSerial") {
                        nextfld = App.SabtVarizi.queryById("CboNoeVariz");
                    }
                    else if (keyfield.itemId == "txtMun") {
                        nextfld = App.SabtVarizi.queryById("txtSerialFish");
                    }
                        /*else if (keyfield.itemId == "txtDescV") {
                            return;
                        }*/
                    else {
                        nextfld = keyfield.nextSibling();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }

                else if (App.SearchParvande.activeTab.id == "ListBlack") {
                    var keyfield = App.ListBlack.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld = keyfield.nextSibling();
                    nextfld.focus();
                    nextfld.selectText();
                }
                else if (App.SearchParvande.activeTab.id == "Parvande") {
                    var keyfield = App.SearchParvande.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    if (keyfield.itemId == "txtSearch") {
                        FnSearchParvande();
                    }
                    else {
                        nextfld = keyfield.nextSibling();
                        nextfld.focus();
                    }
                }
                else if (App.SearchParvande.activeTab.id == "SelectParvande") {
                    if (App.EnteghalSavabegh1 != undefined) {
                        var nextfld;
                        var keyfield = App.EnteghalSavabegh1.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        if (keyfield.itemId == "cboState") {
                            nextfld = App.EnteghalSavabegh1.queryById("cboMun");
                        }
                        else if (keyfield.itemId == "btnSearchMun") {
                            nextfld = App.EnteghalSavabegh1.queryById("CboAzSal");
                        }
                        else if (keyfield.itemId == "cboMun") {
                            nextfld = App.EnteghalSavabegh1.queryById("CboAzSal");
                        }
                        else if (keyfield.itemId == "CboAzSal") {
                            nextfld = App.EnteghalSavabegh1.queryById("CboTaSal");
                        }
                        else if (keyfield.itemId == "CboTaSal") {
                            nextfld = App.EnteghalSavabegh1.queryById("txtShName");
                        }
                        else if (keyfield.itemId == "txtShName") {

                            nextfld = App.EnteghalSavabegh1.queryById("txtDesc");
                        }
                        else {
                            nextfld = keyfield.nextSibling();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                }
            }
            else if (App.AvarezTab.activeTab.id == "S_Mohasebat") {
                /* var keyfield = App.ListBlack.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                 var nextfld = keyfield.nextSibling();
                 nextfld.focus();
                 nextfld.selectText();*/
            }
            else if (App.AvarezTab.activeTab.id == "Fast_Fish") {
                /*var keyfield = App.S_Mohasebat.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
    
                nextfld = keyfield.nextSibling();
                nextfld.focus();*/
            }
        }
    </script>
