@model Avarez.Models.Parvande
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using Ext.Net.Utilities;
@using Avarez.Controllers.Users;
@{

    var X = Html.X();
    var delParvandeformee = false;
    if (Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 432))
    {
        delParvandeformee = true;
    }
}
@(X.Panel().Title("پرونده جدید").Border(false)//.Height(500)//.Listeners(l => l.AfterRender.Handler = "FormLoad();")
            .ID("NewParvande")
                .AutoScroll(true).Closable(true)
                .Layout(LayoutType.Fit)
                .Items(
        //    X.FieldSet().Border(true).Width(500)
        //  .Layout(Ext.Net.LayoutType.VBox)
        //                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
        //.Items(
        X.Panel()

                        
                                .Layout(Ext.Net.LayoutType.VBox)
                                .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
        .Border(false).ButtonAlign(Ext.Net.Alignment.Center)
        .AutoScroll(true)

        .Items(
                X.Panel().Border(false)
                    .Margins("20px 0px 0px 0px")
                .Center()
                     .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                    .AutoScroll(true)
                        .ButtonAlign(Ext.Net.Alignment.Center)
                            .Buttons(
                                        X.Button().Text("ادامه").Icon(Ext.Net.Icon.ArrowLeft).Margin(10)
                                            .Listeners(l => l.Click.Handler = "FnNextStep();")



                                        ,
                                        X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                                                        .OnClientClick("App.NewParvande.destroy();"))
                //.Defaults(new { Margin = 2 })
                .Items(
                        X.Panel().Frame(true)
                        .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 226))
                        .Margins("20px 0px 10px 0px")
                        .Title("مالک")
                        .Height(300)
                        .Width(1000)
                        .Border(false)
                        .AutoScroll(true)
                        .ID("PnlGridPanelMalek")
                        .Layout(Ext.Net.LayoutType.Fit)
                    .Items(
                        X.GridPanel()
                            .AutoScroll(true)
                        .Listeners(l => l.ItemClick.Handler = "ReloadGridPelak();")
                                .TopBar(
                            Html.X().Toolbar()
                                .Items(
                                    X.Button()
                                        .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 227))
                                        .Text("جدید")
                                        .Icon(Ext.Net.Icon.Add)
                                        .ItemID("AddPersonal")
        // .ToolTip("کلید میانبر F8")
                                        .Listeners(li => li.Click.Handler = "NewMalek();"),
                                    X.Button()
                                        .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 228))
                                        .Text("ویرایش")
                                        .ItemID("UpdatePersonal")
                                        .Icon(Ext.Net.Icon.Pencil)
        //.ToolTip("کلید میانبر F2")
                                        .Listeners(Li => Li.Click.Handler = "EditMalek();"),
                                    X.Button()
                                        .Hidden(!delParvandeformee)
                                        .Text("حذف")
                                        .Icon(Ext.Net.Icon.Delete)
                                        //.ToolTip("کلید میانبر F2")
                                        .Listeners(Li => Li.Click.Handler = "DeleteMalek();")
                                        ,X.Button()
                                        //.Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 228))
                                        .Text("راهنما")
                                        .ItemID("HelpPersonal")
                                        .Icon(Ext.Net.Icon.Help)
        //.ToolTip("کلید میانبر F2")
                                        .Listeners(Li => Li.Click.Handler = "HelpPersonal();")
                                    )
                                )
                            .ItemID("GridMalek")
                                .BottomBar(X.PagingToolbar().HideRefresh(true))
                                .Store(
                                        X.StoreFor(Model.Owner)
                            .Proxy(
                                    Html.X().AjaxProxy()
                                        .Url(Url.Action("ReadMalek"))
                                        .Reader(Html.X().JsonReader().Root("data"))
                                    )
                                        .PageSize(10)
                                        .RemoteFilter(true)
                                        .RemotePaging(true)
                                        .Listeners(l => l.DataChanged.Handler = "App.NewParvande.queryById('GridMalek').selModel.refresh();")
                                )
                            .View(
                                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                            )
                            .Plugins(X.FilterHeader().Remote(true))
                            .ColumnModel(
                                 Html.X().RowNumbererColumn().Flex(1),
                                    Html.X().Column().DataIndex(Model.Owner, m => m.fldID).Text("کد").Flex(2).Hidden(true),
                                    Html.X().Column().DataIndex(Model.Owner, m => m.fldMelli_EconomicCode).Text("کدملی/کداقتصادی").Flex(5),
                                    Html.X().Column().DataIndex(Model.Owner, m => m.fldName).Text("نام و نام خانوادگی").Flex(5),
                                    Html.X().Column().DataIndex(Model.Owner, m => m.fldMobile).Text("موبایل").Flex(5),
                                    Html.X().Column().DataIndex(Model.Owner, m => m.fldAddress).Text("آدرس").Flex(10)
                                    
                                        )
                            )
                            ,
                                        X.Panel().Frame(true).Margins("0px 0px 10px 0px")
                                .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 229))
                            .Title("پلاک")
                            .Height(300)
                            .Width(1000)
                            .Border(false)
                            .AutoScroll(true)
                            .ID("PnlGridPanelPelak")
                            .Layout(Ext.Net.LayoutType.Fit)
                        .Items(
                                X.GridPanel()
                                .Listeners(l => l.ItemClick.Handler = "ReloadGridParvande();")
                                .AutoScroll(true)
                                    .TopBar(
                                Html.X().Toolbar()
                                    .Items(
                                        X.Button()
                                            .Text("جدید")
                                            .Icon(Ext.Net.Icon.Add)
                                            .ItemID("AddPelak")
                                                .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 230))
        // .ToolTip("کلید میانبر F8")
                                                .Listeners(li => li.Click.Handler = "NewPelak();"),
                                        X.Button()
                                            .Text("ویرایش")
                                                .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 232))
                                                .ItemID("UpdatePelak")
                                            .Icon(Ext.Net.Icon.Pencil)
        //.ToolTip("کلید میانبر F2")
                                                .Listeners(Li => Li.Click.Handler = "EditPelak();"),
                                        X.Button()
                                            .Text("حذف")
                                                .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 231))
                                                .ItemID("DelPelak")
                                            .Icon(Ext.Net.Icon.Delete)
        // .ToolTip("کلید میانبر F9")
                                            .Listeners(de =>
                                            {
                                                de.Click.Handler = "DeletePelak();";
                                            })
                                            , X.Button()
                                            .Text("راهنما")
                                                //.Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 231))
                                                .ItemID("HelpPelak")
                                            .Icon(Ext.Net.Icon.Help)
                                            .Listeners(de =>
                                            {
                                                de.Click.Handler = "HelpPelak();";
                                            })
                                        )
                                    )
                                    .ItemID("GridPelak")
                                    .BottomBar(X.PagingToolbar().HideRefresh(true))
                                    .Store(
                                                        X.StoreFor(Model.CarPlaque).Listeners(l => l.DataChanged.Handler = "App.NewParvande.queryById('GridPelak').selModel.refresh();")
        //.AutoLoad(false)
        //.Proxy(Html.X().AjaxProxy()
        //        .Url(Url.Action("ReadPelak"))
        //    .Reader(Html.X().JsonReader().Root("data"))
        //)
                                            .PageSize(10)
                                            .RemoteFilter(true)
                                            .RemotePaging(true)
                                                    .Listeners(l => l.DataChanged.Handler = "App.NewParvande.queryById('GridPelak').selModel.refresh();")
                                    )
                                .View(
                                    Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                                )
         .Plugins(X.FilterHeader())
                                .ColumnModel(
                                     Html.X().RowNumbererColumn().Flex(1),
                                           Html.X().Column().DataIndex(Model.CarPlaque, m => m.fldID).Text("کد").Flex(2).Hidden(true),
                                                    Html.X().Column().DataIndex(Model.CarPlaque, m => m.fldOwnerName).Text("نام مالک").Flex(5),
                                                    Html.X().Column().DataIndex(Model.CarPlaque, m => m.fldPlaqueNumber).Text("شماره پلاک").Flex(5),
                                                    Html.X().Column().DataIndex(Model.CarPlaque, m => m.fldPlaqueCityName).Text("شهر").Flex(5),
                                                    Html.X().Column().DataIndex(Model.CarPlaque, m => m.fldPlaqueSerial).Text("شماره سریال").Flex(5),
                                                    Html.X().Column().DataIndex(Model.CarPlaque, m => m.fldDesc).Text("توضیحات").Flex(5)

                                            )
                                )
                                    ,
                                    X.Panel().Frame(true)
                                    .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 237))
                                .Title("پرونده خودرو")
                                .Height(300)
                                .Width(1000)
                                .Border(false)
                                .AutoScroll(true)
                                .ID("PnlGridPanelParvande")
                                .Layout(Ext.Net.LayoutType.Fit)
                            .Items(
                                X.GridPanel()
                                    .AutoScroll(true)
                                        .TopBar(
                                    Html.X().Toolbar()
                                        .Items(
                                            X.Button()
                                                .Text("جدید")
                                                .Icon(Ext.Net.Icon.Add)
                                                    .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 238))
                                                        .ItemID("AddParvandeKhodro")
        // .ToolTip("کلید میانبر F8")
                                                        .Listeners(li => li.Click.Handler = "NewParvandeKhodro();"),
                                            X.Button()
                                                .Text("ویرایش")
                                                    .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 240))
                                                        .ItemID("UpdateParvande")
                                                .Icon(Ext.Net.Icon.Pencil)
        //.ToolTip("کلید میانبر F2")
                                                        .Listeners(Li => Li.Click.Handler = "EditParvande();"),
                                            X.Button()
                                                .Text("حذف")
                                                    .Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 239))
                                                        .ItemID("DelParvande")
                                                .Icon(Ext.Net.Icon.Delete)
        // .ToolTip("کلید میانبر F9")
                                                .Listeners(de =>
                                                {
                                                    de.Click.Handler = "DeleteParvande(1);";
                                                }),
                                                    X.Button()
                                                    .Text("حذف")
                                                    .Hidden(!delParvandeformee)
                                                    .ItemID("DelParvandeforme")
                                                    .Icon(Ext.Net.Icon.FolderDelete)
        // .ToolTip("کلید میانبر F9")
                                                    .Listeners(de =>
                                                    {
                                                        de.Click.Handler = "DeleteParvande(2);";
                                                    }),
                                                        X.Button()
                                                        .Text("اطلاعات پرونده")
                                                        .Hidden(!delParvandeformee)
                                                        .Icon(Ext.Net.Icon.Information)
        // .ToolTip("کلید میانبر F9")
                                                        .Listeners(de =>
                                                        {
                                                            de.Click.Handler = "getInfoCarFile();";
                                                        })
                                                , X.Button()
                                                .Text("راهنما")
                                                    //.Hidden(!Avarez.Controllers.Users.Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 240))
                                                        .ItemID("HelpParvandeC")
                                                .Icon(Ext.Net.Icon.Help)
        //.ToolTip("کلید میانبر F2")
                                                .Listeners(Li => Li.Click.Handler = "HelpParvandeC();")
                                            )
                                        )
                                            .ItemID("GridParvande")
                                        .BottomBar(X.PagingToolbar().HideRefresh(true))
                                        .Store(
                                                        X.StoreFor(Model.CarFile).Listeners(l => l.DataChanged.Handler = "App.NewParvande.queryById('GridParvande').selModel.refresh();")
        //.AutoLoad(false)
        //.Proxy(Html.X().AjaxProxy()
        //        .Url(Url.Action("ReadPelak"))
        //    .Reader(Html.X().JsonReader().Root("data"))
        //)
                                                .PageSize(10)
                                                .RemoteFilter(true)
                                                .RemotePaging(true)
                                        )
                                    .View(
                                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                                    )
         .Plugins(X.FilterHeader())
                                    .ColumnModel(
                                         Html.X().RowNumbererColumn().Flex(1),
                                            Html.X().Column().DataIndex(Model.CarFile, m => m.fldID).Text("شماره پرونده").Flex(2),
                                            Html.X().Column().DataIndex(Model.CarFile, m => m.fldOwnerName).Text("نام مالک").Flex(5),
                                            Html.X().Column().DataIndex(Model.CarFile, m => m.fldPlaqueNumber).Text("شماره پلاک").Flex(5),
                                            Html.X().Column().DataIndex(Model.CarFile, m => m.fldMotorNumber).Text("شماره موتور").Flex(5),
                                            Html.X().Column().DataIndex(Model.CarFile, m => m.fldVIN).Text("VIN").Flex(5),
                                            Html.X().Column().DataIndex(Model.CarFile, m => m.fldShasiNumber).Text("شماره شاسی").Flex(5),
                                            Html.X().Column().DataIndex(Model.CarFile, m => m.fldDesc).Text("توضیحات").Flex(5),
                                            Html.X().Column().DataIndex(Model.CarFile, m => m.fldCarID).Text("کد ").Flex(5).Hidden(true)

                                                )
                                    )
                           
                           
                      

                )
            )
                )

)
<script type="text/javascript">
    function NewMalek() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NewVer/Parvande/NewMalek',
            params: {
                id: 0,
                State:1
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function NewPelak() {
        var SelectedHeaderRow = App.NewParvande.queryById('GridMalek').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/NewVer/Parvande/NewPelak',
                params: {
                    id: 0,
                    Malekid: SelectedHeaderRow.data.fldID,
                    state: 1
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک مالک را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function NewParvandeKhodro() {
        var SelectedHeaderRow = App.NewParvande.queryById('GridPelak').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/NewVer/Parvande/NewParvandeKhodro',
                params: {
                    id: 0,
                    Pelakid: SelectedHeaderRow.data.fldID,
                    state:1
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک پلاک را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ReloadGridPelak() {
        var SelectedRow = App.NewParvande.queryById("GridMalek").getSelectionModel().getLastSelected();
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NewVer/Parvande/ReloadPelak',
            params: {
                MalekId: SelectedRow.data.fldID,
            },
            success: function (result) {
                App.NewParvande.queryById('GridPelak').getStore().loadData(result);

                Ext.net.Mask.hide();
            }
        });
    }
    function ReloadGridParvande() {
        var SelectedRow = App.NewParvande.queryById("GridPelak").getSelectionModel().getLastSelected();
        var SelectedRowMalek = App.NewParvande.queryById("GridMalek").getSelectionModel().getLastSelected();
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NewVer/Parvande/ReloadParvande',
            params: {
                PelakId: SelectedRow.data.fldID,
                MalekId: SelectedRowMalek.data.fldID
            },
            success: function (result) {
                App.NewParvande.queryById('GridParvande').getStore().loadData(result);

                Ext.net.Mask.hide();
            }
        });
    }
    function EditParvande() {
        var SelectedRow = App.NewParvande.queryById('GridParvande').selModel.getLastSelected();
        if (SelectedRow != null) {
            var flag = 0;
            for (var i = 1; i < App.SearchParvande.tabBar.tabPanel.items.length; i++) {
                var tabsId = App.SearchParvande.tabBar.tabPanel.items.items[i].id;
                if (tabsId.substring(14) == SelectedRow.data.fldID) {
                    flag = 1;
                }
            }

            if (flag == 1) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا ابتدا پرونده  مورد نظر را بسته و سپس اقدام به ویرایش نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                var SelectedRow1 = App.NewParvande.queryById('GridPelak').selModel.getLastSelected();
                App.NewParvande.body.mask("در حال بارگذاری...");
                Ext.net.DirectMethod.request({
                    url: '/NewVer/SelectParvande/CheckTaiid',
                    params: {
                        CarFileId: SelectedRow.data.fldID
                    },
                    success: function (data) {
                        if (!data.HaveTaiid || data.userId == "1") {
                            if (data.HaveMafasa && data.userId != "1") {
                                Ext.MessageBox.show({
                                    Name: "خطا",
                                    msg: "برای پرونده موردنظر  مفاصا ثبت شده و قادر به ویرایش آن نمی باشید.",
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                            else if (data.HaveSabeghe && data.userId != "1") {
                                Ext.MessageBox.show({
                                    Name: "خطا",
                                    msg: "برای پرونده موردنظر  سابقه ثبت شده و قادر به ویرایش آن نمی باشید.",
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                            else if (data.HaveVarizi && data.userId != "1") {
                                Ext.MessageBox.show({
                                    Name: "خطا",
                                    msg: "برای پرونده موردنظر  واریزی ثبت شده و قادر به ویرایش آن نمی باشید.",
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                            else if (data.HaveFish && data.userId != "1") {
                                Ext.MessageBox.show({
                                    Name: "خطا",
                                    msg: "برای پرونده موردنظر  فیش ثبت شده و قادر به ویرایش آن نمی باشید.",
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                            else {
                                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                                Ext.net.DirectMethod.request({
                                    url: '/NewVer/Parvande/NewParvandeKhodro',
                                    params: {
                                        id: SelectedRow.data.fldID,
                                        Pelakid: SelectedRow1.data.fldID,
                                        state: 1
                                    },
                                    success: function () {
                                        Ext.net.Mask.hide();
                                    }
                                });
                            }
                        }
                        else {
                            Ext.MessageBox.show({
                                Name: "خطا",
                                msg: "پرونده موردنظر تایید شده و قادر به ویرایش آن نمی باشید.",
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        App.NewParvande.body.mask().hide();
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function getInfoCarFile() {
        var SelectedRow = App.NewParvande.queryById('GridParvande').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/NewVer/SelectParvande/CheckTaiid',
                params: {
                    CarFileId: SelectedRow.data.fldID
                },
                success: function (data) {
                    Ext.MessageBox.show({
                        title: "",
                        msg: data.Message,
                        icon: Ext.MessageBox.INFO,
                        buttons: Ext.MessageBox.OK
                    });
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function EditMalek() {
        var SelectedRow = App.NewParvande.queryById('GridMalek').selModel.getLastSelected();

        if (SelectedRow != null) {
            var flag=0;
            for (var i = 1; i < App.SearchParvande.tabBar.tabPanel.items.length; i++) {
                var tabsId = App.SearchParvande.tabBar.tabPanel.items.items[i].id;
                if (Ext.getCmp(tabsId).queryById("fldMalekId").getValue() == SelectedRow.data.fldID) {
                    flag = 1;
                }
            }

            if (flag == 1) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا ابتدا پرونده های مرتبط با مالک مورد نظر را بسته و سپس اقدام به ویرایش مالک نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/NewVer/Parvande/NewMalek',
                    params: {
                        id: SelectedRow.data.fldID,
                        state: 1
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EditPelak() {
        var SelectedHeaderRow = App.NewParvande.queryById('GridPelak').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            var flag = 0;
            for (var i = 1; i < App.SearchParvande.tabBar.tabPanel.items.length; i++) {
                var tabsId = App.SearchParvande.tabBar.tabPanel.items.items[i].id;
                if (Ext.getCmp(tabsId).queryById("fldCarPlaqueID").getValue() == SelectedHeaderRow.data.fldID) {
                    flag = 1;
                }
            }

            if (flag == 1) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا ابتدا پرونده های مرتبط با پلاک مورد نظر را بسته و سپس اقدام به ویرایش پلاک نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                var SelectedRow1 = App.NewParvande.queryById('GridMalek').selModel.getLastSelected();
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/NewVer/Parvande/NewPelak',
                    params: {
                        id: SelectedHeaderRow.data.fldID,
                        Malekid: SelectedRow1.data.fldID,
                        state: 1
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteParvande(state) {
        var SelectedHeaderRow = App.NewParvande.queryById('GridParvande').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            var flag = 0;
            for (var i = 1; i < App.SearchParvande.tabBar.tabPanel.items.length; i++) {
                var tabsId = App.SearchParvande.tabBar.tabPanel.items.items[i].id;
                if (tabsId.substring(14) == SelectedHeaderRow.data.fldID) {
                    flag = 1;
                }
            }
            if (flag == 1) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا ابتدا پرونده  مورد نظر را بسته و سپس حذف نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "هشدار",
                    msg: "آیا برای حذف مطمئن هستید؟",
                    icon: Ext.MessageBox.WARNING,
                    buttons: Ext.MessageBox.YESNO,
                    fn: function (btn) {
                        if (btn == 'yes') {
                            Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                            Ext.net.DirectMethod.request({
                                url: '/NewVer/Parvande/DeleteParvande',
                                params: {
                                    id: SelectedHeaderRow.data.fldID,
                                    state:state
                                },
                                success: function (data) {
                                    var ic = Ext.MessageBox.INFO;
                                    if (data.Err == 1)
                                        ic = Ext.MessageBox.ERROR;
                                    Ext.MessageBox.show({
                                        title: data.MsgTitle,
                                        msg: data.Msg,
                                        icon: ic,
                                        buttons: Ext.MessageBox.OK
                                    });
                                    ReloadGridParvande();
                                    Ext.net.Mask.hide();
                                }
                            });
                        }
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeletePelak() {
        var SelectedHeaderRow = App.NewParvande.queryById('GridPelak').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            var flag = 0;
            for (var i = 1; i < App.SearchParvande.tabBar.tabPanel.items.length; i++) {
                var tabsId = App.SearchParvande.tabBar.tabPanel.items.items[i].id;
                if (Ext.getCmp(tabsId).queryById("fldCarPlaqueID").getValue() == SelectedHeaderRow.data.fldID) {
                    flag = 1;
                }
            }

            if (flag == 1) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا ابتدا پرونده های مرتبط با پلاک مورد نظر را بسته و سپس حذف پلاک نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "هشدار",
                    msg: "آیا برای حذف مطمئن هستید؟",
                    icon: Ext.MessageBox.WARNING,
                    buttons: Ext.MessageBox.YESNO,
                    fn: function (btn) {
                        if (btn == 'yes') {
                            Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                            Ext.net.DirectMethod.request({
                                url: '/NewVer/Parvande/DeletePelak',
                                params: {
                                    id: SelectedHeaderRow.data.fldID
                                },
                                success: function (data) {
                                    var ic = Ext.MessageBox.INFO;
                                    if (data.Err == 1)
                                        ic = Ext.MessageBox.ERROR;
                                    Ext.MessageBox.show({
                                        title: data.MsgTitle,
                                        msg: data.Msg,
                                        icon: ic,
                                        buttons: Ext.MessageBox.OK
                                    });
                                    ReloadGridPelak();
                                    Ext.net.Mask.hide();
                                }
                            });
                        }
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteMalek() {
        var SelectedHeaderRow = App.NewParvande.queryById('GridMalek').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            var flag = 0;
            for (var i = 1; i < App.SearchParvande.tabBar.tabPanel.items.length; i++) {
                var tabsId = App.SearchParvande.tabBar.tabPanel.items.items[i].id;
                if (Ext.getCmp(tabsId).queryById("fldMalekId").getValue() == SelectedHeaderRow.data.fldID) {
                    flag = 1;
                }
            }

            if (flag == 1) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا ابتدا پرونده های مرتبط با پلاک مورد نظر را بسته و سپس اقدام به حذف مالک نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "هشدار",
                    msg: "آیا برای حذف مطمئن هستید؟",
                    icon: Ext.MessageBox.WARNING,
                    buttons: Ext.MessageBox.YESNO,
                    fn: function (btn) {
                        if (btn == 'yes') {
                            Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                            Ext.net.DirectMethod.request({
                                url: '/NewVer/Parvande/DeleteMalek',
                                params: {
                                    id: SelectedHeaderRow.data.fldID
                                },
                                success: function (data) {
                                    var ic = Ext.MessageBox.INFO;
                                    if (data.Err == 1)
                                        ic = Ext.MessageBox.ERROR;
                                    Ext.MessageBox.show({
                                        title: data.MsgTitle,
                                        msg: data.Msg,
                                        icon: ic,
                                        buttons: Ext.MessageBox.OK
                                    });
                                    if (data.Err != 1) {
                                        App.NewParvande.queryById('GridMalek').store.load();
                                    }
                                    Ext.net.Mask.hide();
                                }
                            });
                        }
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function FnNextStep() {
        var SelectedRow = App.NewParvande.queryById('GridParvande').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/NewVer/SelectParvande',
                params: {
                    containerId: "SearchParvande",
                    CarId: SelectedRow.data.fldCarID,
                    CarFileId: SelectedRow.data.fldID
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک پرونده را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function HelpPersonal() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NewVer/Parvande/HelpPersonal',
            params: {

            },
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }

    function HelpPelak() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NewVer/Parvande/HelpPelak',
            params: {

            },
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }

    function HelpParvandeC() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NewVer/Parvande/HelpParvandeC',
            params: {

            },
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
</script>