@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}


@(Html.X().Panel().Border(false)//.Modal(true)
        //.Listeners(l => l.AfterRender.Handler = "FormLoadYear()")
        //.Width(500)//.Height(300)
    .Title("")
                     .ID("FromYear" + (string)ViewBag.stateFY)
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
                        X.TabPanel().Border(false).ID("FromYearTab" + (string)ViewBag.stateFY)
                .Items(

                        X.Panel().Border(false).Title("").ID("InnerTab" + (string)ViewBag.stateFY)
                    .ButtonAlign(Ext.Net.Alignment.Center)
                .DefaultButton("btn")
            .TitleAlign(Ext.Net.TitleAlign.Center)
                   .Buttons(X.Button().Text("چاپ").Icon(Ext.Net.Icon.Printer).Margin(10)
                               .Listeners(l =>
                               {
                                   l.Click.Handler = "PrintFYear()";

                               })
                               .ItemID("btnSave")
                                ,
                                X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                            .OnClientClick("Ext.getCmp('FromYear" + (string)ViewBag.stateFY + "').destroy()"))
                .Items(

                X.FieldSet().Border(false)
                .Center()
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                .Defaults(new { Margin = 2 })
                .Items(
                    X.Label("سال:"),
                    X.ComboBox()
                    .ItemID("cboYear")
                    .Editable(false)
                    .TypeAhead(true)
                    .QueryMode(DataLoadMode.Local)
                    .ForceSelection(true)
                    .TriggerAction(TriggerAction.All)
                    .DisplayField("fldName")
                    .ValueField("fldID")
                    .EmptyText("سال...")
                    .Width(140)
                        .Store(X.Store()//.AutoLoad(false)
                            .Listeners(l => l.Load.Handler = "FormLoadYear()")
                        .Model(X.Model()
                        .IDProperty("fldID")
                            .Fields(
                                new ModelField("fldID", ModelFieldType.String) { Mapping = "fldID" },
                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                            )
                        )
                            .Proxy(X.AjaxProxy()
                            .Url(Url.Action("GetYear"))
                            .Reader(X.JsonReader().Root("data"))
                            ))
                                
                ).ColSpan(3)

                       )
                            .Layout(Ext.Net.LayoutType.VBox)
                            .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                    )

                )
)


<script type="text/javascript">
    var stateFY = '@ViewBag.stateFY';
    function FormLoadYear() {
        if (stateFY == "1") {
            Ext.getCmp("FromYear" + '@ViewBag.stateFY').setTitle("گزارش تفکیکی درآمد");
            Ext.getCmp("InnerTab" + '@ViewBag.stateFY').setTitle("گزارش تفکیکی درآمد");
        }
        else if (stateFY == "2") {
            Ext.getCmp("FromYear" + '@ViewBag.stateFY').setTitle("گزارش تعداد فیش");
            Ext.getCmp("InnerTab" + '@ViewBag.stateFY').setTitle("گزارش تعداد فیش");
        }
        else if (stateFY == "3") {
            Ext.getCmp("FromYear" + '@ViewBag.stateFY').setTitle("گزارش تفریغ بودجه");
            Ext.getCmp("InnerTab" + '@ViewBag.stateFY').setTitle("گزارش تفریغ بودجه");
        }
        else if (stateFY == "4") {
            Ext.getCmp("FromYear" + '@ViewBag.stateFY').setTitle("گزارش درآمد سالیانه");
            Ext.getCmp("InnerTab" + '@ViewBag.stateFY').setTitle("گزارش درآمد سالیانه");
        }
        else if (stateFY == "5") {
            Ext.getCmp("FromYear" + '@ViewBag.stateFY').setTitle("گزارش فیش های صادر شده به تفکیک ماه");
            Ext.getCmp("InnerTab" + '@ViewBag.stateFY').setTitle("گزارش فیش های صادر شده به تفکیک ماه");
        }
        else if (stateFY == "6") {
            Ext.getCmp("FromYear" + '@ViewBag.stateFY').setTitle("گزارش فیش های صادر شده به تفکیک توابع");
            Ext.getCmp("InnerTab" + '@ViewBag.stateFY').setTitle("گزارش فیش های صادر شده به تفکیک توابع");
        }
        else if (stateFY == "7") {
            Ext.getCmp("FromYear" + '@ViewBag.stateFY').setTitle("گزارش فیش های صادر شده به تفکیک توابع و ماه");
            Ext.getCmp("InnerTab" + '@ViewBag.stateFY').setTitle("گزارش فیش های صادر شده به تفکیک توابع و ماه");
        }
        Ext.getCmp("FromYear" + '@ViewBag.stateFY').queryById('cboYear').setValue('@ViewBag.salFY');
    }
    function showBargozary() {
        Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال بارگذاری...',
            width: 300,
            wait: true,
            waitConfig:
            {
                /*duration: 10000,*/
                interval: 200,
                /*increment: 15,*/
                text: 'در حال بارگذاری...',
                scope: this
                /*fn: function () {
                    Ext.MessageBox.hide();
                    Ext.Msg.alert('Status', 'Saved successfully!');
                }*/
            }
        });
    }

    function PrintFYear() {
        var fromID = App.MgrReportTab.activeTab.id;
        var cboYear = Ext.getCmp(fromID).queryById('cboYear');
        var er = false;
        if (cboYear.validate() == false) {
            er = true;
        }
        if (er == true)
            return;

        if (App.MgrReportTab.activeTab.id.substring(8) == "1") {
            showBargozary();
            Ext.net.DirectMethod.request({
                url: '/NewVer/MgrReport_New/PrintTafkikDaramad',
                params: {
                    containerId: "FromYearTab" + App.MgrReportTab.activeTab.id.substring(8),
                    Year: cboYear.getValue()
                },
                success: function () {
                    Ext.MessageBox.hide();
                }
            });
        }
        else if (App.MgrReportTab.activeTab.id.substring(8) == "2") {
            showBargozary();
            Ext.net.DirectMethod.request({
                url: '/NewVer/MgrReport_New/PrintCountFish',
                params: {
                    containerId: "FromYearTab" + App.MgrReportTab.activeTab.id.substring(8),
                    Year: cboYear.getValue()
                },
                success: function () {
                    Ext.MessageBox.hide();
                }
            });
        }
        else if (App.MgrReportTab.activeTab.id.substring(8) == "3") {
            showBargozary();
            Ext.net.DirectMethod.request({
                url: '/NewVer/MgrReport_New/PrintYearBudget_Tafriq',
                params: {
                    containerId: "FromYearTab" + App.MgrReportTab.activeTab.id.substring(8),
                    Year: cboYear.getValue()
                },
                success: function () {
                    Ext.MessageBox.hide();
                }
            });
        }
        else if (App.MgrReportTab.activeTab.id.substring(8) == "4") {
            showBargozary();
            Ext.net.DirectMethod.request({
                url: '/NewVer/MgrReport_New/PrintMounthlyTipCollection',
                params: {
                    containerId: "FromYearTab" + App.MgrReportTab.activeTab.id.substring(8),
                    Year: cboYear.getValue()
                },
                success: function () {
                    Ext.MessageBox.hide();
                }
            });
        }
        else if (App.MgrReportTab.activeTab.id.substring(8) == "5") {
            showBargozary();
            Ext.net.DirectMethod.request({
                url: '/NewVer/MgrReport_New/PrintFishWithMonth',
                params: {
                    containerId: "FromYearTab" + App.MgrReportTab.activeTab.id.substring(8),
                    Year: cboYear.getValue()
                },
                success: function () {
                    Ext.MessageBox.hide();
                }
            });
        }
        else if (App.MgrReportTab.activeTab.id.substring(8) == "6") {
            showBargozary();
            Ext.net.DirectMethod.request({
                url: '/NewVer/MgrReport_New/PrintFishWithTavabe',
                params: {
                    containerId: "FromYearTab" + App.MgrReportTab.activeTab.id.substring(8),
                    Year: cboYear.getValue()
                },
                success: function () {
                    Ext.MessageBox.hide();
                }
            });
        }
        else if (App.MgrReportTab.activeTab.id.substring(8) == "7") {
            showBargozary();
            Ext.net.DirectMethod.request({
                url: '/NewVer/MgrReport_New/PrintFishWithTavabe_Month',
                params: {
                    containerId: "FromYearTab" + App.MgrReportTab.activeTab.id.substring(8),
                    Year: cboYear.getValue()
                },
                success: function () {
                    Ext.MessageBox.hide();
                }
            });
        }


    }
</script>