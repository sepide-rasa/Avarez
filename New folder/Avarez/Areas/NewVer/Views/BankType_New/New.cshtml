@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}


@(Html.X().Window()
    .Modal(true)
    .Listeners(li => li.AfterRender.Handler = "LoadBankType();")
    .Resizable(false)
    .Width(290)
  //  .Height(185)
    .Title("تعریف نوع بانک")
   // .Layout(LayoutType.Fit)
    .ID("NewBankType")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
            //.ToolTip("کلید میانبر F8")
            .Listeners(l => l.Click.Handler = "SaveBankType();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .ToolTip("کلید میانبر Esc")
            .OnClientClick("App.NewBankType.destroy();"))
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .Border(false)
            //.Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .PaddingSpec("15px 0 0 0")
                        .Layout(LayoutType.VBox)
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.FieldSet()
                            .Border(true).Height(115)
                            .Title("انواع بانک")
                            .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig {Columns=2 })
                            .Items(
                                X.Hidden()
                                    .ItemID("fldId"),
                                X.Label("نوع بانک:"),
                                X.TextField()
                                    .ItemID("txtBankType")
                                    .Width(180)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نوع بانک را وارد نمایید.")
                                    .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("توضیحات:"),
                                X.TextArea()
                                    .ItemID("txtDesc")
                                    .Width(180)
                            )
                )
            )
        )
)

<script type="text/javascript">
    function LoadBankType() {
        if ('@ViewBag.Id' != '0') {
            App.NewBankType.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/BankType_New/Details',
                params: {
                    Id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    else {
                        var txtBankType = App.NewBankType.queryById('txtBankType');
                        txtBankType.setValue(data.fldType);
                        var txtDesc = App.NewBankType.queryById('txtDesc');
                        txtDesc.setValue(data.fldDesc);
                        var Id = App.NewBankType.queryById('fldId');
                        Id.setValue(data.fldId);
                    }
                    App.NewBankType.body.mask().hide();
                }
            });
        }
        else {
            App.NewBankType.queryById('txtBankType').validate();
        }
    }

    function SaveBankType() {
        var txtBankType = App.NewBankType.queryById('txtBankType');
        var Id = App.NewBankType.queryById('fldId');
        var txtDesc = App.NewBankType.queryById('txtDesc');

        var er = false;

        if (txtBankType.validate() == false) {
            er = true;
        }
        if (txtBankType.getValue() == " ")
        {
            Ext.MessageBox.show({
                title:"خطا",
                msg: "لطفا نوع بانک را وارد نمائید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            er = true;
        }
        if (er == true)
            return;
        App.NewBankType.body.mask("در حال ذخیره سازی...");
        Ext.net.DirectMethod.request({
            url: '/NewVer/BankType_New/Save',
            params: {
                fldID: Id.getValue(),
                fldType: txtBankType.getValue(),
                fldDesc: txtDesc.getValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.BankType.queryById('GridBankType').store.load();
                if (data.Er == 0) {
                    ClearBankType();
                }
                App.NewBankType.body.mask().hide();
            }
        });
    }

    function ClearBankType() {
        App.NewBankType.queryById('txtDesc').setValue("");
        App.NewBankType.queryById('txtBankType').setValue("");
        App.NewBankType.queryById('fldId').setValue(0);
    }

   /* function EnterNext() {
        var keyfield = App.NewBankType.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }
    */
</script>