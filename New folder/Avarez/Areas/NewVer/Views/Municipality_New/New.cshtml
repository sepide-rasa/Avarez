@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
        // .Listeners(li => li.AfterRender.Handler = "LoadMunicipality();")
    .Resizable(false)
    .Width(750)
          .Height(475)
        .Title("تعریف شهرداری")
    .Layout(LayoutType.Fit)
        .ID("NewMunicipality")
    .Closable(true)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                .Listeners(l => l.Click.Handler = "SaveMunicipality();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
                .OnClientClick("App.NewMunicipality.destroy();"))
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .Border(false)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .PaddingSpec("15px 0 0 0")
                        .Layout(LayoutType.VBox)
                        .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.FieldSet()
                            .Border(true)
                            .Title("مشخصات شهرداری")
                            .Height(238)
                            .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 4 })
                            .Items(
                                X.Hidden()
                                    .ItemID("fldId"),
                            X.Label("استان:"),
                                     X.ComboBox()
                                        .ItemID("CboState")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                        .DisplayField("Name")
                                        .ValueField("ID")
                                    .EmptyText("استان...")
                                    .Width(180)
                                    .Listeners(ls =>
                                                    ls.Select.Handler = " App.NewMunicipality.queryById('CboCounty').getStore().load();"
                                                            )
                                    //.ValueNotFoundText("استان...")
                                            .Store(X.Store()//.AutoLoad(false)
                                        .Model(X.Model()
                                                    .IDProperty("fldStateId")
                                            .Fields(
                                                        new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                                        new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetState"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                                .Listeners(li => li.Load.Handler = "LoadMunicipality();")
                                )
                                        .AllowBlank(false).MsgTarget(Ext.Net.MessageTarget.Side)
                                    .BlankText("لطفا استان را انتخاب نمایید."),
                            X.Label("شهرستان:"),
                                    X.ComboBox()
                                        .ItemID("CboCounty")
                                    .EmptyText("شهرستان...")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .TypeAhead(true)
                                    .Editable(false)
                                    .AllowBlank(false)
                                         .MsgTarget(Ext.Net.MessageTarget.Side)
                                    .BlankText("لطفا شهرستان مورد نظر را انتخاب نمایید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .Width(180)
                                        .Listeners(ls =>
                                                        ls.Select.Handler = " App.NewMunicipality.queryById('CboZone').getStore().load();"
                                                                )
                                    .TriggerAction(TriggerAction.All)
                                        .DisplayField("Name")
                                        .ValueField("ID")
                                                .Store(X.Store().AutoLoad(false)
                                        .Model(X.Model()
                                                .IDProperty("fldCountyId")
                                            .Fields(
                                                                 new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                                )
                                        .Proxy(X.AjaxProxy()
                                                        .Url(Url.Action("GetCascadeCounty"))
                                            .Reader(X.JsonReader().Root("data")))
                                                                    .Parameters(ps => ps.Add(new StoreParameter("ID", "App.NewMunicipality.queryById('CboState').getValue()", ParameterMode.Raw)))
                                                        ),
                                X.Label("بخش:"),
                                X.ComboBox()
                                    .ItemID("CboZone")
                                .EmptyText("بخش...")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                .TypeAhead(true)
                                .Editable(false)
                                .AllowBlank(false)
                                     .MsgTarget(Ext.Net.MessageTarget.Side)
                                .BlankText("لطفا بخش مورد نظر را انتخاب نمایید.")
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .Width(180)
                                    .Listeners(ls =>
                                                                ls.Select.Handler = " App.NewMunicipality.queryById('CboCity').getStore().load();"
                                                                    )
                                .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                            .Store(X.Store().AutoLoad(false)
                                    .Model(X.Model()
                                                .IDProperty("fldZoneId")
                                        .Fields(
                                                                new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                            new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                            )
                                    .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetCascadeZone"))
                                        .Reader(X.JsonReader().Root("data")))
                                                     .Parameters(ps => ps.Add(new StoreParameter("ID", "App.NewMunicipality.queryById('CboCounty').getValue()", ParameterMode.Raw)))
                                        ),
                                X.Label("شهر:"),
                                X.ComboBox()
                                .ItemID("CboCity")
                                .EmptyText("شهر...")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                .TypeAhead(true)
                                .Editable(false)
                                .AllowBlank(false)
                                     .MsgTarget(Ext.Net.MessageTarget.Side)
                                .BlankText("لطفا شهر مورد نظر را انتخاب نمایید.")
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .Width(180)
                                .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                            .Store(X.Store().AutoLoad(false)
                                    .Model(X.Model()
                                                .IDProperty("fldCityId")
                                        .Fields(
                                                                new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                            new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                            )
                                    .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetCascadeCity"))
                                        .Reader(X.JsonReader().Root("data")))
                                                .Parameters(ps => ps.Add(new StoreParameter("ID", "App.NewMunicipality.queryById('CboZone').getValue()", ParameterMode.Raw)))
                                                    ),
                                X.Label("شهرداری:"),
                                X.TextField()
                                    .ItemID("txtName")
                                    .Width(180)
                                    .AllowBlank(false)
                                    .EnforceMaxLength(true)
                                    .MaxLength(50)
                                    .BlankText("لطفا نام شهرداری را وارد نمایید.")
                                    .MsgTarget(Ext.Net.MessageTarget.Side),
                                 X.Label("کد انفورماتیک:"),
                                X.TextField()
                                    .ItemID("txtInformaticesCode")
                                    .Width(180)
                                    .AllowBlank(false)
                                    .MaskRe("[0-9]")
                                    .EnforceMaxLength(true)
                                    .MaxLength(3)
                                    .BlankText("لطفا کد انفورماتیک را وارد نمایید.")
                                    .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("کد خدمت:"),
                                X.ComboBox()
                                    .EmptyText("کد خدمت...")
                                    .ItemID("CboServiceCode")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .Width(180)
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .SelectedItems(new { Value = "6" })
                                    .Items(
                                        new ListItem("6", "6"),
                                        new ListItem("7", "7")
                                            ),
        /*  X.Label("توضیحات:"),
          X.TextArea()
              .ItemID("txtDesc")
              .Width(423)
              .ColSpan(3)*/
                               X.Label("نام کاربری وب سرویس عوارض:"),
                                X.TextField()
                                    .ItemID("txtUserWeb")
                                    .Width(180)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نام کاربری را وارد نمایید.")
                                    .MsgTarget(Ext.Net.MessageTarget.Side),
                                X.Label("رمزعبور وب سرویس عوارض:"),
                                X.TextField()
                                    .ItemID("txtPassWeb")
                                    .Width(180)
                                    .AllowBlank(false)
                                    .BlankText("لطفا رمزعبور را وارد نمایید.")
                                    .MsgTarget(Ext.Net.MessageTarget.Side),
                                        X.Label("نام کاربری سمیع:"),
                                    X.TextField()
                                        .ItemID("txtSamieUser")
                                        .Width(180)
                                        .AllowBlank(false)
                                        .BlankText("لطفا نام کاربری را وارد نمایید.")
                                        .MsgTarget(Ext.Net.MessageTarget.Side),
                                    X.Label("رمزعبور سمیع:"),
                                    X.TextField()
                                        .ItemID("txtSamiePass")
                                        .Width(180)
                                        .AllowBlank(false)
                                        .BlankText("لطفا رمزعبور را وارد نمایید.")
                                        .MsgTarget(Ext.Net.MessageTarget.Side),
                                            X.Label("شناسه سمیع:"),
                                        X.TextField()
                                            .ItemID("txtSamieGUID")
                                            .Width(180)
                                            .AllowBlank(false)
                                                .BlankText("لطفا شناسه را وارد نمایید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side),
                                    X.Label("توضیحات:"),
                                    X.TextArea().ItemID("txtDesc").Width(180)

                            )
                            ,
                        X.FieldSet()
                            .Border(true)
                            .Height(150)
                            .Title("انتخاب آرم شهرداری(حداکثر حجم مجاز: 25KB)")
                            .Layout(LayoutType.HBox)
                            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle })
        /*.LayoutConfig(new TableLayoutConfig { Columns=3})*/
                            .Width(690)
        //.Defaults(new { Margin = 2 })
                            .Items(
                                X.FileUploadField()
                                    .ID("FileUploadField1")
                                    .MarginSpec("0 10px 0 0")
                                    .Icon(Ext.Net.Icon.DiskUpload)
                                    .ButtonOnly(true)
                                    .ButtonText("انتخاب فایل")
                                    .DirectEvents(l =>
                                    {
                                        l.Change.Action = "Upload";
                                        l.Change.Success = "hideprogressMun();";
                                    })
                                    .Listeners(l => l.Change.Fn = "showFile"),
                                X.Container()
                                    .Content(@<div id="fi-button-msg" style="width: 480px; text-align:right;"><b>فایل انتخاب شده:</b></div>),
                                X.Panel()
                                    .Border(false)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align=VBoxAlign.Center})
                                    .Items(
                                        X.Label("پیش نمایش"),                                            
                                        X.Panel()
                                            .Frame(true)
                                            .MarginSpec("3px 0 0 0")
                                            .Layout(LayoutType.Fit)
                                            .Items(
                                        X.Image()
                                            .ItemID("Image")
                                            .Flex(1)
                                            .ImageUrl("/Content/Blank.jpg")
                                            .Width(80)
                                            .Height(80)
                                            //.PaddingSpec("0 0 15px 0")
                                            .Border(true)
                                            .Frame(true)))
                            )
                )
            )
        )
)

@(Html.X().KeyMap()
                 .ID("NewMunicipalityMap")
                 .Target("={App.NewMunicipality.getTargetEl()}")
            .Binding(b =>
            {
                b.Add(Html.X().KeyBinding()
                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                .Handler("SaveMunicipality(); ")
                );

            }))
<script type="text/javascript">
    var MojazMun = 0;
    var sizeeMun = 0;
    var EndUploadMun = false;

    var CheckMun = setInterval(CheckEndMun, 500);

    function CheckEndMun() {
        if (EndUploadMun == true) {
            Ext.net.DirectMethod.request({
                url: '/NewVer/Municipality_New/ShowPic',
                success: function (data) {
                    value = "data:image/gif;base64," + data.image;
                    App.NewMunicipality.queryById('Image').setImageUrl(value);
                }
            });

            Ext.MessageBox.hide();
            Ext.Msg.alert('عملیات موفق', 'فایل با موفقیت آپلود شد.');
            clearInterval(CheckEndMun);
            EndUploadMun = false;
        }
    }
    var showFile = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        var el = Ext.get('fi-button-msg');
        if (v) {
            showProgressBarMun();
            if (v.split('.').pop().toLowerCase() == "jpg" || v.split('.').pop().toLowerCase() == "png") {
                MojazMun = 1;
                if (document.getElementById(id).files[0].size <= 25600) {
                    sizeeMun = 1;
                }
                if (sizeeMun == 1) {
                    el.update('<b>فایل انتخاب شده:</b> ' + v);
                }
                else {
                    el.update('<b>فایل انتخاب شده:</b> ');
                }

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
            else {
                el.update('<b>فایل انتخاب شده:</b> ');
            }
        }
    };

    function hideprogressMun() {
        if (MojazMun == 1 && sizeeMun == 1) {
            EndUploadMun = true;
        }
        MojazMun = 0;
        sizeeMun = 0;
    }

    function showProgressBarMun() {
        Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال آپلود فایل...',
            width: 300,
            wait: true,
            waitConfig:
            {
                interval: 200,
                text: 'در حال آپلود فایل...',
                scope: this
            }
        });
    }
    function LoadMunicipality() {
        if ('@ViewBag.Id' != '0') {
            App.NewMunicipality.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/Municipality_New/Details',
                params: {
                    Id: '@ViewBag.Id'
                },
                success: function (data) {
                    if (data.Er == 0) {
                        var CboState = App.NewMunicipality.queryById('CboState');
                        CboState.setValue(data.fldStateID);
                        App.NewMunicipality.queryById('CboCounty').clearValue(); App.NewMunicipality.queryById('CboCounty').getStore().load();
                        var CboCounty = App.NewMunicipality.queryById('CboCounty');
                        CboCounty.setValue(data.fldCountyID);
                        App.NewMunicipality.queryById('CboZone').clearValue(); App.NewMunicipality.queryById('CboZone').getStore().load();
                        var CboZone = App.NewMunicipality.queryById('CboZone');
                        CboZone.setValue(data.fldZoneID);
                        App.NewMunicipality.queryById('CboCity').clearValue(); App.NewMunicipality.queryById('CboCity').getStore().load();
                        var CboCity = App.NewMunicipality.queryById('CboCity');
                        CboCity.setValue(data.fldCityID);
                        var txtName = App.NewMunicipality.queryById('txtName');
                        txtName.setValue(data.fldName);
                        var txtInformaticesCode = App.NewMunicipality.queryById('txtInformaticesCode');
                        txtInformaticesCode.setValue(data.fldInformaticesCode);
                        var CboServiceCode = App.NewMunicipality.queryById('CboServiceCode');
                        CboServiceCode.setValue(data.fldServiceCode);
                        var txtUserWeb = App.NewMunicipality.queryById('txtUserWeb');
                        txtUserWeb.setValue(data.fldRWUserName);
                        var txtPassWeb = App.NewMunicipality.queryById('txtPassWeb');
                        txtPassWeb.setValue(data.fldRWPass);
                        var txtDesc = App.NewMunicipality.queryById('txtDesc');
                        txtDesc.setValue(data.fldDesc);
                        var txtSamieUser = App.NewMunicipality.queryById('txtSamieUser');
                        txtSamieUser.setValue(data.fldSamieUser);
                        var txtSamiePass = App.NewMunicipality.queryById('txtSamiePass');
                        txtSamiePass.setValue(data.fldSamiePass);
                        var txtSamieGUID = App.NewMunicipality.queryById('txtSamieGUID');
                        txtSamieGUID.setValue(data.fldSamieGUID);
                        var Id = App.NewMunicipality.queryById('fldId');
                        Id.setValue(data.fldID);
                        if (data.fldImage != "") {
                            var fldfile = "data:image/gif;base64," + data.fldImage;
                            App.NewMunicipality.queryById('Image').setImageUrl(fldfile);
                        }
                        else {
                            App.NewMunicipality.queryById('Image').setImageUrl("/Content/Blank.jpg");
                        }
                    }
                    else if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    App.NewMunicipality.body.mask().hide();
                }
            });
        }
        else {
            App.NewMunicipality.queryById('txtName').validate();
            App.NewMunicipality.queryById('CboState').validate();
            App.NewMunicipality.queryById('CboCounty').validate();
            App.NewMunicipality.queryById('CboZone').validate();
            App.NewMunicipality.queryById('CboCity').validate();
            App.NewMunicipality.queryById('txtInformaticesCode').validate();
            App.NewMunicipality.queryById('txtUserWeb').validate();
            App.NewMunicipality.queryById('txtPassWeb').validate();
        }
    }

    function SaveMunicipality() {
        var txtName = App.NewMunicipality.queryById('txtName');
        var CboCounty = App.NewMunicipality.queryById('CboCounty');
        var CboState = App.NewMunicipality.queryById('CboState');
        var CboZone = App.NewMunicipality.queryById('CboZone');
        var CboCity = App.NewMunicipality.queryById('CboCity');
        var txtInformaticesCode = App.NewMunicipality.queryById('txtInformaticesCode');
        var CboServiceCode = App.NewMunicipality.queryById('CboServiceCode');
        var txtUserWeb = App.NewMunicipality.queryById('txtUserWeb');
        var txtPassWeb = App.NewMunicipality.queryById('txtPassWeb');
        var txtDesc = App.NewMunicipality.queryById('txtDesc');
        var Id = App.NewMunicipality.queryById('fldId');
        var txtSamieUser = App.NewMunicipality.queryById('txtSamieUser');
        var txtSamiePass = App.NewMunicipality.queryById('txtSamiePass');
        var txtSamieGUID = App.NewMunicipality.queryById('txtSamieGUID');
            var er = false;
            
            if (txtName.validate() == false) {
                er = true;
            }
            if (CboState.validate() == false) {
                er = true;
            }
            if (CboCounty.validate() == false) {
                er = true;
            }
            if (CboZone.validate() == false) {
                er = true;
            }
            if (CboCity.validate() == false) {
                er = true;
            }
            if (txtInformaticesCode.validate() == false) {
                er = true;
            }
            if (CboServiceCode.validate() == false) {
                er = true;
            }
            if (txtUserWeb.validate() == false) {
                er = true;
            }
            if (txtPassWeb.validate() == false) {
                er = true;
            }
            if (er == true)
                return;

            App.NewMunicipality.body.mask("در حال ذخیره سازی...");
            Ext.net.DirectMethod.request({
                url: '/NewVer/Municipality_New/Save',
                params: {
                    fldID: Id.getValue(),
                    fldName: txtName.getValue(),
                    fldCityID: CboCity.getValue(),
                    fldInformaticesCode: txtInformaticesCode.getValue(),
                    fldServiceCode: CboServiceCode.getValue(),
                    fldRWUserName:txtUserWeb.getValue(),
                    fldRWPass: txtPassWeb.getValue(),
                    fldDesc: txtDesc.getValue(),
                    fldSamieUser: txtSamieUser.getValue(),
                    fldSamiePass: txtSamiePass.getValue(),
                    fldSamieGUID: txtSamieGUID.getValue()
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Er == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.Municipality.queryById('GridMunicipality').store.load();
                    if (data.Er != 1)
                        ClearMunicipality();
                    App.NewMunicipality.body.mask().hide();
                }

            });
        }
    function ClearMunicipality() {
        App.NewMunicipality.queryById('txtName').setValue("");
        App.NewMunicipality.queryById('CboCounty').setValue("");
        App.NewMunicipality.queryById('CboState').setValue("");
        App.NewMunicipality.queryById('CboZone').setValue("");
        App.NewMunicipality.queryById('CboCity').setValue("");
        App.NewMunicipality.queryById('txtInformaticesCode').setValue("");
        App.NewMunicipality.queryById('txtDesc').setValue("");
        App.NewMunicipality.queryById('txtUserWeb').setValue("");
        App.NewMunicipality.queryById('txtPassWeb').setValue("");
        App.NewMunicipality.queryById('fldId').setValue(0);
        App.NewMunicipality.queryById('Image').setImageUrl("/Content/Blank.jpg");
        Ext.get('fi-button-msg').update('<b>فایل انتخاب شده:</b> ');
    }
   /* function EnterNext() {
        var keyfield = App.NewCustomer.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }*/

</script>