@model IEnumerable<Avarez.Models.sp_AccostTypeSelect>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}

@(X.Panel()
        //.Listeners(li => li.AfterRender.Handler = "AccostTypeMap();")
            .ID("AccostType")
    .Title("نوع مخاطب")
    .Closable(true)
    .Border(false)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(Ext.Net.LayoutType.Fit)
    .Items(
        X.Panel()
                    .ItemID("PnlGridAccostType")
            .Border(false)
            .Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .TopBar(
                        Html.X().Toolbar()
                            .Items(
                                X.Button()
                                    .Text("جدید")
                                    .Icon(Ext.Net.Icon.Add)
        //.ToolTip("کلید میانبر F8")
                                            .Listeners(li => li.Click.Handler = "NewAccostType();"),
                                X.Button()
                                    .Text("ویرایش")
                                    .Icon(Ext.Net.Icon.Pencil)
        //.ToolTip("کلید میانبر F2")
                                            .Listeners(Li => Li.Click.Handler = "EditAccostType();"),
                                X.Button()
                                    .Text("حذف")
                                    .Icon(Ext.Net.Icon.Delete)
        //.ToolTip("کلید میانبر F9")
                                            .Listeners(de => de.Click.Handler = "DeleteAccostType();")
                                                 , X.Button()
                                    .Text("راهنما")
                                    .Icon(Ext.Net.Icon.Help)
                                            .Listeners(de => de.Click.Handler = "HelpAccostType();")
                                    )
                                    )
                            .ItemID("GridAccostType")
                    .BottomBar(X.PagingToolbar())
                    .Store(
                        Html.X().StoreForModel()
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
        )
                    .PageSize(20)
                    .RemoteFilter(true)
                    .RemotePaging(true)
                                    .Listeners(l => l.DataChanged.Handler = "App.AccostType.queryById('GridAccostType').selModel.refresh();")
    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                    Html.X().RowNumbererColumn(),
                        Html.X().Column().DataIndex(Model, m => m.fldID).Text("کد").Hidden(true).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldName).Text("نوع مخاطب").Wrap(true).Flex(3),
                        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(6)
    )
                .SelectionModel(
                    Html.X().RowSelectionModel()
                        .Mode(Ext.Net.SelectionMode.Single)
    )

))
)

<script type="text/javascript">

    function AccostTypeMap() {
        var k = new Ext.KeyMap(
            document,
            [{
                target: Ext.get('AccostType'),
                scope: this,
                key: [119],
                fn: function (key, event) {
                    if (App.Customer && App.NewCustomer) {
                        if (App.NewCustomer.active == false)
                            NewAccostType();
                    }
                    else if (App.Customer && !App.NewCustomer)
                        NewAccostType();
                }
            },
            {
                target: App.Customer.getTargetEl(),
                scope: this,
                key: [113],
                fn: function (key, event) {
                    if (App.Customer && App.NewCustomer) {
                        if (App.NewCustomer.active == false)
                            EditAccostType();
                    }
                    else if (App.Customer && !App.NewCustomer)
                        EditAccostType();
                }
            },
            {
                target: App.Customer.getTargetEl(),
                scope: this,
                key: [120],
                fn: function (key, event) {
                    if (App.Customer && App.NewCustomer) {
                        if (App.NewCustomer.active == false)
                            DeleteAccostType();
                    }
                    else if (App.Customer && !App.NewCustomer)
                        DeleteAccostType();
                }
            }]
            )
    }

    function NewAccostType() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NewVer/AccostType_New/New',
            params: {
                Id: 0
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function EditAccostType() {
        var SelectedRow = App.AccostType.queryById('GridAccostType').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/NewVer/AccostType_New/New',
                params: {
                    Id: SelectedRow.data.fldID,
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteAccostType() {
        var SelectedRow = App.AccostType.queryById('GridAccostType').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                        Ext.net.DirectMethod.request({
                            url: '/NewVer/AccostType_New/Delete',
                            params: {
                                Id: SelectedRow.data.fldID
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                Ext.net.Mask.hide();
                                App.AccostType.queryById('GridAccostType').store.load();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function HelpAccostType() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NewVer/AccostType_New/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
</script>