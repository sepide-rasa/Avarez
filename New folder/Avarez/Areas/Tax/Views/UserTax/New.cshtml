@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using Ext.Net.Utilities;
@{
    var X = Html.X();
}
<style>
    #fi-button-msg {
        border: 2px solid #ccc;
        padding: 5px 10px;
        background: #eee;
        margin: 5px;
        float: left;
    }
</style>

@(Html.X().Window()
    .Modal(true)
        //.Listeners(li => li.AfterRender.Handler = "LoadUser();")
    .Width(560)//.Height(300)
        .Title("کاربر جدید")
                .ID("NewUser")
    .Resizable(false)
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .ButtonAlign(Alignment.Center)
    .Layout(LayoutType.Fit)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
            .Listeners(l =>
            {
                l.Click.Handler = "SaveUser();";
            })
            .ItemID("btnSave"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.BulletCross)
            .ToolTip("کلید میانبر Esc")
                    .OnClientClick("App.NewUser.destroy()"))
    .Items(
        X.FormPanel()
            .MarginSpec("10px 0 10px 0")
            .Border(false)
            .Layout(Ext.Net.LayoutType.VBox)
            .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
            .Items(
                    X.Hidden().ItemID("fldId"),
                    X.Hidden().ItemID("ShakhsId"),

                X.FieldSet()
                    .Border(true)
                    .Title("شخص")
                    .ItemID("test")
                    //.Height(115)
                    .Width(530)
                    .Center()
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                    .Defaults(new { Margin = 2 })
                    .Items(
                     X.Label("نوع شخص:"),
                                X.ComboBox()
                                    .ItemID("CboUserType")
                                    .Width(200)
                                    .EmptyText("نوع شخص...")
                                    .AllowBlank(false)
                                    .BlankText("لطفا نوع شخص را انتخاب نمایید.")
                                    .TypeAhead(true)
                                    .Editable(false)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldName")
                                    .ValueField("ID")
                                    //.Listeners(l => l.Change.Handler = "ShowHideTXT()")
                                    .Store(
                                        X.Store()
                                                .Listeners(l => l.Load.Handler = "setDefaultUserType();LoadUser();")
                                            .Model(X.Model()
                                            .IDProperty("ID")
                                            .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                            )
        //.Listeners(l => l.BeforeLoad.Handler = "App.NewContact.queryById('CboContactType').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.NewContact.queryById('antiForgeryToken').getValue());")
                                            .Proxy(X.AjaxProxy()
        //.ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                                                .Url(Url.Action("GetUserType"))
                                                .Reader(X.JsonReader().Root("data"))
                                            )
                                        )
                                .Width(160)
                                ,
                                X.Label("وضعیت:"), 
                                      X.ComboBox()
                                        .ItemID("CboStatus")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                    .EmptyText("وضعیت...")
                                    .Width(160)
                                    .Items(
                                                new ListItem("فعال", "1"),
                                                new ListItem("غیر فعال", "0")
                                    )
                                            .SelectedItems(new { Value = "1" })
                                    //.AllowBlank(false)
                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                    ,
                         X.Label("نام:")
                            , X.TextField().ColSpan(3)
                                .ReadOnly(true)
                            .ItemID("txtName")
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                            .AllowBlank(false)
                            .BlankText("لطفا نام را وارد کنید.")
                            .Focus(true)
                            .Width(390)
                                .Icon(Icon.UserAdd)
                                    .Listeners(l =>
                                    {
                                        l.SpecialKey.Handler = "searchShakhs(e.getKey())";
                                        l.IconClick.Handler = "searchShakhs(45)";
                                       // l.AfterRender.Handler = "App.NewContract_Project.queryById('txtVagon').icon.dom.classList.add('custom-icon');";
                                    })
                            , X.Label("کد/شناسه ملی:")
                        , X.TextField()
                            .ItemID("txtCodeMeli")
                            .ReadOnly(true)
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                .Width(160)
                                , X.Label("نام کاربری:")
                            , X.TextField()
                                .ItemID("txtUserName")
                                .AllowBlank(false)
                                .BlankText("لطفا نام کاربری را وارد کنید.")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .Width(160)
                             
        //, X.Label("توضیحات:")
        //, X.TextArea()
        //    .ItemID("txtDesc")
        //    .LabelAlign(Ext.Net.LabelAlign.Top)
        //    .Width(160)
                )

            )
        )
)

<script type="text/javascript">
    var UserId = 0;
    var ImageId = 0;
    function setDefaultUserType() {
        if ('@ViewBag.Id' == '0') {
            App.NewUser.queryById("CboUserType").setValue(App.NewUser.queryById("CboUserType").store.getAt(0));
        }
    }
    function searchShakhs(Code) {
        var CboUserType = App.NewUser.queryById('CboUserType');
        if (Code == 45) {
            App.NewUser.body.mask("در حال بارگذاری");
            Ext.net.DirectMethod.request({
                url: '/Tax/SearchShakhs/Index',
                params: {
                    State: 1,
                    UserType:CboUserType.getValue()
                },
                success: function () {
                    App.NewUser.body.mask().hide();
                }
            });
        }
    }

    function LoadUser() {
        if ('@ViewBag.Id' != '0') {
            /*Edit*/
            Ext.net.DirectMethod.request({
                url: '/Tax/UserTax/Details',
                params: {
                    id: '@ViewBag.Id'
                },
                success: function (data) {
                    var ShakhsId = App.NewUser.queryById('ShakhsId');
                    ShakhsId.setValue(data.fldTarfGharardadId);
                    var CboUserType = App.NewUser.queryById('CboUserType');
                    CboUserType.setValue(data.fldUserType);
                    var CboStatus = App.NewUser.queryById('CboStatus');
                    CboStatus.setValue(data.fldStatus);
                    var txtCodeMeli = App.NewUser.queryById('txtCodeMeli');
                    txtCodeMeli.setValue(data.fldMelliCode);
                    var txtName = App.NewUser.queryById('txtName');
                    txtName.setValue(data.fldName);
                    var txtUserName = App.NewUser.queryById('txtUserName');
                    txtUserName.setValue(data.fldUserName);
                  /*  var txtDesc = App.NewUser.queryById('txtDesc');
                    txtDesc.setValue(data.fldDesc);*/
                    var Id = App.NewUser.queryById('fldId');
                    Id.setValue(data.fldId);
                }
            });
        }
    }

    function SaveUser() {
        var ShakhsId = App.NewUser.queryById('ShakhsId');
        var CboUserType = App.NewUser.queryById('CboUserType');
        var CboStatus = App.NewUser.queryById('CboStatus');
        var txtCodeMeli = App.NewUser.queryById('txtCodeMeli');
        var txtName = App.NewUser.queryById('txtName');
        var txtUserName = App.NewUser.queryById('txtUserName');
        /*var txtDesc = App.NewUser.queryById('txtDesc');*/
        var Id = App.NewUser.queryById('fldId');

        var er = false;

        var Meli = "";
        if (txtName.validate() == false) {
            er = true;
        }
        if (txtUserName.validate() == false) {
            er = true;
        }


            if (er == true)
                return;


            var st = false;
            if (CboStatus.getValue() == "1")
                st = true;

            var data = {
                fldId: Id.getValue(),
                fldTarfGharardadId: ShakhsId.getValue(),
                fldStatus:st,
                fldUserName: txtUserName.getValue(),
                fldDesc:""
            };

            $.ajax({
                type: "POST",
                url: '/Tax/UserTax/Save',
                datatype: "json",
                data: JSON.stringify(data),
                contentType: 'application/json',
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Er == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.UserTab.queryById('Grid').store.load();
                    if (Er == 0)
                        ClearUser();
                },
                failure: function (data) {
                    alert(data.data);
                }
            });
    }
    //txtName   txtFamily  txtNationalCode   txtShenase  txtCodeEghtesadi  txtCodePosti  txtCodeShobe
    function ClearUser() {
        App.NewUser.queryById('txtName').setValue("");
        App.NewUser.queryById('txtFamily').setValue("");
        App.NewUser.queryById('txtNationalCode').setValue("");
        App.NewUser.queryById('txtShenase').setValue("");
        App.NewUser.queryById('txtCodeEghtesadi').setValue("");
        App.NewUser.queryById('txtCodePosti').setValue("");
        App.NewUser.queryById('txtCodeShobe').setValue("");
       /* App.NewUser.queryById('txtDesc').setValue("");*/
        App.NewUser.queryById('fldId').setValue(0);

    }

    function EnterNext() {
        var keyfield = App.UserTab.activeTab.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }
</script>