@model IEnumerable<Avarez.Areas.Tax.Models.prs_tblShakhsHaghighi_HoghoghiSelect>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}


@(X.Window().Maximized(true)
        .ID("Shakhs")
            .AutoScroll(true)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true).Layout(Ext.Net.LayoutType.Table)
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                .Items(
                    X.TabPanel().ID("ShakhsTab")
                    .AutoScroll(true).Height(630).Items(
                    X.Panel().ItemID("GridPanel")
                        .Title(" اشخاص")
                        .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button().Text("جدید").Icon(Ext.Net.Icon.UserAdd)//.ToolTip("کلید میانبر F8")
                                    .Listeners(li => li.Click.Handler = "NewShakhs();"),
                            X.Button().Text("ویرایش").Icon(Ext.Net.Icon.UserEdit)//.ToolTip("کلید میانبر F2")
                                    .Listeners(Li => Li.Click.Handler = "EditShakhs();"),
        //X.Button().Text("حذف").Icon(Ext.Net.Icon.UserDelete)//.ToolTip("کلید میانبر F9")
        //    .Listeners(de =>
        //    {
        //        de.Click.Handler = "if (App.Shakhs.queryById('Grid').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteShakhs();";
        //    })
        //       .Hidden(!VacationTaxi.Models.Permissions.haveAccess(Convert.ToInt32(Session["UserId"]), 24)),
                             X.Button().Text("طرف قرارداد").Icon(Ext.Net.Icon.Page)
                                .Listeners(Li => Li.Click.Handler = "TarafGharardad();")
        //, X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
        //.Listeners(l => l.Click.Handler = "HelpUser()")
                        )
                    )
                    .ItemID("Grid").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(600)
                    .ColumnWidth(0.6)
                    .Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)

                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )

                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                            Html.X().Column().DataIndex(Model, m => m.fldNameTypeShakhs).Text("نوع شخص").Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldName).Text("نام").Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldFamily).Text("نام خانوادگی").Flex(1),
                                Html.X().Column().DataIndex(Model, m => m.fldNationalCode).Text("کد/شناسه ملی").Flex(1)
                        )

                ))
            )
        )
)

<script type="text/javascript">
    function TarafGharardad() {
        var SelectedRow = App.Shakhs.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Tax/Shakhs/TarafGharardad',
                params: {
                    Id: SelectedRow.data.fldId
                },
                success: function (data) {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EditShakhs() {
        var SelectedRow = App.Shakhs.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Tax/Shakhs/new',
                params: {
                    id: SelectedRow.data.fldId,
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewShakhs() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Tax/Shakhs/New',
            params: {
                id: 0,
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }


    function DeleteShakhs() {
        var SelectedHeaderRow = App.Shakhs.queryById('Grid').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Tax/Shakhs/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId
                            },
                            success: function (data) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.INFO,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.Shakhs.queryById('Grid').store.load()
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function HelpUser() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Tax/Shakhs/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }

</script>