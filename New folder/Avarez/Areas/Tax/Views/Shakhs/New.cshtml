@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using Ext.Net.Utilities;
@{
    var X = Html.X();
}
<style>
    #fi-button-msg {
        border: 2px solid #ccc;
        padding: 5px 10px;
        background: #eee;
        margin: 5px;
        float: left;
    }
</style>

@(Html.X().Window()
    .Modal(true)
                //.Listeners(li => li.AfterRender.Handler = "LoadShakhs();")
    .Width(530)//.Height(300)
        .Title("شخص جدید")
                .ID("NewShakhs")
    .Resizable(false)
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .ButtonAlign(Alignment.Center)
    .Layout(LayoutType.Fit)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
            .Listeners(l =>
            {
                l.Click.Handler = "SaveShakhs();";
            })
            .ItemID("btnSave"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.BulletCross)
            .ToolTip("کلید میانبر Esc")
                    .OnClientClick("App.NewShakhs.destroy()"))
    .Items(
        X.FormPanel()
            .MarginSpec("10px 0 10px 0")
            .Border(false)
            .Layout(Ext.Net.LayoutType.VBox)
            .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
            .Items(
                X.Hidden().ItemID("fldId"),

                X.FieldSet()
                    .Border(true)
                    .Title("شخص")
                    .ItemID("test")
                   // .Height(115)
                    .Width(500)
                    .Center()
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                    .Defaults(new { Margin = 2 })
                    .Items(
                     X.Label("نوع شخص:"),
                                X.ComboBox()
                                    .ItemID("CboShakhsType")
                                    .Width(200)
                                    .EmptyText("نوع شخص...")
                                    .AllowBlank(false)
                                    .BlankText("لطفا نوع شخص را انتخاب نمایید.")
                                    .TypeAhead(true)
                                    .Editable(false)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldName")
                                    .ValueField("ID")
                                    .Listeners(l => l.Change.Handler = "ShowHideTXT()")
                                    .Store(
                                        X.Store()
                                                .Listeners(l => l.Load.Handler = "setDefaultShakhsType();LoadShakhs();")
                                            .Model(X.Model()
                                            .IDProperty("ID")
                                            .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                            )
                                                            //.Listeners(l => l.BeforeLoad.Handler = "App.NewContact.queryById('CboContactType').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.NewContact.queryById('antiForgeryToken').getValue());")
                                            .Proxy(X.AjaxProxy()
                                                //.ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                                                .Url(Url.Action("GetShakhsType"))
                                                .Reader(X.JsonReader().Root("data"))
                                            )
                                        )
                                .Width(160)
                                    ,
                         X.Label("نام:")
                        , X.TextField()
                            .ItemID("txtName")
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                            .AllowBlank(false)
                            .BlankText("لطفا نام را وارد کنید.")
                            .Focus(true)
                            .Width(160)
                            , X.Label("نام خانوادگی:").ItemID("lblFamily")
                        , X.TextField()
                            .ItemID("txtFamily")
                            .AllowBlank(false)
                            .BlankText("لطفا نام خانوادگی را وارد کنید.")
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                            .Width(160)
                             , X.Label("کدملی:").ItemID("lblNationalCode")
                        , X.TextField()
                                .ItemID("txtNationalCode")
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                            .AllowBlank(false)
                                .MaskRe("/[0-9]/")
        //.RTL(false)
                                                .FieldStyle("direction:ltr;")
                                                .BlankText("لطفا کد ملی را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Plugins(X.InputMask()
                                                .Mask("AAAAAAAAAA")
                                                .UnmaskOnBlur(true)
                                                .ClearWhenInvalid(true)
                                                .MaskSymbols(ls =>
                                                {
                                                    ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                })
                                                )
                                .Width(160)
                                ,
                                         X.Label("شناسه ملی: ").ItemID("lblShenase")
                                     , X.TextField()
                                                .ItemID("txtShenase")
                                                .AllowBlank(false)//.RTL(false)
                                                    .FieldStyle("direction:ltr;")
                                                    .MaskRe("/[0-9]/")
                                                .BlankText("لطفا شناسه ملی شرکت را وارد کنید.")
                                                    .Plugins(X.InputMask()
                                                    .Mask("AAAAAAAAAAA")
                                                    .UnmaskOnBlur(true)
                                                    .MaskSymbols(ls =>
                                                        {
                                                            ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                        }))
                                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                    .Width(160)
                                 , X.Label("کد اقتصادی:").ItemID("lblCodeEghtesadi")
                            , X.TextField()
                                        .ItemID("txtCodeEghtesadi")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .AllowBlank(false)
                                     .FieldStyle("direction:ltr;")
        //.RTL(false)
                                                .MaskRe("/[0-9]/")
                                                    .Plugins(X.InputMask()
                                                        .Mask("AAAAAAAAAAAA")
                                                        .UnmaskOnBlur(true)
                                                        .MaskSymbols(ls =>
                                                            {
                                                                ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                            }))
                                .BlankText("لطفا کد اقتصادی را وارد کنید.")
                                    .Width(160)
                             , X.Label("کد پستی:")
                            , X.TextField()
                                        .ItemID("txtCodePosti")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .AllowBlank(false)
                                          .Plugins(X.InputMask()
                                                .Mask("AAAAAAAAAA")
                                                .UnmaskOnBlur(true)
                                                .MaskSymbols(ls =>
                                                    {
                                                        ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                    }))
        //  .RTL(false)
                                                    .FieldStyle("direction:ltr;")
                                .BlankText("لطفا کد پستی را وارد کنید.")
                                    .Width(160)
                             , X.Label("کد شعبه:")
                            , X.TextField()
                                        .ItemID("txtCodeShobe")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .AllowBlank(false)
                                .MaskRe("[0-9]")
                                .EnforceMaxLength(true)
                                .MaxLength(10)
                                .BlankText("لطفا کد شعبه را وارد کنید.")
                                .Width(160)
                        //, X.Label("توضیحات:")
                        //, X.TextArea()
                        //    .ItemID("txtDesc")
                        //    .LabelAlign(Ext.Net.LabelAlign.Top)
                        //    .Width(160)
                )

            )
        )
)

<script type="text/javascript">
    var ShakhsId = 0;
    var ImageId = 0;
    function setDefaultShakhsType() {
        if ('@ViewBag.Id' == '0') {
            App.NewShakhs.queryById("CboShakhsType").setValue(App.NewShakhs.queryById("CboShakhsType").store.getAt(0));
        }
    }
    function ShowHideTXT() {
        var shType = App.NewShakhs.queryById("CboShakhsType").getValue();
        var txtFamily = App.NewShakhs.queryById('txtFamily');
        var lblFamily = App.NewShakhs.queryById('lblFamily');
        var txtNationalCode = App.NewShakhs.queryById('txtNationalCode');
        var lblNationalCode = App.NewShakhs.queryById('lblNationalCode');
        var txtShenase = App.NewShakhs.queryById('txtShenase');
        var lblShenase = App.NewShakhs.queryById('lblShenase');
        var txtCodeEghtesadi = App.NewShakhs.queryById('txtCodeEghtesadi');
        var lblCodeEghtesadi = App.NewShakhs.queryById('lblCodeEghtesadi');
        if (shType == "1") {
            txtShenase.hide();
            lblShenase.hide();
            txtCodeEghtesadi.hide();
            lblCodeEghtesadi.hide();
            txtFamily.show();
            lblFamily.show();
            txtNationalCode.show();
            lblNationalCode.show();
        }
        else if (shType == "2") {
            txtFamily.hide();
            lblFamily.hide();
            txtNationalCode.hide();
            lblNationalCode.hide();
            txtShenase.show();
            lblShenase.show();
            txtCodeEghtesadi.show();
            lblCodeEghtesadi.show();
        }
        else if (shType == "3") {
            txtShenase.hide();
            lblShenase.hide();
            txtCodeEghtesadi.hide();
            lblCodeEghtesadi.hide();
            txtFamily.show();
            lblFamily.show();
            txtNationalCode.show();
            lblNationalCode.show();
        }
        else if (shType == "4") {
            txtShenase.hide();
            lblShenase.hide();
            txtCodeEghtesadi.hide();
            lblCodeEghtesadi.hide();
            txtFamily.hide();
            lblFamily.hide();
            txtNationalCode.hide();
            lblNationalCode.hide();
        }
    }
  
    function LoadShakhs() {
        if ('@ViewBag.Id' != '0') {
            /*Edit*/
            Ext.net.DirectMethod.request({
                url: '/Tax/Shakhs/Details',
                params: {
                    id: '@ViewBag.Id'
                },
                success: function (data) {
                    var CboShakhsType = App.NewShakhs.queryById('CboShakhsType');
                    CboShakhsType.setValue(data.fldTypeShakhsId);
                    var txtName = App.NewShakhs.queryById('txtName');
                    txtName.setValue(data.fldName);
                    var txtFamily = App.NewShakhs.queryById('txtFamily');
                    txtFamily.setValue(data.fldFamily);
                    var txtNationalCode = App.NewShakhs.queryById('txtNationalCode');
                    txtNationalCode.setValue(data.fldNationalCode);
                    var txtShenase = App.NewShakhs.queryById('txtShenase');
                    txtShenase.setValue(data.fldNationalCode);
                    var txtCodeEghtesadi = App.NewShakhs.queryById('txtCodeEghtesadi');
                    txtCodeEghtesadi.setValue(data.fldNationalCode);
                    var txtCodePosti = App.NewShakhs.queryById('txtCodePosti');
                    txtCodePosti.setValue(data.fldCodePosti);
                    var txtCodeShobe = App.NewShakhs.queryById('txtCodeShobe');
                    txtCodeShobe.setValue(data.fldCodeShobe);
                  /*  var txtDesc = App.NewShakhs.queryById('txtDesc');
                    txtDesc.setValue(data.fldDesc);*/
                    var Id = App.NewShakhs.queryById('fldId');
                    Id.setValue(data.fldId);
                }
            });
        }
    }

    function SaveShakhs() {
        var txtName = App.NewShakhs.queryById('txtName');
        var txtFamily = App.NewShakhs.queryById('txtFamily');
        var txtNationalCode = App.NewShakhs.queryById('txtNationalCode');
        var txtShenase = App.NewShakhs.queryById('txtShenase');
        var txtCodeEghtesadi = App.NewShakhs.queryById('txtCodeEghtesadi');
        var txtCodePosti = App.NewShakhs.queryById('txtCodePosti');
        var txtCodeShobe = App.NewShakhs.queryById('txtCodeShobe');
        var CboShakhsType = App.NewShakhs.queryById('CboShakhsType');
        /*var txtDesc = App.NewShakhs.queryById('txtDesc');*/
        var Id = App.NewShakhs.queryById('fldId');

        var er = false;

        var Meli = "";
        if (txtName.validate() == false) {
            er = true;
        }
        if (CboShakhsType.getValue() == "1") {
            if (txtFamily.validate() == false) {
                er = true;
            }
            if (txtNationalCode.validate() == false) {
                er = true;
            }
            Meli = txtNationalCode.getValue();
        }
        else if (CboShakhsType.getValue() == "2") {
            if (txtShenase.validate() == false) {
                er = true;
            }
            if (txtCodeEghtesadi.validate() == false) {
                er = true;
            }
            Meli = txtShenase.getValue();
        }
        if (txtCodePosti.validate() == false) {
            er = true;
        }
        if (txtCodeShobe.validate() == false) {
            er = true;
        }


            if (er == true)
                return;

            var data = {
                fldId: Id.getValue(),
                fldName: txtName.getValue(),
                fldFamily: txtFamily.getValue(),
                fldNationalCode: Meli,
                fldCodeEghtesadi: txtCodeEghtesadi.getValue(),
                fldCodePosti: txtCodePosti.getValue(),
                fldCodeShobe: txtCodeShobe.getValue(),
                fldTypeShakhsId:CboShakhsType.getValue(),
                fldDesc:""
            };

            $.ajax({
                type: "POST",
                url: '/Tax/Shakhs/Save',
                datatype: "json",
                data: JSON.stringify(data),
                contentType: 'application/json',
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Er == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.ShakhsTab.queryById('Grid').store.load();
                    if (Er == 0)
                        ClearShakhs();
                },
                failure: function (data) {
                    alert(data.data);
                }
            });
    }
    //txtName   txtFamily  txtNationalCode   txtShenase  txtCodeEghtesadi  txtCodePosti  txtCodeShobe
    function ClearShakhs() {
        App.NewShakhs.queryById('txtName').setValue("");
        App.NewShakhs.queryById('txtFamily').setValue("");
        App.NewShakhs.queryById('txtNationalCode').setValue("");
        App.NewShakhs.queryById('txtShenase').setValue("");
        App.NewShakhs.queryById('txtCodeEghtesadi').setValue("");
        App.NewShakhs.queryById('txtCodePosti').setValue("");
        App.NewShakhs.queryById('txtCodeShobe').setValue("");
       /* App.NewShakhs.queryById('txtDesc').setValue("");*/
        App.NewShakhs.queryById('fldId').setValue(0);

    }

    function EnterNext() {
        var keyfield = App.ShakhsTab.activeTab.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }
</script>