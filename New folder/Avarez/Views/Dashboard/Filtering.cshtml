@model List<Avarez.Models.sp_KolParvandeHa>
@using Ext.Net.MVC;
@using Ext.Net;
@using Hogaf.ExtNet.UX;
@{
    var X = Html.X();
}
@(X.Panel().Border(false)
        .ID("Filtering")
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .Items(
                    X.TabPanel().ID("FilterTab")
                    .AutoScroll(true).Items(
                        X.Panel().ItemID("GridPanel")
                        .Title("فیلترینگ")
                        .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Label().Text("از تاریخ"),
                            X.PDateField().Width(120).ItemID("txtAzTarikh"),
                            X.Label().Text("تا تاریخ"),
                            X.PDateField().Width(120).ItemID("txtTaTarikh"),
                            X.Button().Text("بارگزاری").Icon(Ext.Net.Icon.PageRefresh).ToolTip("بارگزاری اطلاعات پرونده ها")
                            .Listeners(Li => Li.Click.Handler = "Reload();"),
                            X.Button().Text("فیش ها").Icon(Ext.Net.Icon.Table).ToolTip("نمایش تمام فیش های صادر شده پرونده انتخاب شده")
                            .Listeners(de => { de.Click.Handler = "Fishes();"; }),
                            X.Button().Text("پرداخت ها").Icon(Ext.Net.Icon.Coins).ToolTip("نمایش تمام پرداختی های پرونده انتخاب شده")
                            .Listeners(Li => Li.Click.Handler = "Pardakhtha();"),
                            X.Button().Text("سوابق ثبت شده").Icon(Ext.Net.Icon.PageSave).ToolTip("نمایش تمام سوابق پرونده انتخاب شده")
                            .Listeners(Li => Li.Click.Handler = "Savabegh();"),
                            X.Button().Text("مفاصا حساب ها").Icon(Ext.Net.Icon.TextListBullets).ToolTip("نمایش تمام مفاصا حساب های پرونده انتخاب شده")
                            .Listeners(de =>  de.Click.Handler = "Mafasa();")
                            , X.Button().Text("بایگانی دیجیتال").Icon(Ext.Net.Icon.Picture).ToolTip("نمایش آرشیو الکترونیکی پرونده انتخاب شده")
                            .Listeners(de => de.Click.Handler = "Archive();")
                            , X.Button().Text("تصاویر").Icon(Ext.Net.Icon.Picture).ToolTip("نمایش آرشیو مدارک خودرو")
                            .Listeners(de => de.Click.Handler = "PicCar();")
                            //, X.Button().Text("لیست سیاه").Icon(Ext.Net.Icon.TextAlignJustify).ToolTip("نمایش آرشیو الکترونیکی پرونده انتخاب شده")
                            //.Listeners(de => de.Click.Handler = "BlackList();")
                        )
                    )
                        .ItemID("Grid").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(540)
        //.ColumnWidth(0.6)
        //.Layout(Ext.Net.LayoutType.Column)
                    //.Listeners(l => l.AfterRender.Handler = "var grid=App.EdaratKol.queryById('GridEdaratKol');")
                    .Store(
                        X.StoreForModel()
                        //.Proxy(Html.X().AjaxProxy()
                            //.Url(Url.Action("Read"))
                            //.Reader(Html.X().JsonReader().Root("data"))

                        //)
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                            //.Listeners(l => l.DataChanged.Handler = "App.EdaratKol.queryById('GridEdaratKol').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    //.Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                            Html.X().Column().DataIndex(Model, m => m.fldID).Hidden(true),
                            Html.X().Column().DataIndex(Model, m => m.fldCarID).Hidden(true),
                            Html.X().Column().DataIndex(Model, m => m.fldName).Text("نام مالک").Flex(5),
                            Html.X().Column().DataIndex(Model, m => m.fldMotorNumber).Text("شماره موتور").Flex(5),
                            Html.X().Column().DataIndex(Model, m => m.fldShasiNumber).Text("شماره شاسی").Flex(5),
                            Html.X().Column().DataIndex(Model, m => m.fldVIN).Text("VIN").Flex(5),
                            Html.X().Column().DataIndex(Model, m => m.carModel).Text("تیپ").Flex(5),
                            Html.X().Column().DataIndex(Model, m => m.CarClass).Text("کلاس").Flex(5),
                            Html.X().Column().DataIndex(Model, m => m.fldModel).Text("مدل").Flex(3),
                            Html.X().Column().DataIndex(Model,m=>m.haveArchive).Text("آرشیو").Flex(3)
                                
                    )

                )
                )
            )
        )
)

<script type="text/javascript">
    function PicCar() {
        var SelectedRow = App.Filtering.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Dashboard/PicCar',
                params: {
                    CarID: SelectedRow.data.fldCarID
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function Reload() {
        var txtAzTarikh = App.Filtering.queryById('txtAzTarikh');
        var txtTaTarikh = App.Filtering.queryById('txtTaTarikh');
        Ext.net.DirectMethod.request({
            url: '/Dashboard/Read',
            params: {
                start: txtAzTarikh.rawValue,
                end: txtTaTarikh.rawValue
            },
            success: function (data) {
                App.Filtering.queryById('Grid').getStore().loadData(data);
            }
        });
    }

    function Fishes() {
        var SelectedRow = App.Filtering.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Dashboard/Fishes',
                params: {
                    CarFileId: SelectedRow.data.fldID,
                    containerId: "FilterTab"
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function Pardakhtha() {
        var SelectedRow = App.Filtering.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Dashboard/Pardakhtha',
                params: {
                    CarFileId: SelectedRow.data.fldID,
                    containerId: "FilterTab"
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function Savabegh() {
        var SelectedRow = App.Filtering.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Dashboard/Svabegh',
                params: {
                    CarFileId: SelectedRow.data.fldID,
                    containerId: "FilterTab"
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
     
    function Mafasa() {
        var SelectedRow = App.Filtering.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Dashboard/Mafasa',
                params: {
                    CarFileId: SelectedRow.data.fldID,
                    containerId: "FilterTab"
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function Archive() {
        var SelectedRow = App.Filtering.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Dashboard/Archive',
                params: {
                    CarFileId: SelectedRow.data.fldID,
                    containerId: "FilterTab"
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function BlackList() {
        var SelectedRow = App.Filtering.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Dashboard/BlackList',
                params: {
                    CarFileId: SelectedRow.data.fldID,
                    containerId: "FilterTab"
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>


