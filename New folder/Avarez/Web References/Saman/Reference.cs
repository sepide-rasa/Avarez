//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Avarez.Saman {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'EndpointReference' from namespace 'http://www.w3.org/2005/08/addressing' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSHttpBinding_IBillStateService", Namespace="http://tempuri.org/")]
    public partial class BillStateService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VerifyBillPaymentWithAddDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyBillPaymentGetByTermIdAndDateTimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BillStateService() {
            this.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12;
            this.Url = global::Avarez.Properties.Settings.Default.Avarez_Saman_BillStateService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VerifyBillPaymentWithAddDataCompletedEventHandler VerifyBillPaymentWithAddDataCompleted;
        
        /// <remarks/>
        public event VerifyBillPaymentGetByTermIdAndDateTimeCompletedEventHandler VerifyBillPaymentGetByTermIdAndDateTimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IBillStateService/VerifyBillPaymentWithAddData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VerifyBillPaymentWithAddData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Bill_Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Payment_Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password) {
            object[] results = this.Invoke("VerifyBillPaymentWithAddData", new object[] {
                        Bill_Id,
                        Payment_Id,
                        Username,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyBillPaymentWithAddDataAsync(string Bill_Id, string Payment_Id, string Username, string Password) {
            this.VerifyBillPaymentWithAddDataAsync(Bill_Id, Payment_Id, Username, Password, null);
        }
        
        /// <remarks/>
        public void VerifyBillPaymentWithAddDataAsync(string Bill_Id, string Payment_Id, string Username, string Password, object userState) {
            if ((this.VerifyBillPaymentWithAddDataOperationCompleted == null)) {
                this.VerifyBillPaymentWithAddDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyBillPaymentWithAddDataOperationCompleted);
            }
            this.InvokeAsync("VerifyBillPaymentWithAddData", new object[] {
                        Bill_Id,
                        Payment_Id,
                        Username,
                        Password}, this.VerifyBillPaymentWithAddDataOperationCompleted, userState);
        }
        
        private void OnVerifyBillPaymentWithAddDataOperationCompleted(object arg) {
            if ((this.VerifyBillPaymentWithAddDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyBillPaymentWithAddDataCompleted(this, new VerifyBillPaymentWithAddDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IBillStateService/VerifyBillPaymentGetByTermIdAndDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VerifyBillPaymentGetByTermIdAndDateTime(System.DateTime FromDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool FromDateSpecified, System.DateTime ToDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ToDateSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password) {
            object[] results = this.Invoke("VerifyBillPaymentGetByTermIdAndDateTime", new object[] {
                        FromDate,
                        FromDateSpecified,
                        ToDate,
                        ToDateSpecified,
                        Username,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyBillPaymentGetByTermIdAndDateTimeAsync(System.DateTime FromDate, bool FromDateSpecified, System.DateTime ToDate, bool ToDateSpecified, string Username, string Password) {
            this.VerifyBillPaymentGetByTermIdAndDateTimeAsync(FromDate, FromDateSpecified, ToDate, ToDateSpecified, Username, Password, null);
        }
        
        /// <remarks/>
        public void VerifyBillPaymentGetByTermIdAndDateTimeAsync(System.DateTime FromDate, bool FromDateSpecified, System.DateTime ToDate, bool ToDateSpecified, string Username, string Password, object userState) {
            if ((this.VerifyBillPaymentGetByTermIdAndDateTimeOperationCompleted == null)) {
                this.VerifyBillPaymentGetByTermIdAndDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyBillPaymentGetByTermIdAndDateTimeOperationCompleted);
            }
            this.InvokeAsync("VerifyBillPaymentGetByTermIdAndDateTime", new object[] {
                        FromDate,
                        FromDateSpecified,
                        ToDate,
                        ToDateSpecified,
                        Username,
                        Password}, this.VerifyBillPaymentGetByTermIdAndDateTimeOperationCompleted, userState);
        }
        
        private void OnVerifyBillPaymentGetByTermIdAndDateTimeOperationCompleted(object arg) {
            if ((this.VerifyBillPaymentGetByTermIdAndDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyBillPaymentGetByTermIdAndDateTimeCompleted(this, new VerifyBillPaymentGetByTermIdAndDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VerifyBillPaymentWithAddDataCompletedEventHandler(object sender, VerifyBillPaymentWithAddDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyBillPaymentWithAddDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyBillPaymentWithAddDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VerifyBillPaymentGetByTermIdAndDateTimeCompletedEventHandler(object sender, VerifyBillPaymentGetByTermIdAndDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyBillPaymentGetByTermIdAndDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyBillPaymentGetByTermIdAndDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591